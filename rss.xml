<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ZZT Blog</title>
    <link>https://zztweb.top/</link>
    
    <atom:link href="https://zztweb.top/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>点滴积累知识</description>
    <pubDate>Thu, 23 Dec 2021 10:18:10 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>网络基础课程大作业网站说明</title>
      <link>https://zztweb.top/posts/d46a3460.html</link>
      <guid>https://zztweb.top/posts/d46a3460.html</guid>
      <pubDate>Sun, 18 Oct 2020 08:15:08 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="张泽韬-测控1902-20194162"><a href="#张泽韬-测控1902-20194162" class="headerlink" title="张泽韬 测控1902 20194162"></a>张泽韬 测控1902 20194162</h2><h2 id="安装核心工具-Hexo"><a href="#安装核心工具-Hexo" class="headerlink" title="安装核心工具-Hexo"></a>安装核心工具-Hexo</h2><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><a href="https://npm.taobao.org/mirrors/git-for-windows/">下载路径</a></p><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>版本 建议12.19.0</p><p><a href="http://nodejs.cn/download/">下载路径</a></p><h3 id="安装安装hexo"><a href="#安装安装hexo" class="headerlink" title="安装安装hexo"></a>安装安装hexo</h3><p>cnpm</p><h3 id="安装vscode及其必要插件"><a href="#安装vscode及其必要插件" class="headerlink" title="安装vscode及其必要插件"></a>安装vscode及其必要插件</h3><ul><li>chinese</li><li>markdown all in one</li></ul><h2 id="使用hexo"><a href="#使用hexo" class="headerlink" title="使用hexo"></a>使用hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="我的网站"><a href="#我的网站" class="headerlink" title="我的网站"></a>我的网站</h2><p><a href="https://zztweb.top/">张泽韬的个人博客</a></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/%E4%BD%9C%E4%B8%9A/">作业</category>
      
      <category domain="https://zztweb.top/tags/%E5%A4%A7%E5%AD%A6/">大学</category>
      
      
      <comments>https://zztweb.top/posts/d46a3460.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux下配置Aria2下载服务器以及自动更新Aria2的bt-tracker列表</title>
      <link>https://zztweb.top/posts/2b5ad707.html</link>
      <guid>https://zztweb.top/posts/2b5ad707.html</guid>
      <pubDate>Fri, 12 Jun 2020 02:17:48 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我配置Aria2服务器的环境为<code>centos-7.8.2003</code>版本，其他Linux发行版应该只有服务配置的步骤有可能不同，其他部分应该都相同</p><h2 id="配置Aria2下载服务器"><a href="#配置Aria2下载服务器" class="headerlink" title="配置Aria2下载服务器"></a>配置Aria2下载服务器</h2><h3 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install aria2</span><br></pre></td></tr></table></figure><h3 id="配置aria2-conf设置文档"><a href="#配置aria2-conf设置文档" class="headerlink" title="配置aria2.conf设置文档"></a>配置aria2.conf设置文档</h3><p>在<code>/etc/aria2</code>下建立三个文件</p><ul><li>aria2.conf</li><li>aria2.log</li><li>aria2.session</li></ul><blockquote><p><code>aria2.conf</code>为Aria2程序的配置文档，所有的设置都在这个文档里<br><code>aria2.log</code>为Aria2运行的日志<br><code>aria2.session</code>为Aria2保存下载任务的文件</p></blockquote><p>编辑<code>aria2.conf</code>文档，在这里列出我使用的一些设置</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 文件保存相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class="line">dir=/home/aria_download/</span><br><span class="line"><span class="meta"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class="line"><span class="meta">#disk-cache=32M</span></span><br><span class="line"><span class="meta"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class="line"><span class="meta"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class="line"><span class="meta"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class="line"><span class="meta"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class="line"><span class="meta">#file-allocation=none</span></span><br><span class="line"><span class="meta"># 断点续传</span></span><br><span class="line">continue=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 下载连接相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class="line"><span class="meta">#max-concurrent-downloads=5</span></span><br><span class="line"><span class="meta"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class="line">max-connection-per-server=<span class="number">16</span></span><br><span class="line"><span class="meta"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class="line"><span class="meta"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class="line">min-split-size=<span class="number">10</span>M</span><br><span class="line"><span class="meta"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class="line"><span class="meta">#split=5</span></span><br><span class="line"><span class="meta"># 整体下载速度限制, 运行时可修改, 默认:0</span></span><br><span class="line"><span class="meta">#max-overall-download-limit=0</span></span><br><span class="line"><span class="meta"># 单个任务下载速度限制, 默认:0</span></span><br><span class="line"><span class="meta">#max-download-limit=0</span></span><br><span class="line"><span class="meta"># 整体上传速度限制, 运行时可修改, 默认:0</span></span><br><span class="line"><span class="meta">#max-overall-upload-limit=0</span></span><br><span class="line"><span class="meta"># 单个任务上传速度限制, 默认:0</span></span><br><span class="line"><span class="meta">#max-upload-limit=0</span></span><br><span class="line"><span class="meta"># 禁用IPv6, 默认:false</span></span><br><span class="line"><span class="meta">#disable-ipv6=true</span></span><br><span class="line"><span class="meta"># 连接超时时间, 默认:60</span></span><br><span class="line"><span class="meta">#timeout=60</span></span><br><span class="line"><span class="meta"># 最大重试次数, 设置为0表示不限制重试次数, 默认:5</span></span><br><span class="line"><span class="meta">#max-tries=5</span></span><br><span class="line"><span class="meta"># 设置重试等待的秒数, 默认:0</span></span><br><span class="line"><span class="meta">#retry-wait=0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## 进度保存相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 从会话文件中读取下载任务</span></span><br><span class="line">input-file=/etc/aria2/aria2.session</span><br><span class="line"><span class="meta"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span></span><br><span class="line">save-session=/etc/aria2/aria2.session</span><br><span class="line"><span class="meta"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class="line"><span class="meta">#save-session-interval=60</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## RPC相关设置 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 启用RPC, 默认:false</span></span><br><span class="line">enable-rpc=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 允许所有来源, 默认:false</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 允许非外部访问, 默认:false</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class="line">event-poll=select</span><br><span class="line"><span class="meta"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span></span><br><span class="line">rpc-listen-port=<span class="number">6800</span></span><br><span class="line"><span class="meta"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class="line">rpc-secret=</span><br><span class="line"><span class="meta"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="meta">#rpc-user=&lt;USER&gt;</span></span><br><span class="line"><span class="meta"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="meta">#rpc-passwd=&lt;PASSWD&gt;</span></span><br><span class="line"><span class="meta"># 是否启用 RPC 服务的 SSL/TLS 加密,</span></span><br><span class="line"><span class="meta"># 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接</span></span><br><span class="line"><span class="meta">#rpc-secure=true</span></span><br><span class="line"><span class="meta"># 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,</span></span><br><span class="line"><span class="meta"># 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥</span></span><br><span class="line"><span class="meta">#rpc-certificate=/path/to/certificate.pem</span></span><br><span class="line"><span class="meta"># 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件</span></span><br><span class="line"><span class="meta">#rpc-private-key=/path/to/certificate.key</span></span><br><span class="line"></span><br><span class="line"><span class="meta">## BT/PT下载相关 ##</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class="line"><span class="meta">#follow-torrent=true</span></span><br><span class="line"><span class="meta"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span></span><br><span class="line">listen-port=<span class="number">51413</span></span><br><span class="line"><span class="meta"># 单个种子最大连接数, 默认:55</span></span><br><span class="line"><span class="meta">#bt-max-peers=55</span></span><br><span class="line"><span class="meta"># 打开DHT功能, PT需要禁用, 默认:true</span></span><br><span class="line">enable-dht=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 打开IPv6 DHT功能, PT需要禁用</span></span><br><span class="line"><span class="meta">#enable-dht6=false</span></span><br><span class="line"><span class="meta"># DHT网络监听端口, 默认:6881-6999</span></span><br><span class="line"><span class="meta">#dht-listen-port=6881-6999</span></span><br><span class="line"><span class="meta"># 本地节点查找, PT需要禁用, 默认:false</span></span><br><span class="line"><span class="meta">#bt-enable-lpd=false</span></span><br><span class="line"><span class="meta"># 种子交换, PT需要禁用, 默认:true</span></span><br><span class="line">enable-peer-exchange=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 每个种子限速, 对少种的PT很有用, 默认:50K</span></span><br><span class="line"><span class="meta">#bt-request-peer-speed-limit=50K</span></span><br><span class="line"><span class="meta"># 客户端伪装, PT需要</span></span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/<span class="number">2.77</span></span><br><span class="line"><span class="meta"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span></span><br><span class="line">seed-ratio=<span class="number">0</span></span><br><span class="line"><span class="meta"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class="line"><span class="meta"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class="line"><span class="meta">#force-save=false</span></span><br><span class="line"><span class="meta"># BT校验相关, 默认:true</span></span><br><span class="line"><span class="meta">#bt-hash-check-seed=true</span></span><br><span class="line"><span class="meta"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class="line">bt-seed-unverified=<span class="literal">true</span></span><br><span class="line"><span class="meta"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class="line">bt-save-metadata=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>其中需要读者可能修改的选项有</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class="line"><span class="attribute">dir</span>=/home/aria_download/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从会话文件中读取下载任务</span></span><br><span class="line"><span class="attribute">input-file</span>=/etc/aria2/aria2.session</span><br><span class="line"><span class="comment"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span></span><br><span class="line"><span class="attribute">save-session</span>=/etc/aria2/aria2.session</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用RPC, 默认:false</span></span><br><span class="line"><span class="attribute">enable-rpc</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 允许所有来源, 默认:false</span></span><br><span class="line"><span class="attribute">rpc-allow-origin-all</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 允许非外部访问, 默认:false</span></span><br><span class="line"><span class="attribute">rpc-listen-all</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class="line"><span class="attribute">event-poll</span>=select</span><br><span class="line"><span class="comment"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span></span><br><span class="line"><span class="attribute">rpc-listen-port</span>=6800</span><br><span class="line"><span class="comment"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class="line">rpc-secret=</span><br></pre></td></tr></table></figure><p>然后保存即可</p>]]></content:encoded>
      
      
      
      
      <comments>https://zztweb.top/posts/2b5ad707.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows下批量重命名文件</title>
      <link>https://zztweb.top/posts/5222b711.html</link>
      <guid>https://zztweb.top/posts/5222b711.html</guid>
      <pubDate>Wed, 10 Jun 2020 12:34:31 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="输出当前文件夹中所有文件名到Excel表格"><a href="#输出当前文件夹中所有文件名到Excel表格" class="headerlink" title="输出当前文件夹中所有文件名到Excel表格"></a>输出当前文件夹中所有文件名到<code>Excel</code>表格</h2><p>打开<code>cmd</code>，转到需要批量重命名的文件夹中，然后在<code>cmd</code>中键入下面的指令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span>  /b&gt;<span class="built_in">rename</span>.xls</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610204426.png" alt="cmd第一步"></p><h2 id="在Excel中编辑数据"><a href="#在Excel中编辑数据" class="headerlink" title="在Excel中编辑数据"></a>在Excel中编辑数据</h2><ul><li>先在第一列整理好需要重命名的文件名<ul><li><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610204622.png" alt="Excel第一步"></li></ul></li><li>然后在第二列用Excel便捷的列出重命名后的文件名<ul><li><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610204753.png" alt="excel第二步"></li></ul></li><li>最后使用<code>CONCATENATE</code>函数或者<code>&amp;</code>符号在第三列拼接处重命名批处理命令<ul><li><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610205026.png" alt="Excel第三步"></li></ul></li></ul><h2 id="把Excel拼接出的批处理命令拷贝到批处理文件中"><a href="#把Excel拼接出的批处理命令拷贝到批处理文件中" class="headerlink" title="把Excel拼接出的批处理命令拷贝到批处理文件中"></a>把Excel拼接出的批处理命令拷贝到批处理文件中</h2><blockquote><p>注：批处理文件需要和需要重命名的文件同目录<br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610205155.png" alt="批处理第一步"></p></blockquote><p>保存，双击批处理文件，批量重命名完成<br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200610210119.png" alt="批量重命名完成"></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E6%96%B9%E6%B3%95%E7%A7%AF%E7%B4%AF/">方法积累</category>
      
      
      <category domain="https://zztweb.top/tags/%E9%87%8D%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6/">重命名文件</category>
      
      <category domain="https://zztweb.top/tags/%E6%96%B9%E6%B3%95%E7%A7%AF%E7%B4%AF/">方法积累</category>
      
      
      <comments>https://zztweb.top/posts/5222b711.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>重新返回WordPress记录</title>
      <link>https://zztweb.top/posts/12bdfd9a.html</link>
      <guid>https://zztweb.top/posts/12bdfd9a.html</guid>
      <pubDate>Wed, 10 Jun 2020 09:22:17 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>有一天，我发现了阿里云对学生购买服务器有优惠<a href="https://promotion.aliyun.com/ntms/act/campus2018.html">云翼计划</a>于是就买了一台试试，然后就突然想把当初因为没有可用的空间而使用<code>Hexo</code>做记录的博客再次搬回<code>WordPress</code></p><p>毕竟<code>WordPress</code>实在是太方便了</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ul><li>购买服务器</li><li>购买域名</li><li>搭建网站</li></ul><h2 id="错误记录"><a href="#错误记录" class="headerlink" title="错误记录"></a>错误记录</h2><ol><li><code>WordPress</code>设置固定连接和伪静态导致文章页面404</li><li><code>TOC+</code>插件设置不完全导致文章目录出现大量问题</li><li><code>markdown</code>语法仍然在<code>WordPress</code>不能获得很好的支持</li></ol>]]></content:encoded>
      
      
      
      
      <comments>https://zztweb.top/posts/12bdfd9a.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>电脑开机提示error:no_such_partition</title>
      <link>https://zztweb.top/posts/c0ca22a7.html</link>
      <guid>https://zztweb.top/posts/c0ca22a7.html</guid>
      <pubDate>Fri, 29 May 2020 05:48:30 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="发生原因"><a href="#发生原因" class="headerlink" title="发生原因"></a>发生原因</h2><p>根据我的推测，电脑开机失败提示<code>error: no such partiton</code>的原因极大可能是GRUB引导程序无法找到相应的系统启动分区</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li>键入命令<code>ls</code>查看所有的磁盘分区</li><li>键入命令<code>set</code>查看当前设置的引导分区</li><li>键入命令<code>set prefix=</code>设置grub启动文件所在位置</li><li>键入命令<code>set root=</code>设置引导分区<ul><li><blockquote><p>注：如果不知道自己系统的引导分区在哪里，那么挨个尝试吧</p></blockquote></li></ul></li><li>最后键入命令<code>set</code>查看是否设置完毕</li><li>输入<code>insmod normal</code>之后继续输入<code>normal</code>命令，启动系统</li><li>在进入系统后需要刷新grub的引导文件，防止下次启动时不能正常引导系统启动<ul><li>在root权限下输入以下命令：<ul><li><code>update-grub</code></li><li><code>grub-install 这里填写你的引导分区</code></li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E7%94%B5%E8%84%91%E7%9B%B8%E5%85%B3/">电脑相关</category>
      
      
      <category domain="https://zztweb.top/tags/%E7%94%B5%E8%84%91%E7%9B%B8%E5%85%B3/">电脑相关</category>
      
      <category domain="https://zztweb.top/tags/%E5%BC%80%E6%9C%BA%E5%A4%B1%E8%B4%A5/">开机失败</category>
      
      <category domain="https://zztweb.top/tags/no-such-partition/">no_such_partition</category>
      
      
      <comments>https://zztweb.top/posts/c0ca22a7.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux处理Windows文本时去除“r”符号</title>
      <link>https://zztweb.top/posts/85d45c87.html</link>
      <guid>https://zztweb.top/posts/85d45c87.html</guid>
      <pubDate>Thu, 28 May 2020 23:25:53 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在Windows系统中，默认的换行符为<code>\r\n</code>；而在Linux系统中，默认的换行符为<code>\n</code></p><p>而这种区别导致的后果是:某些需要格式或输入字符的程序可能不能很好地兼容这两种换行符</p><h2 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h2><p>使用<code>vi/vim</code>编辑文本，同时更改文本格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim 文件名</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fileformat=unix</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/r/">\r</category>
      
      
      <comments>https://zztweb.top/posts/85d45c87.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Manjaro-Linux安装AnBox实现Linux直接运行安卓程序</title>
      <link>https://zztweb.top/posts/33b17553.html</link>
      <guid>https://zztweb.top/posts/33b17553.html</guid>
      <pubDate>Sun, 03 May 2020 05:35:09 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>AnBox相比较其他安卓模拟器的优点：直接让安卓程序运行在Linux上，几乎没有性能损耗</p><p>当然也有着一些缺点：只能运行支持x86CPU的安卓程序</p><p>在这里记录一下manjaro安装anbox时的经过</p><h2 id="安装源"><a href="#安装源" class="headerlink" title="安装源"></a>安装源</h2><p>AUR里有anbox的全部安装源</p><p>运行如下命令即可安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -s anbox-modules-dkms-git</span><br><span class="line">yay -s anbox-git</span><br></pre></td></tr></table></figure><h2 id="安装adb工具"><a href="#安装adb工具" class="headerlink" title="安装adb工具"></a>安装adb工具</h2><p>anbox不支持界面安装，只能通过adb调试的方式安装apk</p><h2 id="启动anbox核心服务"><a href="#启动anbox核心服务" class="headerlink" title="启动anbox核心服务"></a>启动anbox核心服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe ashmem_linux</span><br><span class="line">sudo modprobe binder_linux</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start anbox-container-manager.service</span><br></pre></td></tr></table></figure><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><p>其实在图形化界面是可以设置anbox安卓的有关设置，只是安装apk貌似只能通过adb安装，因为默认安卓系统里是没有Google商店的</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/Manjaro/">Manjaro</category>
      
      
      <comments>https://zztweb.top/posts/33b17553.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>codeblocks设置自动补全C标准库函数</title>
      <link>https://zztweb.top/posts/1710e6e2.html</link>
      <guid>https://zztweb.top/posts/1710e6e2.html</guid>
      <pubDate>Fri, 01 May 2020 05:11:27 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>最近在<code>Linux</code>上编写C程序，用的<code>codeblocks</code>作为编写软件，发现了一个貌似只有部分<code>Linux</code>系统里会出现的问题</p><p><code>codeblocks</code>不会自动补全C标准库函数，也不会提示C标准库函数的参数。虽然其实没啥太大影响，但总有那么脑子不灵光的时候就忘了几个函数的参数顺序，尤其是当这几个参数类型一样的时候，调试的灾难。</p><p>所以就需要修复<code>codeblocks</code>的自动补全功能和参数提示功能。</p><p>我在<code>Ubuntu</code>、<code>Win10</code>、<code>Manjaro Linux</code>三个系统都测试了一下，其中只有<code>Manjaro Linux</code>下<code>codeblocks</code>对C标准库函数的自动补全功能会失效，但是编译没有错误，由此猜测是该系统中C标准库文件在<code>codeblocks</code>自动补全时的引用失效。</p><p>解决方案：把<code>/usr/include/</code>添加在<code>codeblocks</code>的头文件索引目录里就行了，如下图：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200501134400.png"></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/codeblocks/">codeblocks</category>
      
      
      <comments>https://zztweb.top/posts/1710e6e2.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GTK的一些记录</title>
      <link>https://zztweb.top/posts/62378a77.html</link>
      <guid>https://zztweb.top/posts/62378a77.html</guid>
      <pubDate>Wed, 29 Apr 2020 08:49:46 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="Glade的自动连接信号与回调函数"><a href="#Glade的自动连接信号与回调函数" class="headerlink" title="Glade的自动连接信号与回调函数"></a>Glade的自动连接信号与回调函数</h2><p>这个功能是不能用滴，老老实实写回调函数吧</p><h2 id="GTK在Manjaro-KDE环境下所有的界面都没有菜单"><a href="#GTK在Manjaro-KDE环境下所有的界面都没有菜单" class="headerlink" title="GTK在Manjaro+KDE环境下所有的界面都没有菜单"></a>GTK在Manjaro+KDE环境下所有的界面都没有菜单</h2><p>仔细找找有没有安装<code>全局菜单</code>这个小部件，GTK的菜单可以再这个小部件里找到</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/GTK/">GTK</category>
      
      
      <comments>https://zztweb.top/posts/62378a77.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux下的进程内存检查工具-valgrind</title>
      <link>https://zztweb.top/posts/d2593696.html</link>
      <guid>https://zztweb.top/posts/d2593696.html</guid>
      <pubDate>Mon, 27 Apr 2020 03:31:18 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="使用此工具原因"><a href="#使用此工具原因" class="headerlink" title="使用此工具原因"></a>使用此工具原因</h2><p>C语言相对其他系语言最大的不同就是可方便地直接操纵内存，有时对数据操作的时候采用直接操作内存的方式简直是爽的飞起。但是，任何事物都具有两面性，直接操作内存导致的数据错误是编译器查不出来的，而这种错误只会在程序结束后报个错，错在哪里都不知道，绝对是程序员的噩梦：三天调试出一处内存越界的我～～～。</p><h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><p>linux系统安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S valgrind</span><br></pre></td></tr></table></figure><p>我几乎不用windows写C，环境配置太麻烦了</p><h2 id="简易使用"><a href="#简易使用" class="headerlink" title="简易使用"></a>简易使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valgrind --tool=memcheck --leak-check=full --track-origins=yes -s</span><br></pre></td></tr></table></figure><p>在后面加上你运行程序的命令即可</p><p>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valgrind --tool=memcheck --leak-check=full --track-origins=yes -s ./shell_sys</span><br></pre></td></tr></table></figure><p>这是我编写的一个学习项目</p><p>在输出信息中可以找到如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">==13854== Invalid <span class="built_in">read</span> of size 8</span><br><span class="line">==13854==    at 0x10DC57: view_p_and_s (gui.c:281)</span><br><span class="line">==13854==    by 0x10EBA6: ceo_window_add_p_button_clicked (gui.c:496)</span><br><span class="line">==13854==    by 0x55DA09F: g_signal_emit_valist (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x55DB6AF: g_signal_emit (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x4C2828E: ??? (<span class="keyword">in</span> /usr/lib/libgtk-3.so.0.2410.7)</span><br><span class="line">==13854==    by 0x4C28364: ??? (<span class="keyword">in</span> /usr/lib/libgtk-3.so.0.2410.7)</span><br><span class="line">==13854==    by 0x55F5619: g_closure_invoke (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x55D6AD3: ??? (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x55D9AB8: g_signal_emit_valist (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x55DB6AF: g_signal_emit (<span class="keyword">in</span> /usr/lib/libgobject-2.0.so.0.6400.2)</span><br><span class="line">==13854==    by 0x4C26870: ??? (<span class="keyword">in</span> /usr/lib/libgtk-3.so.0.2410.7)</span><br><span class="line">==13854==    by 0x4C5F56C: ??? (<span class="keyword">in</span> /usr/lib/libgtk-3.so.0.2410.7)</span><br><span class="line">==13854==  Address 0xa424b08 is 8 bytes after a block of size 400 alloc<span class="string">&#x27;d</span></span><br><span class="line"><span class="string">==13854==    at 0x483BD7B: realloc (vg_replace_malloc.c:836)</span></span><br><span class="line"><span class="string">==13854==    by 0x10CE6E: ceo_gui (gui.c:88)</span></span><br><span class="line"><span class="string">==13854==    by 0x10E5B2: load_button (gui.c:405)</span></span><br><span class="line"><span class="string">==13854==    by 0x55DA09F: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x55DB6AF: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x49CD530: ??? (in /usr/lib/libgtk-3.so.0.2410.7)</span></span><br><span class="line"><span class="string">==13854==    by 0x55F5619: g_closure_invoke (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x55D697D: ??? (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x55D95CB: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x55DB6AF: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.6400.2)</span></span><br><span class="line"><span class="string">==13854==    by 0x4C4DEF0: gtk_accel_group_activate (in /usr/lib/libgtk-3.so.0.2410.7)</span></span><br><span class="line"><span class="string">==13854==    by 0x4C4E04D: gtk_accel_groups_activate (in /usr/lib/libgtk-3.so.0.2410.7)</span></span><br></pre></td></tr></table></figure><p><code>Invalid read of size 8</code>表示内存越界访问了8个字节大小</p><p>在后面则是这个越界的详细信息</p><p>还有一些其他的信息输出，比如内存泄露等等。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>在我的理解中，这个工具就是虚拟出一个新的CPU和内存空间，然后吧程序放在这个新的系统中运行，但是现在只能虚拟出32位的环境，其实没啥影响</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/valgrind/">valgrind</category>
      
      
      <comments>https://zztweb.top/posts/d2593696.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C-GTK常用函数功能整理</title>
      <link>https://zztweb.top/posts/19640569.html</link>
      <guid>https://zztweb.top/posts/19640569.html</guid>
      <pubDate>Wed, 22 Apr 2020 11:12:05 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>GTK版本：3.0</p><p>资料来源：GTK官网原文文档</p><h2 id="GtkWindow"><a href="#GtkWindow" class="headerlink" title="GtkWindow"></a>GtkWindow</h2><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td><code>gtk_window_new</code></td><td>创建一个窗体</td></tr><tr><td><code>gtk_window_set_title</code></td><td>设置窗体标题</td></tr><tr><td><code>gtk_window_set_resizable</code></td><td>设置窗体是否可以被用户改变大小</td></tr><tr><td><code>gtk_window_get_resizable</code></td><td>获得窗体是否可以被用户改变大小的设置</td></tr><tr><td><code>gtk_window_add_accel_group</code></td><td>将<code>accel_group</code>同窗体连接</td></tr><tr><td><code>gtk_window_remove_accle_group</code></td><td>将<code>accel_group</code>对窗体的影响撤消掉</td></tr><tr><td><code>gtk_window_activate_focus</code></td><td>激活窗体当前聚焦的部件</td></tr><tr><td><code>gtk_window_activate_default</code></td><td>激活窗体默认的部件</td></tr><tr><td><code>gtk_window_set_modal</code></td><td>设置窗体模式是可操作或不可操作模式</td></tr><tr><td><code>gtk_window_set_default_size</code></td><td>设置窗体的默认大小</td></tr><tr><td><code>gtk_window_set_geometry_hints</code></td><td></td></tr><tr><td><code>gtk_window_set_gravity</code></td><td>设置窗体重力方向</td></tr><tr><td><code>gtk_window_get_gravity</code></td><td>获得窗体重力方向</td></tr><tr><td><code>gtk_window_set_position</code></td><td>设置窗体的初始位置</td></tr><tr><td><code>gtk_window_set_transient_for</code></td><td></td></tr><tr><td><code>gtk_window_set_attached_to</code></td><td></td></tr><tr><td><code>gtk_window_set_destroy_with_parent</code></td><td>销毁窗体</td></tr><tr><td><code>gtk_window_set_hide_titlebar_when_maximized</code></td><td>设置是否在最大化时尝试隐藏标题栏</td></tr><tr><td><code>gtk_window_set_screen</code></td><td>设置窗体显示的屏幕</td></tr><tr><td><code>gtk_window_get_screen</code></td><td>获得窗体所在屏幕</td></tr><tr><td><code>gtk_window_is_active</code></td><td>获得当前窗体是否是顶层活动状态</td></tr><tr><td><code>gtk_window_is_maximized</code></td><td>获取窗体最大化状态</td></tr><tr><td><code>gtk_window_has_toplevel_focus</code></td><td>获取当前输入焦点是否在窗体</td></tr><tr><td><code>gtk_window_list_toplevels</code></td><td>获取当前顶层窗体列表</td></tr><tr><td><code>gtk_window_add_mnemonic</code></td><td>添加一个标记在窗体上</td></tr><tr><td><code>gtk_window_remove_mnemonic</code></td><td>删除窗体的一个标记</td></tr><tr><td><code>gtk_window_mnemonic_activate</code></td><td>激活与标记有关的目标</td></tr><tr><td><code>gtk_window_activate_key</code></td><td>激活窗体的标记</td></tr><tr><td><code>gtk_window_propagate_key_event</code></td><td></td></tr><tr><td><code>gtk_window_get_focus</code></td><td>获得窗体中聚焦的部件</td></tr><tr><td><code>gtk_window_set_focus</code></td><td></td></tr><tr><td><code>gtk_window_get_default_widget</code></td><td>获得窗体的默认部件</td></tr><tr><td><code>gtk_window_set_default</code></td><td>设置窗体的默认部件</td></tr><tr><td><code>gtk_window_present_with_time</code></td><td></td></tr><tr><td><code>gtk_window_close</code></td><td>关闭窗体</td></tr><tr><td><code>gtk_window_iconify</code></td><td>指定窗体图标最小化</td></tr><tr><td><code>gtk_window_deiconify</code></td><td>取消窗体图标最小化</td></tr><tr><td><code>gtk_window_stick</code></td><td>设置窗体具有磁力</td></tr><tr><td><code>gtk_window_unstick</code></td><td>取消窗体的磁力属性</td></tr><tr><td><code>gtk_window_maximize</code></td><td>尝试最大化窗体</td></tr><tr><td><code>gtk_window_unmaximize</code></td><td>尝试取消最大化窗体</td></tr><tr><td><code>gtk_window_fullscreen</code></td><td>尝试全屏窗体</td></tr><tr><td><code>gtk_window_fullscreen_on_monitor</code></td><td>尝试全屏窗体</td></tr><tr><td><code>gtk_window_unfullscreen</code></td><td>尝试取消全屏窗体</td></tr><tr><td><code>gtk_window_set_keep_above</code></td><td>尝试置顶窗体</td></tr><tr><td><code>gtk_window_set_keep_below</code></td><td>尝试置底窗体</td></tr><tr><td><code>gtk_window_begin_resize_drag</code></td><td>调整窗体大小</td></tr><tr><td><code>gtk_window_begin_move_drag</code></td><td>调整窗体位置</td></tr><tr><td><code>gtk_window_set_decorated</code></td><td>尝试取消掉窗体的额外修饰</td></tr><tr><td><code>gtk_window_set_deletable</code></td><td>尝试取消掉窗体的关闭按钮</td></tr><tr><td><code>gtk_window_set_mnemonic_modifier</code></td><td>设置窗体的标记</td></tr><tr><td><code>gtk_window_set_type_hint</code></td><td></td></tr><tr><td><code>gtk_window_set_skip_taskbar_hint</code></td><td></td></tr><tr><td><code>gtk_window_set_skip_pager_hint</code></td><td></td></tr><tr><td><code>gtk_window_set_urgency_hint</code></td><td></td></tr><tr><td><code>gtk_window_set_accept_focus</code></td><td></td></tr><tr><td><code>gtk_window_set_focus_on_map</code></td><td></td></tr><tr><td><code>gtk_window_set_startup_id</code></td><td></td></tr><tr><td><code>gtk_window_set_role</code></td><td></td></tr></tbody></table><h2 id="GtkFixed"><a href="#GtkFixed" class="headerlink" title="GtkFixed"></a>GtkFixed</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td><code>gtk_fixed_new</code></td><td>新建一个新的容器</td></tr><tr><td><code>gtk_fixed_put</code></td><td>在容器的给定位置添加部件</td></tr><tr><td><code>gtk_fixed_move</code></td><td>移动容器中的一个部件到指定位置</td></tr></tbody></table><h2 id="GtkGrid"><a href="#GtkGrid" class="headerlink" title="GtkGrid"></a>GtkGrid</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td><code>gtk_grid_new</code></td><td>创建一个新的网格部件</td></tr><tr><td><code>gtk_grid_attach</code></td><td>将一个部件添加到网格</td></tr><tr><td><code>gtk_grid_attach_next_to</code></td><td>将一个部件添加到一个给定部件周围</td></tr><tr><td><code>gtk_grid_get_child_at</code></td><td></td></tr><tr><td><code>gtk_grid_insert_row</code></td><td>在指定位置插入一行</td></tr><tr><td><code>gtk_grid_insert_column</code></td><td>在指定位置插入一列</td></tr><tr><td><code>gtk_grid_remove_row</code></td><td>删除指定一行</td></tr><tr><td><code>gtk_grid_remove_column</code></td><td>删除指定一列</td></tr><tr><td><code>gtk_grid_insert_next_to</code></td><td>在指定位置插入行或列</td></tr><tr><td><code>gtk_grid_set_row_homogeneous</code></td><td>设置是否所有的行都具有相同的高度</td></tr><tr><td><code>gtk_grid_get_row_homogeneous</code></td><td>获得是否所有的行都具有相同的高度</td></tr><tr><td><code>gtk_grid_set_row_spacing</code></td><td>设置网格行之间的间距</td></tr><tr><td><code>gtk_grid_get_row_spacing</code></td><td>获得网格行之间的间距</td></tr><tr><td><code>gtk_grid_set_column_homogeneous</code></td><td>设置是否所有的列都具有相同的宽度</td></tr><tr><td><code>gtk_grid_get_column_homogeneous</code></td><td>获得是否所有的列都具有相同的宽度</td></tr><tr><td><code>gtk_grid_set_column_spacing</code></td><td>设置网格列之间的间距</td></tr><tr><td><code>gtk_grid_get_column_spacing</code></td><td>获得网格列之间的间距</td></tr><tr><td><code>gtk_grid_get_baseline_row</code></td><td>获得网格全局基线的行</td></tr><tr><td><code>gtk_grid_set_baseline_row</code></td><td>设置网格全局基线的行</td></tr><tr><td><code>gtk_grid_set_row_baseline_position</code></td><td>设置基准线上网格的应如何定位</td></tr><tr><td><code>gtk_grid_get_row_baseline_position</code></td><td>获得基准线上网格的应如何定位的设置</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C%EF%BC%8CGTK/">C，GTK</category>
      
      
      <comments>https://zztweb.top/posts/19640569.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>manjaro下MySQL数据库的安装与可视化工具安装</title>
      <link>https://zztweb.top/posts/20be8d71.html</link>
      <guid>https://zztweb.top/posts/20be8d71.html</guid>
      <pubDate>Tue, 21 Apr 2020 00:16:09 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="mysql安装与配置"><a href="#mysql安装与配置" class="headerlink" title="mysql安装与配置"></a>mysql安装与配置</h2><p><code>manjaro</code>对<code>mysql</code>的封装已经非常好了，做到了开箱即用，我安装过程中没有报错</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mysql</span><br></pre></td></tr></table></figure><blockquote><p>yay真好用</p></blockquote><h3 id="初始化mysql"><a href="#初始化mysql" class="headerlink" title="初始化mysql"></a>初始化mysql</h3><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure><blockquote><p>注：<code>--datadir</code>后面的路径是你的<code>mysql</code>数据存放路径，默认就是<code>/var/lib/mysql</code></p></blockquote><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mysqld.service</span><br></pre></td></tr></table></figure><h3 id="查看mysql状态"><a href="#查看mysql状态" class="headerlink" title="查看mysql状态"></a>查看mysql状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><p>如果输出如下或相似，便启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysqld.service - MySQL Server</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">     Active: active (running) since Tue 2020-04-21 08:05:26 CST; 29min ago</span><br><span class="line">       Docs: man:mysqld(8)</span><br><span class="line">             http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">    Process: 785 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 830 (mysqld)</span><br><span class="line">     Status: <span class="string">&quot;Server is operational&quot;</span></span><br><span class="line">      Tasks: 40 (<span class="built_in">limit</span>: 18998)</span><br><span class="line">     Memory: 442.2M</span><br><span class="line">     CGroup: /system.slice/mysqld.service</span><br><span class="line">             └─830 /usr/bin/mysqld</span><br></pre></td></tr></table></figure><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld.service</span><br></pre></td></tr></table></figure><h3 id="登陆mysql"><a href="#登陆mysql" class="headerlink" title="登陆mysql"></a>登陆mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>接着输入你的密码，密码在当初初始化mysql那一步中终端输出有</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>mysql命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27;xxx&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>注：xxx即为你的新密码，记得加单引号哦^_^</p></blockquote><h2 id="图形化工具安装"><a href="#图形化工具安装" class="headerlink" title="图形化工具安装"></a>图形化工具安装</h2><p>这里选用的图形化工具为<code>mysql-workbench</code></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S mysql-workbench</span><br></pre></td></tr></table></figure><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>默认<code>manjaro</code>安装<code>mysql-workbench</code>是会缺少一个包的，他会导致你无法连接<code>mysql</code></p><p>安装缺少的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S gnome-keyring </span><br></pre></td></tr></table></figure><p>没错就是这个包，它的缺少会导致<code>mysql-workbench</code>无法输入密码从而导致无法连接<code>mysql</code></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/MySQL/">MySQL</category>
      
      
      <comments>https://zztweb.top/posts/20be8d71.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32配置Keil在SRAM中调试</title>
      <link>https://zztweb.top/posts/80d81344.html</link>
      <guid>https://zztweb.top/posts/80d81344.html</guid>
      <pubDate>Fri, 17 Apr 2020 09:58:59 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>虽然SRAM掉电清空，但是FLASH擦写实在是太慢了，对于我这种编程一小时50分钟在调试的新手而言，擦除数据的进度条是无比漫长的o(╥﹏╥)o</p><h2 id="BOOT0与BOOT1"><a href="#BOOT0与BOOT1" class="headerlink" title="BOOT0与BOOT1"></a>BOOT0与BOOT1</h2><p>通过配置BOOT0和BOOT1引脚的高低点位可以改变芯片的启动方式，按照官方给的数据，两引脚同时配置低电位为FLASH启动，同时配置高电位为片内SRAM启动，我依稀记得好像通过设置这两个引脚的高低点位也可以解决烧录程序失败导致的无限复位问题</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417180523.png"></p><p>当然有些板子这两个引脚是焊死的，对于这种情况，也有相应的解决方案</p><h2 id="可以控制启动引脚"><a href="#可以控制启动引脚" class="headerlink" title="可以控制启动引脚"></a>可以控制启动引脚</h2><h3 id="将两个启动引脚同时拉高"><a href="#将两个启动引脚同时拉高" class="headerlink" title="将两个启动引脚同时拉高"></a>将两个启动引脚同时拉高</h3><p>如图：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417180523.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417181100.jpg"></p><h3 id="新建SRAM版本的工程"><a href="#新建SRAM版本的工程" class="headerlink" title="新建SRAM版本的工程"></a>新建SRAM版本的工程</h3><p><code>Manage Project Items</code>可以让你在一个项目中管理不同配置的工程</p><p>如图操作即可，建立你的新的配置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417181345.png"></p><p>然后切换到你所新建的调试版本</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417181618.png"></p><h3 id="配置分散加载文件"><a href="#配置分散加载文件" class="headerlink" title="配置分散加载文件"></a>配置分散加载文件</h3><p>在<code>Options for Target-&gt;linker</code>页面中</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417181627.png"></p><ul><li>取消勾选<code>Use Memory Layout from Target Dialog</code></li><li>自己选择一个路径新建分散加载配置文件，并在其中填入一下内容</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> ; *************************************************************</span><br><span class="line"> ; *** Scatter-Loading Description File generated by uVision ***</span><br><span class="line"> ; *************************************************************</span><br><span class="line"></span><br><span class="line">LR_IROM1 <span class="number">0x20000000</span> <span class="number">0x00010000</span> &#123; ; load region size_region</span><br><span class="line">ER_IROM1 <span class="number">0x20000000</span> <span class="number">0x00010000</span> &#123; ; load address = execution address</span><br><span class="line"> *.o (RESET, +First)</span><br><span class="line"> *(InRoot$$Sections)</span><br><span class="line"> .ANY (+RO)</span><br><span class="line">&#125;</span><br><span class="line">RW_IRAM1 <span class="number">0x20010000</span> <span class="number">0x00020000</span> &#123; ; RW data</span><br><span class="line"> .ANY (+RW +ZI)</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：这个配置文件中的数据是根据芯片所设置的，我的芯片是<code>STM32F429IGT6</code>,所选地址分别为：<code>0x20000000</code> <code>0x00010000</code></p></blockquote><h3 id="配置中断向量表"><a href="#配置中断向量表" class="headerlink" title="配置中断向量表"></a>配置中断向量表</h3><p>打开你的<code>system_stm32f4xx.c</code>文件，找到如下内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Setup the microcontroller system</span></span><br><span class="line"><span class="comment">  *         Initialize the FPU setting, vector table location and External memory </span></span><br><span class="line"><span class="comment">  *         configuration.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* FPU settings ------------------------------------------------------------*/</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">if</span> (__FPU_PRESENT == 1) &amp;&amp; (__FPU_USED == 1)</span></span><br><span class="line">    SCB-&gt;CPACR |= ((<span class="number">3UL</span> &lt;&lt; <span class="number">10</span>*<span class="number">2</span>)|(<span class="number">3UL</span> &lt;&lt; <span class="number">11</span>*<span class="number">2</span>));  <span class="comment">/* set CP10 and CP11 Full Access */</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)</span></span><br><span class="line">  SystemInit_ExtMemCtl(); </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Configure the Vector Table location add offset address ------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VECT_TAB_SRAM</span></span><br><span class="line">  SCB-&gt;VTOR = SRAM_BASE | VECT_TAB_OFFSET; <span class="comment">/* Vector Table Relocation in Internal SRAM */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  SCB-&gt;VTOR = FLASH_BASE | VECT_TAB_OFFSET; <span class="comment">/* Vector Table Relocation in Internal FLASH */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看见函数末尾的宏定义了吗，没错就是<code>VECT_TAB_SRAM</code>，把它复制到MDK编译环境里</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417182300.png"></p><h3 id="修改MDK的烧录程序设置"><a href="#修改MDK的烧录程序设置" class="headerlink" title="修改MDK的烧录程序设置"></a>修改MDK的烧录程序设置</h3><p>按照图片所示修改设置，其中地址的修改需要同前面分散加载文件相对应</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417182538.png"></p><p>这里可以看出储存空间的起点为<code>0x20000000</code>，但烧录空间的起始地址为<code>0x20010000</code>向后偏移了<code>0x10000</code>，这是因为前面的空间是作为虚拟ROM使用的，我们的程序所在的空间起点为后面的地址</p><h3 id="仿真器设置"><a href="#仿真器设置" class="headerlink" title="仿真器设置"></a>仿真器设置</h3><p>按照图片所示配置，不这样配置无法调试</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417182842.png"></p><h2 id="无法修改启动引脚"><a href="#无法修改启动引脚" class="headerlink" title="无法修改启动引脚"></a>无法修改启动引脚</h2><blockquote><p>注：这个我没试过，但是和上面的方法出自同一本书，应该可行</p></blockquote><h3 id="新建SRAM版本的工程-1"><a href="#新建SRAM版本的工程-1" class="headerlink" title="新建SRAM版本的工程"></a>新建SRAM版本的工程</h3><p>这步同上面可以操控启动引脚的一致</p><h3 id="编辑Debug-RAM-ini文件"><a href="#编辑Debug-RAM-ini文件" class="headerlink" title="编辑Debug_RAM.ini文件"></a>编辑Debug_RAM.ini文件</h3><p>如图，新建<code>Debug_RAM.ini</code>文件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200417183312.png"></p><p>填入以下内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************************************************/</span></span><br><span class="line"><span class="comment">/* Debug_RAM.ini: Initialization File for Debugging from Internal RAM */</span></span><br><span class="line"><span class="comment">/******************************************************/</span></span><br><span class="line"><span class="comment">/* This file is part of the uVision/ARM development tools. */</span></span><br><span class="line"><span class="comment">/* Copyright (c) 2005-2014 Keil Software. All rights reserved. */</span></span><br><span class="line"><span class="comment">/* This software may only be used under the terms of a valid, current, */</span></span><br><span class="line"><span class="comment">/* end user licence from KEIL for a compatible version of KEIL software */</span></span><br><span class="line"><span class="comment">/*development tools. Nothing else gives you the right to use this software */</span></span><br><span class="line"><span class="comment">/***************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function">FUNC <span class="keyword">void</span> <span class="title">Setup</span> <span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">   SP = _RDWORD(<span class="number">0x20000000</span>); <span class="comment">// 设置栈指针 SP，把 0x20000000 地址中的内容赋值到 SP。</span></span><br><span class="line">   PC = _RDWORD(<span class="number">0x20000004</span>); <span class="comment">// 设置程序指针 PC，把 0x20000004 地址中的内容赋值到PC。</span></span><br><span class="line"></span><br><span class="line">   XPSR = <span class="number">0x01000000</span>; <span class="comment">// 设置状态寄存器指针 xPSR</span></span><br><span class="line">   _WDWORD(<span class="number">0xE000ED08</span>, <span class="number">0x20000000</span>); <span class="comment">// Setup Vector Table Offset Register</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LOAD %L INCREMENTAL <span class="comment">// 下载 axf 文件到 RAM</span></span><br><span class="line">Setup(); <span class="comment">//调用上面定义的 setup 函数设置运行环境</span></span><br><span class="line">   <span class="comment">//g, main //跳转到 main 函数，本示例调试时不需要从 main 函数执行，注释掉了，程序从启动代码开始执行</span></span><br></pre></td></tr></table></figure><p>上述配置过程是控制MDK执行仿真器的脚本文件<code>Debug_RAM.ini</code>，而该脚本文件在下载了程序到SRAM后，初始化了SP指针(即 MSP)和PC指针分别指向了<code>0x20000000</code>和<code>0x20000004</code>，这样的操作等效于从SRAM复位</p><p>有了这样的配置，即使BOOT0和BOOT1引脚不设置为SRAM启动也能正常仿真了，但点击下载按钮把程序下载到SRAM然后按复位是不能全速运行的(这种运行方式脱离了仿真器的控制，SP和PC指针无法被初始化指向SRAM)</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>开始我的 下载-&gt;运行-&gt;调试-&gt;出错-&gt;解决-&gt;下载······</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/Keil/">Keil</category>
      
      <category domain="https://zztweb.top/tags/SRAM/">SRAM</category>
      
      <category domain="https://zztweb.top/tags/SRAM%E8%B0%83%E8%AF%95/">SRAM调试</category>
      
      
      <comments>https://zztweb.top/posts/80d81344.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32CubeMX配置LCD显示中文字符</title>
      <link>https://zztweb.top/posts/ee64b9e4.html</link>
      <guid>https://zztweb.top/posts/ee64b9e4.html</guid>
      <pubDate>Fri, 17 Apr 2020 00:09:30 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="字库位置"><a href="#字库位置" class="headerlink" title="字库位置"></a>字库位置</h2><p>可以是外部串行FLASH，也可以是SD卡</p><p>但是SD卡因为有文件系统的原因，会非常的慢，如果不是必要，建议使用外部FLASH作为存放字库文件的容器</p><p>所以本文所写的程序也是给外部FLASH字库准备的</p><h2 id="LTDC配置"><a href="#LTDC配置" class="headerlink" title="LTDC配置"></a>LTDC配置</h2><p>这一段可以去看<a href="/blog/posts/7109b92c.html"><code>STM32CubeMX配置LTDC</code></a>，在那里面有详细介绍</p><h2 id="FLASHI配置"><a href="#FLASHI配置" class="headerlink" title="FLASHI配置"></a>FLASHI配置</h2><p>这一段可以去看<a href="/blog/posts/243fe895.html"><code>STM32CubeMX配置SPI读写外部FLASH</code></a>，在那里面有详细介绍</p><h2 id="有关配置FLASH的一些小问题"><a href="#有关配置FLASH的一些小问题" class="headerlink" title="有关配置FLASH的一些小问题"></a>有关配置FLASH的一些小问题</h2><ul><li>如果驱动文件不是自己写，而是在资料中找，那么一定要注意选择与FLASH芯片相应的驱动文件，因为有些新的驱动文件所使用的指令组合对于较老的FLASH芯片而言是不识别的</li><li>一定要看好字库文件在FLASH的位置，而且千万不要所以更改FLASH芯片中的内容</li></ul><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>把驱动文件写出来后，定义好全局变量，就没啥问题了。怎么去显示中文通常lcd的驱动文件里都有，可以照着慢慢写一个(<em>^▽^</em>)</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/STM32CubeMX/">STM32CubeMX</category>
      
      <category domain="https://zztweb.top/tags/LCD/">LCD</category>
      
      <category domain="https://zztweb.top/tags/%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87/">显示中文</category>
      
      
      <comments>https://zztweb.top/posts/ee64b9e4.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32CubeMX配置SPI读写外部FLASH</title>
      <link>https://zztweb.top/posts/243fe895.html</link>
      <guid>https://zztweb.top/posts/243fe895.html</guid>
      <pubDate>Thu, 16 Apr 2020 05:01:01 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="SPI协议简介"><a href="#SPI协议简介" class="headerlink" title="SPI协议简介"></a>SPI协议简介</h2><p>SPI协议是由摩托罗拉公司提出的通讯协议(Serial Peripheral Interface)，即串行外围设备接口，是一种高速全双工的通信总线。它被广泛地使用在 ADC、LCD 等设备与 MCU 间，要求通讯速率较高的场合。</p><h2 id="FLASH芯片简介"><a href="#FLASH芯片简介" class="headerlink" title="FLASH芯片简介"></a>FLASH芯片简介</h2><p>也没啥可说的，直接上图：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131001.png"></p><p>这个图有点错误，我板子上的串行FLASH是16MB的</p><h2 id="STM32CubeMX配置"><a href="#STM32CubeMX配置" class="headerlink" title="STM32CubeMX配置"></a>STM32CubeMX配置</h2><h3 id="时钟配置"><a href="#时钟配置" class="headerlink" title="时钟配置"></a>时钟配置</h3><p>配置到180MHz</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131330.png"></p><h3 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h3><p>根据原理图配置相应引脚的复用功能</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131506.png"></p><p>这里需要注意的是端口PI8需要单独配置推挽输出</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131455.png"></p><h3 id="复用功能配置"><a href="#复用功能配置" class="headerlink" title="复用功能配置"></a>复用功能配置</h3><h4 id="SPI配置"><a href="#SPI配置" class="headerlink" title="SPI配置"></a>SPI配置</h4><p>仅仅和FLASH通讯，不用更改太多设置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131608.png"></p><p>这里设置分频为16是因为高频率貌似会导致FLASH读数据失败(我觉得更大可能是我的程序出现了问题)</p><h4 id="串口配置"><a href="#串口配置" class="headerlink" title="串口配置"></a>串口配置</h4><p>开启异步模式，默认配置即可</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131743.png"></p><h2 id="Keil配置"><a href="#Keil配置" class="headerlink" title="Keil配置"></a>Keil配置</h2><h3 id="移植驱动文件"><a href="#移植驱动文件" class="headerlink" title="移植驱动文件"></a>移植驱动文件</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416131841.png"></p><h3 id="完善SPI初始化函数"><a href="#完善SPI初始化函数" class="headerlink" title="完善SPI初始化函数"></a>完善SPI初始化函数</h3><p>在系统自动生成的初始化函数末尾添加如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN SPI1_Init 2 */</span></span><br><span class="line">  __HAL_SPI_ENABLE(&amp;hspi1);</span><br><span class="line"><span class="comment">/* USER CODE END SPI1_Init 2 */</span></span><br></pre></td></tr></table></figure><p>这段代码的功能是使能SPI功能</p><h3 id="重定向printf-函数和scanf-函数"><a href="#重定向printf-函数和scanf-函数" class="headerlink" title="重定向printf()函数和scanf()函数"></a>重定向printf()函数和scanf()函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN PD */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __GNUC__</span></span><br><span class="line"><span class="comment">/* With GCC, small printf (option LD Linker-&gt;Libraries-&gt;Small printf</span></span><br><span class="line"><span class="comment">   set to &#x27;Yes&#x27;) calls __io_putchar() */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* __GNUC__ */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 尝试重写scanf函数 -----------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __GNUC__</span></span><br><span class="line"><span class="comment">/* With GCC, small printf (option LD Linker-&gt;Libraries-&gt;Small printf</span></span><br><span class="line"><span class="comment">   set to &#x27;Yes&#x27;) calls __io_putchar() */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GETCHAR_PROTOTYPE int __io_getchar(FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GETCHAR_PROTOTYPE int fgetc(FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* __GNUC__ */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END PD */</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Retargets the C library printf function to the USART.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Place your implementation of fputc here */</span></span><br><span class="line">    <span class="comment">/* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */</span></span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xFFFF</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//尝试重写scanf函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Retargets the C library printf function to the USART.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">GETCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    HAL_UART_Receive(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xFFFF</span>);</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写读写实验主代码"><a href="#编写读写实验主代码" class="headerlink" title="编写读写实验主代码"></a>编写读写实验主代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;系统初始化完毕\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;FLASH ID:%XFLASH Device ID:%X\r\n&quot;</span>,SPI_FLASH_ReadID(),SPI_FLASH_ReadDeviceID());</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入需要储存到FLASH的数据(最多80字符):\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> data1[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> data2[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,data1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> data_size=<span class="keyword">sizeof</span>(data1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;写入FLASH的数据：%s\r\n&quot;</span>,data1);</span><br><span class="line">SPI_FLASH_SectorErase(<span class="number">0x00000</span>);</span><br><span class="line">SPI_FLASH_BufferWrite((<span class="keyword">uint8_t</span> *)data1,<span class="number">0x00000</span>,data_size);</span><br><span class="line">SPI_FLASH_BufferRead((<span class="keyword">uint8_t</span> *)data2,<span class="number">0x00000</span>,data_size);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;读取FLASH的数据：%s\r\n&quot;</span>,data2);</span><br><span class="line"><span class="comment">/* USER CODE END 2 */</span></span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200416135452.png"></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/STM32CubeMX/">STM32CubeMX</category>
      
      <category domain="https://zztweb.top/tags/ARM/">ARM</category>
      
      <category domain="https://zztweb.top/tags/SPI/">SPI</category>
      
      <category domain="https://zztweb.top/tags/FLASH/">FLASH</category>
      
      
      <comments>https://zztweb.top/posts/243fe895.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32CubeMX配置LTDC时遇到的一些问题</title>
      <link>https://zztweb.top/posts/3e4bdf1e.html</link>
      <guid>https://zztweb.top/posts/3e4bdf1e.html</guid>
      <pubDate>Wed, 15 Apr 2020 12:03:51 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="问题一：引脚对不上"><a href="#问题一：引脚对不上" class="headerlink" title="问题一：引脚对不上"></a>问题一：引脚对不上</h2><p>STM32CubeMX默认配置的引脚与板子设计时所使用的引脚对不上，导致初始化失败</p><h2 id="问题二：HAL库与标准库是不兼容的"><a href="#问题二：HAL库与标准库是不兼容的" class="headerlink" title="问题二：HAL库与标准库是不兼容的"></a>问题二：HAL库与标准库是不兼容的</h2><p>HAL库的初始化结构体以及一部分的宏定义是不兼容的</p><p>建议尽量不要参考标准库使用HAL库，如果需要，那么要追究到寄存器操作的程度来保证对HAL库的使用而导致的行动是与标准库一致的</p><p>目前遇到的例子：</p><ul><li>在标准库中LTDC初始化图层时所使用的结构体决不能同HAL库具有等效功能的结构体相互参照，因为它们的图层初始化函数对结构体的使用方式是不同的</li></ul><h2 id="问题三：STM32CubeMX自动生成的代码与驱动文件有功能上的重复"><a href="#问题三：STM32CubeMX自动生成的代码与驱动文件有功能上的重复" class="headerlink" title="问题三：STM32CubeMX自动生成的代码与驱动文件有功能上的重复"></a>问题三：STM32CubeMX自动生成的代码与驱动文件有功能上的重复</h2><p>解决方案：删掉驱动文件上与自动生成代码有功能重复的代码</p><h2 id="问题四：驱动文件有一些数据定义与STM32CubeMX自动生成的冲突"><a href="#问题四：驱动文件有一些数据定义与STM32CubeMX自动生成的冲突" class="headerlink" title="问题四：驱动文件有一些数据定义与STM32CubeMX自动生成的冲突"></a>问题四：驱动文件有一些数据定义与STM32CubeMX自动生成的冲突</h2><p>解决方案：使用<code>extern</code>标识符和<code>#define</code>宏定义替换掉驱动文件中的数据定义</p><h2 id="问题五：LCD-TFT时钟频率过高而导致花屏"><a href="#问题五：LCD-TFT时钟频率过高而导致花屏" class="headerlink" title="问题五：LCD-TFT时钟频率过高而导致花屏"></a>问题五：LCD-TFT时钟频率过高而导致花屏</h2><p>问题详细表征：显示屏花屏，并且会快速左右或上下抖动</p><p>解决方案：降低LCD-TFT频率</p><h2 id="问题六：显存与屏幕数据格式不同导致花屏"><a href="#问题六：显存与屏幕数据格式不同导致花屏" class="headerlink" title="问题六：显存与屏幕数据格式不同导致花屏"></a>问题六：显存与屏幕数据格式不同导致花屏</h2><p>问题详细表征：显示屏花屏，并且出现较密的格子纹路，会对清屏等指令做出反映，但反映不正确</p><p>解决方案：注意数据格式，尤其是ARGB8888和RGB888的区别。前者32位数据，一个像素点占显存4个字节;后者24位数据，程序调用时处理32位数据，一个像素点占显存3个字节</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/STM32CubeMX/">STM32CubeMX</category>
      
      <category domain="https://zztweb.top/tags/HAL/">HAL</category>
      
      <category domain="https://zztweb.top/tags/LTDC/">LTDC</category>
      
      
      <comments>https://zztweb.top/posts/3e4bdf1e.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32CubeMX配置LTDC</title>
      <link>https://zztweb.top/posts/7109b92c.html</link>
      <guid>https://zztweb.top/posts/7109b92c.html</guid>
      <pubDate>Wed, 15 Apr 2020 03:36:46 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="事先安排"><a href="#事先安排" class="headerlink" title="事先安排"></a>事先安排</h2><p>已知使用STM32CubeMX配置LTDC时所有模块初始化流程如下：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415114924.png"></p><h2 id="STM32CubeMX配置"><a href="#STM32CubeMX配置" class="headerlink" title="STM32CubeMX配置"></a>STM32CubeMX配置</h2><h3 id="使用芯片"><a href="#使用芯片" class="headerlink" title="使用芯片"></a>使用芯片</h3><p>我所使用的单片机型号是STM32F429IGT6，板子是野火的开发板，主频最高180MHz</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415115526.png"></p><h3 id="时钟配置"><a href="#时钟配置" class="headerlink" title="时钟配置"></a>时钟配置</h3><h4 id="开启外部高速时钟HSE"><a href="#开启外部高速时钟HSE" class="headerlink" title="开启外部高速时钟HSE"></a>开启外部高速时钟HSE</h4><p>在配置页面RCC下开启HSE</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415115900.png"></p><h4 id="开启LCD-TFT时钟"><a href="#开启LCD-TFT时钟" class="headerlink" title="开启LCD-TFT时钟"></a>开启LCD-TFT时钟</h4><p>在配置页面开启LTDC功能</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415115631.png"></p><h4 id="配置时钟"><a href="#配置时钟" class="headerlink" title="配置时钟"></a>配置时钟</h4><p>在时钟配置页面配置系统主频和LCD-TFT频率</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415120512.jpg"></p><blockquote><p>注：LCD-TFT频率过高会导致花屏，缺失等不正常显示行为</p></blockquote><h3 id="配置串口"><a href="#配置串口" class="headerlink" title="配置串口"></a>配置串口</h3><p>在配置页面开启串口异步模式，其余按照默认量设置即可</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415120826.png"></p><h3 id="配置FMC-SDRAM"><a href="#配置FMC-SDRAM" class="headerlink" title="配置FMC-SDRAM"></a>配置FMC-SDRAM</h3><h4 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h4><p>查找官方资料，找到FMC的地址框图</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415121844.png"></p><p>这里我使用的是<code>SDRAM Bank 2</code>作为显存，起始地址为<code>0xD0000000</code></p><p>在配置页面开启SDRAM，其设置如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415122152.png"></p><p>SDRAM详细设置如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415122236.png"></p><p>其中<code>SDRAM control</code>设置不必多说，但下面的<code>SDRAM timing in memory clock cycles</code>的配置是根据你所用的SDRAM芯片种类所确定的，我所使用的芯片型号是<code>IS42S16400J-7TLI</code>配置如图，其实实在不确定的话都设置为16也不是不可以</p><h4 id="引脚配置"><a href="#引脚配置" class="headerlink" title="引脚配置"></a>引脚配置</h4><p>选择<code>GPIO Settings</code>标签页，查看此处设置的引脚是否与开发板原理图上的引脚相对应</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415122710.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415122836.png"></p><h3 id="配置LTDC"><a href="#配置LTDC" class="headerlink" title="配置LTDC"></a>配置LTDC</h3><h4 id="功能配置-1"><a href="#功能配置-1" class="headerlink" title="功能配置"></a>功能配置</h4><h5 id="背景配置"><a href="#背景配置" class="headerlink" title="背景配置"></a>背景配置</h5><p>在配置页面LTDC下选择数据类型，这里我选择的是RGB888,然后按照下图数据配置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415122929.png"></p><p>其中，下图这两项由显示屏的所决定，可自行查阅</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415123227.png"></p><p>然后，如下图设置低电位使能和配置时钟，最下面的三项是设置背景颜色的</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415123350.png"></p><h5 id="图层显存配置"><a href="#图层显存配置" class="headerlink" title="图层显存配置"></a>图层显存配置</h5><p>总图如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415190615.png"></p><h4 id="引脚配置-1"><a href="#引脚配置-1" class="headerlink" title="引脚配置"></a>引脚配置</h4><p>切记，一定要比对引脚是否正确，并且把所有GPIO的速度都设置为<code>Very High</code></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415124348.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415124431.png"></p><h3 id="配置DMA2D"><a href="#配置DMA2D" class="headerlink" title="配置DMA2D"></a>配置DMA2D</h3><p>DMA2D是专门为显存到显示屏高速通信所准备的DMA模块</p><p>其实没啥可配置的，开启DMA2D后选择RTM模式，按照你的图层数据格式选择DMA2D的数据格式即可</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415124637.png"></p><h3 id="配置LCD数据使能引脚以及背光引脚"><a href="#配置LCD数据使能引脚以及背光引脚" class="headerlink" title="配置LCD数据使能引脚以及背光引脚"></a>配置LCD数据使能引脚以及背光引脚</h3><p>我这里LTDC开启后是没有配置LCD数据使能引脚和背光引脚的，所以需要按照原理图去配置相应引脚</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415124838.png"></p><p>并且我在这里配置了一个LED灯的引脚，用作~~~看着舒服(￣▽￣)~*</p><h3 id="输出MDK-ARM项目文件"><a href="#输出MDK-ARM项目文件" class="headerlink" title="输出MDK-ARM项目文件"></a>输出MDK-ARM项目文件</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415124951.png"></p><p>至此，STM32CubeMX工作结束</p><h2 id="Keil5配置"><a href="#Keil5配置" class="headerlink" title="Keil5配置"></a>Keil5配置</h2><p>打开那令人眼疼又异常熟悉的界面~~~</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200415130215.png"></p><h3 id="重定向printf-到串口输出函数"><a href="#重定向printf-到串口输出函数" class="headerlink" title="重定向printf()到串口输出函数"></a>重定向printf()到串口输出函数</h3><p>所有项目第一件事：搞定串口输出函数</p><p>引用<code>stdio.h</code>文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br></pre></td></tr></table></figure><p>重写fputc()函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重定向printf至串口输出函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">(<span class="keyword">int</span> ch,FILE *f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HAL_UART_Transmit(&amp;huart1,(<span class="keyword">uint8_t</span> *)&amp;ch,<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在错误调用函数下写输出错误代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  This function is executed in case of error occurrence.</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Error_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Error_Handler_Debug */</span></span><br><span class="line">  <span class="comment">/* User can add his own implementation to report the HAL error return state */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Error_Handler\r\n&quot;</span>);</span><br><span class="line">  <span class="comment">/* USER CODE END Error_Handler_Debug */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移植LTDC使能函数"><a href="#移植LTDC使能函数" class="headerlink" title="移植LTDC使能函数"></a>移植LTDC使能函数</h3><p>这种函数通常我会直接写在main.c文件中，写在驱动文件里离STM32CubeMX自动生成的初始化函数太远，不好配置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  使能显示</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">USER_LTCD_ENABLE</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 开显示 */</span></span><br><span class="line">  __HAL_LTDC_ENABLE(&amp;hltdc);</span><br><span class="line">  HAL_GPIO_WritePin(LTDC_DISP_GPIO_Port, LTDC_DISP_Pin, GPIO_PIN_SET);<span class="comment">/* LCD_DISP使能*/</span></span><br><span class="line">  HAL_GPIO_WritePin(LTDC_BL_GPIO_Port, LTDC_BL_Pin, GPIO_PIN_SET);  <span class="comment">/* 开背光*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  禁能显示</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">USER_LTCD_DISABLE</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 关显示 */</span></span><br><span class="line">  __HAL_LTDC_DISABLE(&amp;hltdc);</span><br><span class="line">  HAL_GPIO_WritePin(LTDC_DISP_GPIO_Port, LTDC_DISP_Pin, GPIO_PIN_RESET);<span class="comment">/* LCD_DISP使不能*/</span></span><br><span class="line">  HAL_GPIO_WritePin(LTDC_BL_GPIO_Port, LTDC_BL_Pin, GPIO_PIN_RESET);  <span class="comment">/* 关背光*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在LTDC初始化函数结尾引用LTDC使能函数</p><h3 id="移植SDRAM初始配置函数"><a href="#移植SDRAM初始配置函数" class="headerlink" title="移植SDRAM初始配置函数"></a>移植SDRAM初始配置函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  对SDRAM芯片进行初始化配置</span></span><br><span class="line"><span class="comment">  * @param  None. </span></span><br><span class="line"><span class="comment">  * @retval None.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">USER_SDRAM_ENABLE</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FMC_SDRAM_CommandTypeDef Command;</span><br><span class="line"></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> tmpmrd =<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Step 1:  Configure a clock configuration enable command */</span></span><br><span class="line">  Command.CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;</span><br><span class="line">  Command.CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;</span><br><span class="line">  Command.AutoRefreshNumber       = <span class="number">1</span>;</span><br><span class="line">  Command.ModeRegisterDefinition  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Send the command */</span></span><br><span class="line">  HAL_SDRAM_SendCommand(&amp;hsdram1, &amp;Command, SDRAM_TIMEOUT);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Step 2: Insert 100 us minimum delay */</span> </span><br><span class="line">  <span class="comment">/* Inserted delay is equal to 1 ms due to systick time base unit (ms) */</span></span><br><span class="line">  HAL_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Step 3: Configure a PALL (precharge all) command */</span> </span><br><span class="line">  Command.CommandMode             = FMC_SDRAM_CMD_PALL;</span><br><span class="line">  Command.CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;</span><br><span class="line">  Command.AutoRefreshNumber       = <span class="number">1</span>;</span><br><span class="line">  Command.ModeRegisterDefinition  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Send the command */</span></span><br><span class="line">  HAL_SDRAM_SendCommand(&amp;hsdram1, &amp;Command, SDRAM_TIMEOUT);  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Step 4: Configure an Auto Refresh command */</span> </span><br><span class="line">  Command.CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;</span><br><span class="line">  Command.CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;</span><br><span class="line">  Command.AutoRefreshNumber       = <span class="number">4</span>;</span><br><span class="line">  Command.ModeRegisterDefinition  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Send the command */</span></span><br><span class="line">  HAL_SDRAM_SendCommand(&amp;hsdram1, &amp;Command, SDRAM_TIMEOUT);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Step 5: Program the external memory mode register */</span></span><br><span class="line">  tmpmrd = (<span class="keyword">uint32_t</span>)SDRAM_MODEREG_BURST_LENGTH_2          |</span><br><span class="line">                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |</span><br><span class="line">                     SDRAM_MODEREG_CAS_LATENCY_3           |</span><br><span class="line">                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |</span><br><span class="line">                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;</span><br><span class="line">  </span><br><span class="line">  Command.CommandMode             = FMC_SDRAM_CMD_LOAD_MODE;</span><br><span class="line">  Command.CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;</span><br><span class="line">  Command.AutoRefreshNumber       = <span class="number">1</span>;</span><br><span class="line">  Command.ModeRegisterDefinition  = tmpmrd;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Send the command */</span></span><br><span class="line">  HAL_SDRAM_SendCommand(&amp;hsdram1, &amp;Command, SDRAM_TIMEOUT);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Step 6: Set the refresh rate counter */</span></span><br><span class="line">  <span class="comment">/* Set the device refresh rate */</span></span><br><span class="line">  HAL_SDRAM_ProgramRefreshRate(&amp;hsdram1, REFRESH_COUNT); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在SDRAM初始化函数末尾引用SDRAM初始配置函数</p><h3 id="引用驱动函数"><a href="#引用驱动函数" class="headerlink" title="引用驱动函数"></a>引用驱动函数</h3><ul><li>如果驱动文件里有同main.c文件中同类的变量或常量，需要使用<code>extern</code>标识符和宏定义替换掉驱动文件中的变量或常量，如下</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> DMA2D_HandleTypeDef hdma2d;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> LTDC_HandleTypeDef hltdc;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LtdcHandler hltdc</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  Dma2dHandler hdma2d</span></span><br></pre></td></tr></table></figure><ul><li>和项目无关的驱动函数一定要删干净，可以先删类型定义和变量，然后编译，哪里出错删哪里</li><li>一定要删掉main.c中已实现的功能函数以及变量，防止后期码代码时函数调用混乱导致可移植性下降</li><li>仔细阅读驱动文件的宏定义和数据，按照自己的开发环境去修改驱动文件的宏定义和数据</li></ul><p>干完这些，就可以实现一些基本的功能了，比如刷屏实验以及字符显示</p><h3 id="字符显示实验"><a href="#字符显示实验" class="headerlink" title="字符显示实验"></a>字符显示实验</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LCD_SetLayerVisible(<span class="number">1</span>,DISABLE);</span><br><span class="line">LCD_SetLayerVisible(<span class="number">0</span>,ENABLE);</span><br><span class="line">LCD_SetTransparency(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">LCD_SetTransparency(<span class="number">0</span>,<span class="number">255</span>);</span><br><span class="line">LCD_SelectLayer(<span class="number">0</span>);</span><br><span class="line">LCD_Clear(LCD_COLOR_BLUE);</span><br><span class="line">LCD_SetTextColor(LCD_COLOR_RED);</span><br><span class="line">LCD_SetBackColor(LCD_COLOR_BLUE);</span><br><span class="line">LCD_SetFont(&amp;Font24);</span><br><span class="line">LCD_DisplayStringLine(<span class="number">1</span>,(<span class="keyword">uint8_t</span> *)<span class="string">&quot;ok!!&quot;</span>);</span><br><span class="line">LCD_DrawCircle(<span class="number">200</span>,<span class="number">200</span>,<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h3 id="LED配置"><a href="#LED配置" class="headerlink" title="LED配置"></a>LED配置</h3><p>在滴答定时器中断区编写程序，让LED闪烁</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> time_flag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief This function handles System tick timer.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SysTick_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysTick_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(time_flag&gt;=<span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_TogglePin(GPIOH,LED_G_Pin);</span><br><span class="line">time_flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">time_flag+=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysTick_IRQn 0 */</span></span><br><span class="line">  HAL_IncTick();</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN SysTick_IRQn 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END SysTick_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>下载至开发板，重启开发板</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>官方驱动文件目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STM32Cube_FW_F4_V1.25.0/Drivers/BSP/</span><br></pre></td></tr></table></figure><p>项目文件下载</p><ul><li>链接：<a href="https://pan.baidu.com/s/1P7m3ch2QDxkNCh27rSpSjQ">百度网盘</a> 提取码：<code>pto5</code></li></ul><p>文件校验数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">名称: LCD_Basis.7z</span><br><span class="line">大小: 6040859 字节 (5899 KiB)</span><br><span class="line">CRC32: 5E230E1B</span><br><span class="line">CRC64: D8466336C068497F</span><br><span class="line">SHA256: 8E0E95E778AB12D838E8BE9CD2D2CF06602DBEE4D17240536ED90735C49893D9</span><br><span class="line">SHA1: FF69897C0492E27D7D2B38C75F4CC2F83B4D111D</span><br><span class="line">BLAKE2sp: FEE6B0BA79D124F4FCBBCA423130411FBDA09BBA890318FD4E1DEEFB02FDED7B</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/STM32CubeMX/">STM32CubeMX</category>
      
      <category domain="https://zztweb.top/tags/ARM/">ARM</category>
      
      <category domain="https://zztweb.top/tags/HAL/">HAL</category>
      
      <category domain="https://zztweb.top/tags/LCD/">LCD</category>
      
      <category domain="https://zztweb.top/tags/LTDC/">LTDC</category>
      
      <category domain="https://zztweb.top/tags/Keil/">Keil</category>
      
      <category domain="https://zztweb.top/tags/MKD-ARM/">MKD-ARM</category>
      
      
      <comments>https://zztweb.top/posts/7109b92c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CodeBlocks配置编译器以及调试器</title>
      <link>https://zztweb.top/posts/ac65f6e8.html</link>
      <guid>https://zztweb.top/posts/ac65f6e8.html</guid>
      <pubDate>Mon, 13 Apr 2020 01:27:42 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="配置编译器"><a href="#配置编译器" class="headerlink" title="配置编译器"></a>配置编译器</h2><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413093144.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413093312.png"></p><h2 id="配置调试器"><a href="#配置调试器" class="headerlink" title="配置调试器"></a>配置调试器</h2><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413093328.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413093409.png"></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/CodeBlocks/">CodeBlocks</category>
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      
      <comments>https://zztweb.top/posts/ac65f6e8.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>VSCode配置C语言运行调试环境</title>
      <link>https://zztweb.top/posts/6133db72.html</link>
      <guid>https://zztweb.top/posts/6133db72.html</guid>
      <pubDate>Mon, 13 Apr 2020 01:18:13 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>具体配置方向分为三种：</p><ul><li>使用插件(运行)</li><li>使用集成终端(运行，我不会调试)</li><li>使用VSCode的调试控制台(运行+调试)</li></ul><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><p>VS插件商店搜索<code>Code Runner</code>然后安装</p><p>这个插件支持大部分常见的程序代码类型一键运行</p><p>如图，在你的程序编辑完后点击右上角的三角即可运行</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413090118.png" alt="pic"></p><p>缺点：因为编译命令是规定死的，所以在不常见的配置下会出问题，比如需要加后缀的编译命令以及当你换掉了VSCode的默认终端后也会出现找不到编译文件的问题</p><h2 id="使用集成终端"><a href="#使用集成终端" class="headerlink" title="使用集成终端"></a>使用集成终端</h2><p>这个其实很万能</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413090459.png" alt="pic"></p><h2 id="使用VSCode的调试控制台"><a href="#使用VSCode的调试控制台" class="headerlink" title="使用VSCode的调试控制台"></a>使用VSCode的调试控制台</h2><p>本文重点介绍这个方法</p><h3 id="新建工作文件夹"><a href="#新建工作文件夹" class="headerlink" title="新建工作文件夹"></a>新建工作文件夹</h3><p>要求只有一个，工作文件夹路径以及所有的文件路径永远不要有中文</p><p>别问我怎么知道了，一晚上的泪啊o(╥﹏╥)o</p><h3 id="新建C语言调试配置文件"><a href="#新建C语言调试配置文件" class="headerlink" title="新建C语言调试配置文件"></a>新建C语言调试配置文件</h3><p>新建<code>.vscode</code>文件夹</p><p>在此文件夹下新建文件<code>launch.json</code>和<code>tasks.json</code></p><p>这两个配置文件管理的范围是工作文件夹以及其下面的所有子文件夹</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>编辑<code>launch.json</code></p><p>这里需要修改的地方只有一个：<code>&quot;miDebuggerPath&quot;</code>，此项目的值为<code>gdb</code>的文件路径</p><blockquote><p>其实如果配置过系统环境变量的之间填<code>gdb.exe</code>也行</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [        </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;C/C++ for windows&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:/msys64/mingw64/bin/gdb.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;g++&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Enable pretty-printing for gdb&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑<code>tasks.json</code></p><p>直接拷贝就行</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;g++&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;problemMatcher&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;owner&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;fileLocation&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;relative&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;pattern&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;regexp&quot;</span>: <span class="string">&quot;^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;line&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;column&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;severity&quot;</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">&quot;message&quot;</span>: <span class="number">5</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置完成"><a href="#配置完成" class="headerlink" title="配置完成"></a>配置完成</h3><p>然后打开程序文件，点击左面的调试控制台，设置好断点，便可进行调试</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413091901.png" alt="pic"></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/VSCode/">VSCode</category>
      
      
      <comments>https://zztweb.top/posts/6133db72.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32_HAL库中的回调函数[callback]同中断处理函数的关系</title>
      <link>https://zztweb.top/posts/52920140.html</link>
      <guid>https://zztweb.top/posts/52920140.html</guid>
      <pubDate>Mon, 06 Apr 2020 10:47:00 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h2><p>其实很简单：中断回调函数是封装在中断函数中的子函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  This function handles EXTI interrupt request.</span></span><br><span class="line"><span class="comment">  * @param  GPIO_Pin Specifies the pins connected EXTI line</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_GPIO_EXTI_IRQHandler</span><span class="params">(<span class="keyword">uint16_t</span> GPIO_Pin)</span> <span class="comment">//中断处理函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* EXTI line interrupt detected */</span></span><br><span class="line">  <span class="keyword">if</span>(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);</span><br><span class="line">    HAL_GPIO_EXTI_Callback(GPIO_Pin); <span class="comment">//中断回调函数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>且中断回调函数的声明是这样的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  EXTI line detection callbacks.</span></span><br><span class="line"><span class="comment">  * @param  GPIO_Pin Specifies the pins connected EXTI line</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function">__weak <span class="keyword">void</span> <span class="title">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="keyword">uint16_t</span> GPIO_Pin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* Prevent unused argument(s) compilation warning */</span></span><br><span class="line">  UNUSED(GPIO_Pin);</span><br><span class="line">  <span class="comment">/* <span class="doctag">NOTE:</span> This function Should not be modified, when the callback is needed,</span></span><br><span class="line"><span class="comment">           the HAL_GPIO_EXTI_Callback could be implemented in the user file</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，中断回调函数使用了<code>__weak</code>标识符，使得用户只需将处理中断的代码写在用户文件中重写的中断回调函数<code>void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)</code>便可</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>便于将用户所写的代码控制在可数的几个文件中，便于移植和简化了开发过程</p><h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><p>函数的嵌套一定程度上会导致单片机运行效率降低，且有可能会提高调试难度</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/HAL/">HAL</category>
      
      <category domain="https://zztweb.top/tags/%E4%B8%AD%E6%96%AD%E5%87%BD%E6%95%B0/">中断函数</category>
      
      <category domain="https://zztweb.top/tags/%E4%B8%AD%E6%96%AD/">中断</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/">回调函数</category>
      
      <category domain="https://zztweb.top/tags/callback/">callback</category>
      
      
      <comments>https://zztweb.top/posts/52920140.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言标准输入输出函数printf和scanf重定向至UART输入输出函数</title>
      <link>https://zztweb.top/posts/aea07eb6.html</link>
      <guid>https://zztweb.top/posts/aea07eb6.html</guid>
      <pubDate>Sun, 05 Apr 2020 14:44:42 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>使用C语言标准库中的<code>printf</code>函数和<code>scanf</code>函数简化单片机编程中串口输入输出部分的编写</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><code>printf</code>和<code>scanf</code>函数内部都会引用一对输入输出一个单位数据的函数，所以我们需要重写这一对函数，从而让<code>printf</code>和<code>scanf</code>函数重定向至UART输入输出函数</p><h2 id="详细代码"><a href="#详细代码" class="headerlink" title="详细代码"></a>详细代码</h2><h3 id="宏定义部分"><a href="#宏定义部分" class="headerlink" title="宏定义部分"></a>宏定义部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出函数宏定义 -----------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __GNUC__</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* __GNUC__ */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输入函数宏定义 -----------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __GNUC__</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> GETCHAR_PROTOTYPE int __io_getchar(FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">define</span> GETCHAR_PROTOTYPE int fgetc(FILE *f)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* __GNUC__ */</span></span></span><br></pre></td></tr></table></figure><p>使用此类宏定义的原因是：大部分编译器<code>printf</code>和<code>scanf</code>函数的内部引用函数是<code>fputc</code>和<code>fgetc</code>函数，但GCC和部分编译器的内部引用函数是<code>__io_putchar</code>和<code>__io_getchar</code>函数</p><h3 id="重写部分"><a href="#重写部分" class="headerlink" title="重写部分"></a>重写部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Retargets the C library printf function to the USART.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">    HAL_UART_Transmit(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xFFFF</span>);  <span class="comment">//UART输出单个单位数据的函数</span></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Retargets the C library scanf function to the USART.</span></span><br><span class="line"><span class="comment">  * @param  None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">GETCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">HAL_UART_Receive(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xFFFF</span>);   <span class="comment">//UATR输入单个单位数据的函数</span></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>然后就可以尽情地使用<code>printf</code>和<code>scanf</code>函数输入输出了</p><blockquote><p>注：也可以将<code>printf</code>函数重定向至液晶显示屏的输出函数</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80/">C语言</category>
      
      <category domain="https://zztweb.top/tags/UATR/">UATR</category>
      
      
      <comments>https://zztweb.top/posts/aea07eb6.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32CubeMX+MDK-ARM点亮第一个LED的灯</title>
      <link>https://zztweb.top/posts/909682.html</link>
      <guid>https://zztweb.top/posts/909682.html</guid>
      <pubDate>Sun, 05 Apr 2020 06:10:08 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>每次学习新的东西第一件事干的就是点灯︿(￣︶￣)︿</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405141220.png"></p><p>下载地址：<a href="https://www.st.com/zh/development-tools/stm32cubemx.html">STM32CubeMX</a></p><p>安装教程百度</p><h3 id="MDK-ARM"><a href="#MDK-ARM" class="headerlink" title="MDK-ARM"></a>MDK-ARM</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405141413.png"></p><p>下载地址：<a href="https://www.keil.com/demo/eval/arm.htm">MDK-ARM</a></p><p>安装+破解教程百度</p><h3 id="配置环境包"><a href="#配置环境包" class="headerlink" title="配置环境包"></a>配置环境包</h3><h4 id="STM32CubeMX配置环境包"><a href="#STM32CubeMX配置环境包" class="headerlink" title="STM32CubeMX配置环境包"></a>STM32CubeMX配置环境包</h4><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405141606.png"></p><p>点击<code>INSTALL/REMOVE</code>,在弹出的界面中选择你需要的包</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405141653.png"></p><h4 id="MDK-ARM配置环境包"><a href="#MDK-ARM配置环境包" class="headerlink" title="MDK-ARM配置环境包"></a>MDK-ARM配置环境包</h4><p><a href="https://www.keil.com/dd2/Pack/">官方下载网站</a></p><p>找到你需要的包，比如我用的是F4系列的</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142132.png"></p><h2 id="新建并配置STM32CubeMX项目"><a href="#新建并配置STM32CubeMX项目" class="headerlink" title="新建并配置STM32CubeMX项目"></a>新建并配置STM32CubeMX项目</h2><p>点击<code>ACCESS TO MCU SELECTOR</code></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142244.png"></p><p>在弹出的窗口中选择你所用的单片机芯片型号,然后点击右上角的<code>Start Project</code></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142431.png"></p><p>查看板子原理图，找到灯所对应的<code>GPIO</code>口</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142554.png"></p><p>左键点击对应的<code>GPIO</code>口，设置为输出；右键点击设置其标签</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142633.png"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142727.png"></p><p>选择左侧栏的<code>GPIO</code>，然后点击那个小三角，打开<code>GPIO</code>详细设置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142816.png"></p><p>设置<code>GPIO</code>口的工作模式</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405142901.png"></p><p>时钟默认16MHz</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405143011.png"></p><p>在输出配置中选择<code>MDK-ARM</code></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200405143041.png"></p><p>最后点击右上角的<code>GENERATE CODE</code>,到处<code>MDK-ARM</code>项目文件</p><h2 id="在MDK-ARM中编写代码"><a href="#在MDK-ARM中编写代码" class="headerlink" title="在MDK-ARM中编写代码"></a>在MDK-ARM中编写代码</h2><p>在<code>STM32CubeMX</code>为我们预留的代码段中编写<code>LED</code>控制代码,使用<code>HAL</code>库</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line">HAL_GPIO_TogglePin(GPIOH,LEDR_Pin);                              <span class="comment">//红色灯反转</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">HAL_GPIO_TogglePin(GPIOH,LEDG_Pin);                              <span class="comment">//绿色灯反转</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">HAL_GPIO_TogglePin(GPIOH,LEDB_Pin);                              <span class="comment">//蓝色灯反转</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">HAL_GPIO_TogglePin(GPIOH,LEDR_Pin|LEDG_Pin|LEDB_Pin);            <span class="comment">//全部反转</span></span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 3 */</span></span><br></pre></td></tr></table></figure><blockquote><p>注：切记要在项目配置中选择你的仿真器，<code>STM32CubeMX</code>选的默认仿真器很迷</p></blockquote><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>编译，烧录，重启</p><p>又是一个点亮小程序(～￣▽￣)～ </p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/STM32CubeMX/">STM32CubeMX</category>
      
      <category domain="https://zztweb.top/tags/MDK-ARM/">MDK-ARM</category>
      
      <category domain="https://zztweb.top/tags/MDK/">MDK</category>
      
      <category domain="https://zztweb.top/tags/ARM/">ARM</category>
      
      <category domain="https://zztweb.top/tags/HAL/">HAL</category>
      
      <category domain="https://zztweb.top/tags/%E7%82%B9%E4%BA%AE%E7%AC%AC%E4%B8%80%E4%B8%AALED%E7%9A%84%E7%81%AF/">点亮第一个LED的灯</category>
      
      
      <comments>https://zztweb.top/posts/909682.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32F4_GPIO的八种工作模式</title>
      <link>https://zztweb.top/posts/a840fa9b.html</link>
      <guid>https://zztweb.top/posts/a840fa9b.html</guid>
      <pubDate>Sat, 04 Apr 2020 11:50:08 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="GPIO简介"><a href="#GPIO简介" class="headerlink" title="GPIO简介"></a>GPIO简介</h2><p><code>GPIO</code>,即通用<code>I/O</code>(输入/输出)端口，是STM32可控制的引脚。STM32芯片的<code>GPIO</code>引脚与外部设备连接起来，可实现与外部通讯、控制外部硬件或者采集外部硬件数据的功能</p><p>每个通用 <code>I/O</code> 端口包括 4 个 32 位配置寄存器（<code>GPIOx_MODER</code>、<code>GPIOx_OTYPER</code>、<code>GPIOx_OSPEEDR</code> 和 <code>GPIOx_PUPDR</code>）、2 个 32 位数据寄存器（<code>GPIOx_IDR</code> 和 <code>GPIOx_ODR</code>）、1 个 32 位置位/复位寄存器 (<code>GPIOx_BSRR</code>)、1 个 32 位锁定寄存器 (<code>GPIOx_LCKR</code>) 和 2 个 32 位复用功能选择寄存器（<code>GPIOx_AFRH</code> 和 <code>GPIOx_AFRL</code>）</p><h2 id="GPIO复用"><a href="#GPIO复用" class="headerlink" title="GPIO复用"></a>GPIO复用</h2><p>复用：STM32F4 有很多的内置外设，这些外设的外部引脚都是与 <code>GPIO</code> 共用的。也就是说，一个引脚可以有很多作用，但是默认为<code>I/O</code>口，如果想使用一个 <code>GPIO</code>内置外设的功能引脚，就需要<code>GPIO</code>的复用，那么当这个 <code>GPIO</code> 作为内置外设使用的时候，就叫做复用</p><p>这里就放出<code>STM32F42xxx</code>和<code>STM32F43xxx</code>系列的复位图：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404200751.png"></p><h2 id="GPIO主要特性"><a href="#GPIO主要特性" class="headerlink" title="GPIO主要特性"></a>GPIO主要特性</h2><ul><li>受控 <code>I/O</code> 多达 16 个</li><li>输出状态：推挽或开漏 + 上拉/下拉</li><li>从输出数据寄存器 (<code>GPIOx_ODR</code>) 或外设（复用功能输出）输出数据</li><li>可为每个 <code>I/O</code> 选择不同的速度</li><li>输入状态：浮空、上拉/下拉、模拟</li><li>将数据输入到输入数据寄存器 (<code>GPIOx_IDR</code>) 或外设（复用功能输入）</li><li>置位和复位寄存器 (<code>GPIOx_BSRR</code>)，对 <code>GPIOx_ODR</code> 具有按位写权限</li><li>锁定机制 (<code>GPIOx_LCKR</code>)，可冻结 <code>I/O</code> 配置</li><li>模拟功能</li><li>复用功能输入/输出选择寄存器（一个 <code>I/O</code> 最多可具有 16 个复用功能）</li><li>快速翻转，每次翻转最快只需要两个时钟周期</li><li>引脚复用非常灵活，允许将 <code>I/O</code> 引脚用作 <code>GPIO</code> 或多种外设功能中的一种</li></ul><h2 id="GPIO的工作模式"><a href="#GPIO的工作模式" class="headerlink" title="GPIO的工作模式"></a>GPIO的工作模式</h2><ul><li>输入浮空</li><li>输入上拉</li><li>输入下拉</li><li>模拟功能</li><li>具有上拉或下拉功能的开漏输出</li><li>具有上拉或下拉功能的推挽输出</li><li>具有上拉或下拉功能的复用功能推挽</li><li>具有上拉或下拉功能的复用功能开漏</li></ul><h2 id="GPIO框图剖析"><a href="#GPIO框图剖析" class="headerlink" title="GPIO框图剖析"></a>GPIO框图剖析</h2><h3 id="框图"><a href="#框图" class="headerlink" title="框图"></a>框图</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404200313.png"></p><p>我们所用到的每一个<code>GPIO</code>其内部结构都是这样，分别对应着<code>GPIO</code>的八种模式</p><h3 id="内部介绍"><a href="#内部介绍" class="headerlink" title="内部介绍"></a>内部介绍</h3><p>保护二极管：  <code>I/O</code>引脚上下两边两个二极管用于防止引脚外部过高、过低的电压输入，当引脚电压高于<code>VDD_FT</code>时，上方的二极管导通，当引脚电压低于<code>VSS</code>时，下方的二极管导通，防止不正常电压引入芯片导致芯片烧毁</p><p>上拉、下拉电阻：控制引脚默认状态的电压，开启上拉的时候引脚默认电压为高电平，开启下拉的时候引脚默认电压为低电平</p><p>TTL施密特触发器：基本原理是当输入电压高于正向阈值电压，输出为高；当输入电压低于负向阈值电压，输出为低；<code>I/O</code>口信号经过触发器后，模拟信号转化为0和1的数字信号    也就是高低电平  并且是TTL电平协议   这也是为什么STM32是TTL电平协议的原因</p><p><code>P-MOS</code>管和<code>N-MOS</code>管：信号由<code>P-MOS</code>管和<code>N-MOS</code>管，依据两个MOS管的工作方式，使得<code>GPIO</code>具有“推挽输出”和“开漏输出”的模式     <code>P-MOS</code>管高电平导通，低电平关闭，下方的<code>N-MOS</code>低电平导通，高电平关闭</p><blockquote><p>注：<code>VDD_FT</code>  代表IO口，兼容3.3V和5V，如果没有标注“FT”，就代表着不兼容5V </p></blockquote><h2 id="GPIO的工作模式剖析"><a href="#GPIO的工作模式剖析" class="headerlink" title="GPIO的工作模式剖析"></a>GPIO的工作模式剖析</h2><h3 id="输入浮空"><a href="#输入浮空" class="headerlink" title="输入浮空"></a>输入浮空</h3><ul><li>输出缓冲器被关闭</li><li>施密特触发器输入被打开</li><li>根据 <code>GPIOx_PUPDR</code> 寄存器中的值决定是否打开上拉和下拉电阻</li><li>输入数据寄存器每隔 1 个 AHB1 时钟周期对 <code>I/O</code> 引脚上的数据进行一次采样</li><li>对输入数据寄存器的读访问可获取 <code>I/O</code> 状态</li></ul><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404200847.png"></p><h4 id="不上拉也不下拉"><a href="#不上拉也不下拉" class="headerlink" title="不上拉也不下拉"></a>不上拉也不下拉</h4><p><code>I/O</code>端口的电平信号直接进入输入数据寄存器。MCU直接读取<code>I/O</code>口电平，<code>I/O</code>的电平状态是不确定的，完全由外部输入决定；如果在该引脚悬空（在无信号输入）的情况下，读取该端口的电平是不确定的。 (接用电压表测量其引脚电压为1点几伏，这是个不确定值) 以用来做KEY识别</p><h4 id="上拉"><a href="#上拉" class="headerlink" title="上拉"></a>上拉</h4><p>IO内部接上拉电阻，此时如果<code>I/O</code>口外部没有信号输入或者引脚悬空，<code>I/O</code>口默认为高电平  如果<code>I/O</code>口输入低电平，那么引脚就为低电平，MCU读取到的就是低电平</p><blockquote><p>注：STM32的内部上拉是”弱上拉”，即通过此上拉输出的电流是很弱的，如要求大电流还是需要外部上拉。</p></blockquote><h4 id="下拉"><a href="#下拉" class="headerlink" title="下拉"></a>下拉</h4><p><code>I/O</code>内部接下拉电阻，此时如果<code>I/O</code>口外部没有信号输入或者引脚悬空，<code>I/O</code>口默认为低电平  如果<code>I/O</code>口输入高电平，那么引脚就为高电平，MCU读取到的就是高电平</p><h3 id="模拟模式"><a href="#模拟模式" class="headerlink" title="模拟模式"></a>模拟模式</h3><ul><li>输出缓冲器被禁止。</li><li>施密特触发器输入停用，<code>I/O</code> 引脚的每个模拟输入的功耗变为零。施密特触发器的输出被强制处理为恒定值 (0)。</li><li>弱上拉和下拉电阻被关闭。</li><li>对输入数据寄存器的读访问值为“0”。</li></ul><blockquote><p>注：在模拟配置中，<code>I/O</code> 引脚不能为 5 V 容忍。</p></blockquote><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404201533.png"></p><p>当<code>GPIO</code>引脚用于ADC采集电压的输入通道时，用作”模拟输入”功能，此时信号不经过施密特触发器，直接直接进入ADC模块，并且输入数据寄存器为空 ，CPU不能在输入数据寄存器上读到引脚状态</p><p>当<code>GPIO</code>用于模拟功能时，引脚的上、下拉电阻是不起作用的，这个时候即使配置了上拉或下拉模式，也不会影响到模拟信号的输入输出</p><p>除了 ADC 和 DAC 要将 <code>I/O</code> 配置为模拟通道之外其他外设功能一律 要配置为复用功能模式，</p><h3 id="输出模式"><a href="#输出模式" class="headerlink" title="输出模式"></a>输出模式</h3><ul><li>输出缓冲器被打开：<ul><li>开漏模式：输出寄存器中的“0”可激活 <code>N-MOS</code>，而输出寄存器中的“1”会使端口保持高组态 (Hi-Z)（<code>P-MOS</code> 始终不激活）。</li><li>推挽模式：输出寄存器中的“0”可激活 <code>N-MOS</code>，而输出寄存器中的“1”可激活<code>P-MOS</code>。</li></ul></li><li>施密特触发器输入被打开</li><li>根据 <code>GPIOx_PUPDR</code> 寄存器中的值决定是否打开弱上拉电阻和下拉电阻</li><li>输入数据寄存器每隔 1 个 AHB1 时钟周期对 <code>I/O</code> 引脚上的数据进行一次采样</li><li>对输入数据寄存器的读访问可获取 <code>I/O</code> 状态</li><li>对输出数据寄存器的读访问可获取最后的写入值</li></ul><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404201809.png"></p><h4 id="开漏输出模式（带上拉或者下拉）"><a href="#开漏输出模式（带上拉或者下拉）" class="headerlink" title="开漏输出模式（带上拉或者下拉）"></a>开漏输出模式（带上拉或者下拉）</h4><p>在开漏输出模式时，只有<code>N-MOS</code>管工作，如果我们控制输出为0，低电平，则<code>P-MOS</code>管关闭，<code>N-MOS</code>管导通，使输出低电平，<code>I/O</code>端口的电平就是低电平，若控制输出为1时，高电平，则<code>P-MOS</code>管和<code>N-MOS</code>管都关闭，输出指令就不会起到作用，此时<code>I/O</code>端口的电平就不会由输出的高电平决定，而是由<code>I/O</code>端口外部的上拉或者下拉决定   如果没有上拉或者下拉 IO口就处于悬空状态</p><blockquote><p>此时施密特触发器是打开的，即输入可用，通过输入数据寄存器<code>GPIOx_IDR</code>可读取<code>I/O</code>的实际状态。，<code>I/O</code>口的电平不一定是输出的电平   </p></blockquote><h4 id="推挽输出模式（带上拉或者下拉）"><a href="#推挽输出模式（带上拉或者下拉）" class="headerlink" title="推挽输出模式（带上拉或者下拉）"></a>推挽输出模式（带上拉或者下拉）</h4><p>在推挽输出模式时，<code>N-MOS</code>管和<code>P-MOS</code>管都工作，如果我们控制输出为0，低电平，则<code>P-MOS</code>管关闭，<code>N-MOS</code>管导通，使输出低电平，<code>I/O</code>端口的电平就是低电平，若控制输出为1 高电平，则<code>P-MOS</code>管导通<code>N-MOS</code>管关闭，使输出高电平，<code>I/O</code>端口的电平就是高电平，  外部上拉和下拉的作用是控制在没有输出时<code>I/O</code>口电平</p><blockquote><p>此时施密特触发器是打开的，即输入可用，通过输入数据寄存器<code>GPIOx_IDR</code>可读取<code>I/O</code>的实际状态。<code>I/O</code>口的电平一定是输出的电平   </p></blockquote><h3 id="复用模式"><a href="#复用模式" class="headerlink" title="复用模式"></a>复用模式</h3><ul><li>可将输出缓冲器配置为开漏或推挽</li><li>输出缓冲器由来自外设的信号驱动（发送器使能和数据）</li><li>施密特触发器输入被打开</li><li>根据 <code>GPIOx_PUPDR</code> 寄存器中的值决定是否打开弱上拉电阻和下拉电阻</li><li>输入数据寄存器每隔 1 个 AHB1 时钟周期对 <code>I/O</code> 引脚上的数据进行一次采样</li><li>对输入数据寄存器的读访问可获取 <code>I/O</code> 状态</li></ul><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404202128.png"></p><h4 id="复用开漏输出（带上拉或者下拉）"><a href="#复用开漏输出（带上拉或者下拉）" class="headerlink" title="复用开漏输出（带上拉或者下拉）"></a>复用开漏输出（带上拉或者下拉）</h4><p><code>GPIO</code>复用为其他外设，输出数据寄存器<code>GPIOx_ODR</code>无效；  输出的高低电平的来源于其它外设，施密特触发器打开，输入可用，通过输入数据寄存器可获取<code>I/O</code>实际状态    除了输出信号的来源改变 其他与开漏输出功能相同</p><h4 id="复用推挽输出（带上拉或者下拉）"><a href="#复用推挽输出（带上拉或者下拉）" class="headerlink" title="复用推挽输出（带上拉或者下拉）"></a>复用推挽输出（带上拉或者下拉）</h4><p>复用为其他外设(如 I2C)，输出数据寄存器<code>GPIOx_ODR</code>无效；  输出的高低电平的来源于其它外设，施密特触发器打开，输入可用，通过输入数据寄存器可获取<code>I/O</code>实际状态    除了输出信号的来源改变 其他与开漏输出功能相同</p><h3 id="开漏输出和推挽输出的区别"><a href="#开漏输出和推挽输出的区别" class="headerlink" title="开漏输出和推挽输出的区别"></a>开漏输出和推挽输出的区别</h3><h4 id="推挽输出"><a href="#推挽输出" class="headerlink" title="推挽输出"></a>推挽输出</h4><p>可以输出强高低电平，连接数字器件 </p><p>推挽结构一般是指两个三极管分别受两互补信号的控制,总是在一个三极管导通的时候另一个截止</p><h4 id="开漏输出"><a href="#开漏输出" class="headerlink" title="开漏输出"></a>开漏输出</h4><p>可以输出强低电平，高电平得靠外部电阻拉高。输出端相当于三极管的集电极. 需要外接上拉电阻，才能实现输出高电平  合于做电流型的驱动，其吸收电流的能力相对强(一般20ma以内)</p><p>在使用任何一种开漏模式时，都需要接上拉电阻，否则只能输出低电平</p><h4 id="框图对比"><a href="#框图对比" class="headerlink" title="框图对比"></a>框图对比</h4><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404202454.png"></p><p>推挽输出电路： 其中IN端输出高电平时下面的PNP三极管截止，而上面NPN三极管导通，输出电平VS+；当IN端输出低电平时则恰恰相反，PNP三极管导通，输出和地相连，为低电平   </p><p>开漏输出电路：IN端输出低电平时，三极管导通，使输出接地，IN端输出高电平时，三极管截止，所以引脚既不输出高电平，也不输出低电平，为高阻态。为正常使用时必须接上拉电阻</p><h3 id="在STM32中选用I-O模式推荐"><a href="#在STM32中选用I-O模式推荐" class="headerlink" title="在STM32中选用I/O模式推荐"></a>在STM32中选用I/O模式推荐</h3><ul><li>上拉输入、下拉输入可以用来检测外部信号；例如，按键等；</li><li>模拟输入 ——应用ADC模拟输入，或者低功耗下省电</li><li>开漏输出一般应用在I2C、SMBUS通讯等需要”线与”功能的总线电路中。</li><li>推挽输出模式一般应用在输出电平为0和3.3伏而且需要高速切换开关状态的场合。在STM32的应用中，除了必须用开漏模式的场合，我们都习惯使用推挽输出模式。</li><li>复用功能的推挽输出_AF_PP ——片内外设功能（I2C的SCL,SDA）</li><li>复用功能的开漏输出_AF_OD——片内外设功能（TX1,MOSI,MISO.SCK.SS）</li></ul><h3 id="STM32F1同STM32F4的GPIO基本结构比较"><a href="#STM32F1同STM32F4的GPIO基本结构比较" class="headerlink" title="STM32F1同STM32F4的GPIO基本结构比较"></a>STM32F1同STM32F4的GPIO基本结构比较</h3><p>F1系列(M3)<code>I/O</code>口基本结构：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404202752.png"></p><p>F4系列(M4)<code>I/O</code>口基本结构：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200404202819.png"></p><p>F4系列设计的更加高级与人性化，他将外部上下拉电阻转移到了输出/输入驱动器外部，使得输出模式下也可以实现内部上拉与下拉，方便了用户的使用，增加了灵活性</p><h2 id="GPIO初始化例子"><a href="#GPIO初始化例子" class="headerlink" title="GPIO初始化例子"></a>GPIO初始化例子</h2><p>这里使用的是STM32F429IGT6的LED初始化例程，有STM32cubeMX生成</p><h3 id="开启时钟"><a href="#开启时钟" class="headerlink" title="开启时钟"></a>开启时钟</h3><p>STM32F4为了使功耗降低，默认状态下<code>GPIO</code>的时钟是关闭的，使用时需要将其打开，具体哪个端口对应什么时钟需要在官方的数据手册查询</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* `GPIO` Ports Clock Enable */</span></span><br><span class="line">__HAL_RCC_`GPIO`D_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Configure `GPIO` pin Output Level */</span></span><br><span class="line">HAL_`GPIO`_WritePin(LED4_`GPIO`_Port, LED4_Pin, `GPIO`_PIN_SET);</span><br></pre></td></tr></table></figure><h3 id="编辑初始化结构体并且调用初始化库函数"><a href="#编辑初始化结构体并且调用初始化库函数" class="headerlink" title="编辑初始化结构体并且调用初始化库函数"></a>编辑初始化结构体并且调用初始化库函数</h3><p>STM32的初始化函数结构体定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint32_t</span> Pin;       <span class="comment">/*!&lt; Specifies the `GPIO` pins to be configured.</span></span><br><span class="line"><span class="comment">                           This parameter can be any value of @ref `GPIO`_pins_define */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Mode;      <span class="comment">/*!&lt; Specifies the operating mode for the selected pins.</span></span><br><span class="line"><span class="comment">                           This parameter can be a value of @ref `GPIO`_mode_define */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Pull;      <span class="comment">/*!&lt; Specifies the Pull-up or Pull-Down activation for the selected pins.</span></span><br><span class="line"><span class="comment">                           This parameter can be a value of @ref `GPIO`_pull_define */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Speed;     <span class="comment">/*!&lt; Specifies the speed for the selected pins.</span></span><br><span class="line"><span class="comment">                           This parameter can be a value of @ref `GPIO`_speed_define */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Alternate;  <span class="comment">/*!&lt; Peripheral to be connected to the selected pins. </span></span><br><span class="line"><span class="comment">                            This parameter can be a value of @ref `GPIO`_Alternate_function_selection */</span></span><br><span class="line">&#125;`GPIO`_InitTypeDef;</span><br></pre></td></tr></table></figure><p>编辑结构体并且调用初始化函数将<code>GPIO</code>初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">`GPIO`_InitTypeDef `GPIO`_InitStruct = &#123;<span class="number">0</span>&#125;;               <span class="comment">//定义初始化结构体</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Configure `GPIO` pin : LED4_Pin */</span>                    <span class="comment">//编辑初始化结构体</span></span><br><span class="line">`GPIO`_InitStruct.Pin = LED4_Pin;                       <span class="comment">//设置要初始化的`GPIO`端口</span></span><br><span class="line">`GPIO`_InitStruct.Mode = `GPIO`_MODE_OUTPUT_PP;           <span class="comment">//设置`GPIO`工作模式为推挽输出</span></span><br><span class="line">`GPIO`_InitStruct.Pull = `GPIO`_NOPULL;                   <span class="comment">//设置`GPIO`既不上拉也不下拉</span></span><br><span class="line">`GPIO`_InitStruct.Speed = `GPIO`_SPEED_FREQ_LOW;          <span class="comment">//设置`GPIO`速度为低速模式</span></span><br><span class="line"></span><br><span class="line">HAL_`GPIO`_Init(LED4_`GPIO`_Port, &amp;`GPIO`_InitStruct);      <span class="comment">//调用初始化函数</span></span><br></pre></td></tr></table></figure><p>从库函数中不难看出STM32F429IGT6的输出速度有如下四种配置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** @defgroup `GPIO`_speed_define  `GPIO` speed define</span></span><br><span class="line"><span class="comment">  * @brief `GPIO` Output Maximum frequency</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  `GPIO`_SPEED_FREQ_LOW         0x00000000U  <span class="comment">/*!&lt; IO works at 2 MHz, please refer to the product datasheet */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  `GPIO`_SPEED_FREQ_MEDIUM      0x00000001U  <span class="comment">/*!&lt; range 12,5 MHz to 50 MHz, please refer to the product datasheet */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  `GPIO`_SPEED_FREQ_HIGH        0x00000002U  <span class="comment">/*!&lt; range 25 MHz to 100 MHz, please refer to the product datasheet  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  `GPIO`_SPEED_FREQ_VERY_HIGH   0x00000003U  <span class="comment">/*!&lt; range 50 MHz to 200 MHz, please refer to the product datasheet  */</span></span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><ul><li>2MHz</li><li>5MHz~50MHz</li><li>25MHz~100MHz</li><li>50MHz~200MHz</li></ul><h3 id="初始化完毕"><a href="#初始化完毕" class="headerlink" title="初始化完毕"></a>初始化完毕</h3><p>至此，一个简单的<code>GPIO</code>初始化完成，可以通过寄存器操作或库函数操作去输出高低电平，从而点亮LED灯了</p><blockquote><p>我都忘了点了多少个LED灯了，各种花式点灯(￣▽￣)~*</p></blockquote><hr><p>本文参考：<a href="http://bbs.elecfans.com/jishu_1917366_1_1.html">[经验] 深度剖析STM32F4 GPIO的八种工作模式</a></p><p>本文参考：STM32F4xxx中文参考手册</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/STM32/">STM32</category>
      
      
      <category domain="https://zztweb.top/tags/STM32/">STM32</category>
      
      <category domain="https://zztweb.top/tags/%E5%8D%95%E7%89%87%E6%9C%BA/">单片机</category>
      
      <category domain="https://zztweb.top/tags/GPIO/">GPIO</category>
      
      
      <comments>https://zztweb.top/posts/a840fa9b.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux各类发行板网络服务重启方式</title>
      <link>https://zztweb.top/posts/d27b4817.html</link>
      <guid>https://zztweb.top/posts/d27b4817.html</guid>
      <pubDate>Fri, 03 Apr 2020 04:34:48 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>今天重新设置了<code>onenote</code>的<code>hosts</code>文件，然后本着不想重启电脑的迷惑心态尝试通过命令行重启系统的网络服务</p><p>然后发现<code>manjaro linux</code>中木的<code>service</code>命令</p><p>所以就在网上找了找，防止以后忘了，记在这里</p><h2 id="CentOS-RHEL-Red-Hat-Fedora"><a href="#CentOS-RHEL-Red-Hat-Fedora" class="headerlink" title="CentOS / RHEL / Red Hat / Fedora"></a>CentOS / RHEL / Red Hat / Fedora</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service network stop</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service network start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service network restart</span></span><br></pre></td></tr></table></figure><h2 id="Ubuntu-Debian"><a href="#Ubuntu-Debian" class="headerlink" title="Ubuntu/Debian"></a>Ubuntu/Debian</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service networking stop</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service networking start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service networking restart</span></span><br></pre></td></tr></table></figure><h2 id="Arch-Linux-Manjaro-Linux"><a href="#Arch-Linux-Manjaro-Linux" class="headerlink" title="Arch Linux/Manjaro Linux"></a>Arch Linux/Manjaro Linux</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl stop systemd-networkd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl start systemd-networkd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl restart systemd-networkd</span> </span><br></pre></td></tr></table></figure><p>希望以后不要忘了</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/Manjaro/">Manjaro</category>
      
      <category domain="https://zztweb.top/tags/Ubuntu/">Ubuntu</category>
      
      <category domain="https://zztweb.top/tags/CentOS/">CentOS</category>
      
      <category domain="https://zztweb.top/tags/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%87%8D%E5%90%AF/">网络服务重启</category>
      
      
      <comments>https://zztweb.top/posts/d27b4817.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PicGo配置gitee图床</title>
      <link>https://zztweb.top/posts/ba9c4b95.html</link>
      <guid>https://zztweb.top/posts/ba9c4b95.html</guid>
      <pubDate>Thu, 02 Apr 2020 08:49:19 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="建立gitee仓库"><a href="#建立gitee仓库" class="headerlink" title="建立gitee仓库"></a>建立gitee仓库</h2><h3 id="注册码云账号"><a href="#注册码云账号" class="headerlink" title="注册码云账号"></a>注册码云账号</h3><p>进入<a href="https://gitee.com/">码云官网</a>,点击右上角的注册，如果有账号了就直接登陆</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402165915.png"></p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170209.png"></p><p>填写完仓库名称以及勾选<code>公开</code></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170520.png"></p><p>在跳转后的链接中复制后半段</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170749.png"></p><h2 id="安装第三方插件"><a href="#安装第三方插件" class="headerlink" title="安装第三方插件"></a>安装第三方插件</h2><p>在<code>PicGo</code>的插件项中搜索<code>gitee</code>，会找到两个插件，我比较建议安装第二个插件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402165347.png"></p><p>点击图床设置，选择gitee，吧刚才复制的后半段链接粘贴到第一个文本框中</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171001.png"></p><h2 id="请求token"><a href="#请求token" class="headerlink" title="请求token"></a>请求token</h2><p>在gitee页面点击设置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171158.png"></p><p>选择私人令牌</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171312.png"></p><p>点击右上角的<code>添加新令牌</code>，在页面中选择第二个和第三个复选框</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171434.png"></p><p>之后系统会让你输入账号密码来验证安全性，输完密码后会弹出你的私人令牌</p><blockquote><p>注：私人令牌只会出现一次，如果遗失请删除原令牌后新建一个新的私人令牌</p></blockquote><p>然后将你的私人令牌粘贴到<code>PicGo</code>中的第三个文本框中</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171001.png"></p><p>点击<code>设为默认图床</code>，在点击<code>确认</code></p><p>至此，<code>PicGo</code>配置<code>gitee</code>图床完成</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/PicGo/">PicGo</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%BE%E5%BA%8A/">图床</category>
      
      <category domain="https://zztweb.top/tags/gitee/">gitee</category>
      
      <category domain="https://zztweb.top/tags/gitee%E5%9B%BE%E5%BA%8A/">gitee图床</category>
      
      
      <comments>https://zztweb.top/posts/ba9c4b95.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>分享一个图床软件-PicGo</title>
      <link>https://zztweb.top/posts/c07567fd.html</link>
      <guid>https://zztweb.top/posts/c07567fd.html</guid>
      <pubDate>Thu, 02 Apr 2020 08:24:17 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="PicGo概述"><a href="#PicGo概述" class="headerlink" title="PicGo概述"></a>PicGo概述</h2><p>先上图</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402162635.png"></p><p>PicGo: 一个用于快速上传图片并获取图片URL链接的工具</p><p>软件本体支持的图床：</p><ul><li>七牛图床</li><li>腾讯云</li><li>又拍云</li><li>GitHub</li><li>阿里云</li><li>Imhur图床</li></ul><p>我用的是以<code>码云</code>为平台搭建的图床，别的不说，国内访问就是快。</p><h2 id="PicGo功能"><a href="#PicGo功能" class="headerlink" title="PicGo功能"></a>PicGo功能</h2><p>其实从上面的界面截图就可以看出大部分的功能</p><ul><li>支持推拽图片上传</li><li>支持系统剪贴板图片上传</li><li><code>Windows</code>和<code>macOS</code>支持右键菜单上传</li><li>上传图片后自动返回链接到剪贴板</li><li>支持返回<code>markdown</code>,<code>HTML</code>,<code>URL</code>,<code>UBB</code>,<code>Custom</code>格式的链接</li><li>支持插件系统，从而支持第三方图床，比如我我就是用的第三方插件<code>gitee-uploader</code></li><li>支持HTTP请求上传图片，最好的例子：<code>Typora</code>的图片自动上传至图床就是用的这个功能</li></ul><p>可以去看看官方给的<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">快速上手</a></p><p><code>PicGo</code>的<a href="https://github.com/PicGo/Awesome-PicGo">插件页面</a></p><h2 id="PicGo下载安装"><a href="#PicGo下载安装" class="headerlink" title="PicGo下载安装"></a>PicGo下载安装</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases">官方链接</a></p><blockquote><p>注：我在配置<code>manjaro linux</code>下的<code>PicGo</code>时发现它有可能会卡死系统的<code>KDE</code>界面</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/PicGo/">PicGo</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%BE%E5%BA%8A/">图床</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%BE%E5%BA%8A%E8%BD%AF%E4%BB%B6/">图床软件</category>
      
      
      <comments>https://zztweb.top/posts/c07567fd.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>mkv文件处理工具-mkvtoolnix</title>
      <link>https://zztweb.top/posts/eeec278f.html</link>
      <guid>https://zztweb.top/posts/eeec278f.html</guid>
      <pubDate>Wed, 01 Apr 2020 10:38:25 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="mkvtoolnix工具简介"><a href="#mkvtoolnix工具简介" class="headerlink" title="mkvtoolnix工具简介"></a>mkvtoolnix工具简介</h2><p>MKVToolNix是一个用于创建，检查和修改mkv文件的工具，可用于Lunx，其他Unices和Windows</p><blockquote><p>官网原文：MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.</p></blockquote><h3 id="工具截图"><a href="#工具截图" class="headerlink" title="工具截图"></a>工具截图</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102216.png"></p><blockquote><p>截图的版本是43.0.0，官网现在最新是44.0.0</p></blockquote><h3 id="官网截图"><a href="#官网截图" class="headerlink" title="官网截图"></a>官网截图</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102343.png"></p><p><a href="https://mkvtoolnix.download/">官网地址：https://mkvtoolnix.download/</a></p><h2 id="mkvtoolnix工具功能"><a href="#mkvtoolnix工具功能" class="headerlink" title="mkvtoolnix工具功能"></a>mkvtoolnix工具功能</h2><ul><li>文件混流</li><li>检查mkv文件信息</li><li>编辑mkv文件头部</li><li>编辑mkv文件章节</li></ul><h3 id="文件混流"><a href="#文件混流" class="headerlink" title="文件混流"></a>文件混流</h3><p>第一标签页中可以让多个文件混流为一个mkv文件，也可以让多个文件混轮到一个mkv文件内</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102749.png"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102939.png"></p><p>第二标签页控制mkv文件的输出</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103006.png"></p><p>第三标签页可以添加自定义的附件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103202.png"></p><h3 id="检查mkv文件信息"><a href="#检查mkv文件信息" class="headerlink" title="检查mkv文件信息"></a>检查mkv文件信息</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103316.png"></p><h3 id="编辑mkv文件头部"><a href="#编辑mkv文件头部" class="headerlink" title="编辑mkv文件头部"></a>编辑mkv文件头部</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103503.png"></p><h3 id="编辑mkv文件章节"><a href="#编辑mkv文件章节" class="headerlink" title="编辑mkv文件章节"></a>编辑mkv文件章节</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103609.png"></p><h2 id="mkvtoolnix工具安装"><a href="#mkvtoolnix工具安装" class="headerlink" title="mkvtoolnix工具安装"></a>mkvtoolnix工具安装</h2><p>官网上有各种平台的安装文件和安装方法</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103753.png"></p><p>由于我只用<code>Windows</code>和<code>manjaro linux</code>所以只介绍这两个系统的安装方式</p><h3 id="Windows安装方式"><a href="#Windows安装方式" class="headerlink" title="Windows安装方式"></a>Windows安装方式</h3><ul><li><p>点击<code>Downloads</code>进入下载页面</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104100.png"></p></li><li><p>点击<code>Windows</code>跳转到相应的部分</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104239.png"></p></li><li><p>点击图中的链接</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104430.png"></p><p>不要去点击下面那酷似下载链接的超链接，那是SHA校验</p></li><li><p>进入软件网站后根据自己的系统选择相应的文件去下载</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104718.png"></p></li></ul><h3 id="manjaro-linux安装方式"><a href="#manjaro-linux安装方式" class="headerlink" title="manjaro linux安装方式"></a>manjaro linux安装方式</h3><p>因为<code>manjaro linux</code>是<code>arch linux</code>系的系统，使用<code>pacman</code>管理安装包，所以直接运行下面的命令就行了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S mkvtoolnix-cli mkvtoolnix-gui</span><br></pre></td></tr></table></figure><p>在这里也可以看出来<code>mkvtoolnix</code>是由命令行程序<code>mkvtoolnix-cli</code>和图形化界面<code>mkvtoolnix-gui</code>组成，类似于<code>arch linux</code>中的<code>Qv2ray</code></p><h2 id="mkvtoolnix使用说明"><a href="#mkvtoolnix使用说明" class="headerlink" title="mkvtoolnix使用说明"></a>mkvtoolnix使用说明</h2><p>建议去<a href="https://mkvtoolnix.download/">官网</a>找说明文档</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/mkvtoolnix/">mkvtoolnix</category>
      
      <category domain="https://zztweb.top/tags/mkv/">mkv</category>
      
      <category domain="https://zztweb.top/tags/mkv%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/">mkv文件处理工具</category>
      
      
      <comments>https://zztweb.top/posts/eeec278f.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Manjaro中文输入法推荐</title>
      <link>https://zztweb.top/posts/26fb3f4d.html</link>
      <guid>https://zztweb.top/posts/26fb3f4d.html</guid>
      <pubDate>Wed, 01 Apr 2020 09:08:58 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>最新的<code>manjaro</code>因为组件更新的缘故会导致搜狗拼音输入法无法使用，在使用了其他输入法之后，我比较推荐<code>sunpinyin+cloudpinyin</code>的组合</p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>键入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-im fcitx-configtool fcitx-cloudyinpin fcitx-sunpinyin</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在<code>/etc/profile</code>或者<code>~/.xprofile</code>文件中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>才疏学浅，不知道怎么刷新，就重启电脑吧。</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95/">中文输入法</category>
      
      
      <comments>https://zztweb.top/posts/26fb3f4d.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Manjaro换源</title>
      <link>https://zztweb.top/posts/7795a5e7.html</link>
      <guid>https://zztweb.top/posts/7795a5e7.html</guid>
      <pubDate>Wed, 01 Apr 2020 08:45:50 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="修改官方源"><a href="#修改官方源" class="headerlink" title="修改官方源"></a>修改官方源</h2><p>运行下面的命令，将对中国源进行排序：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure><p>然后选第一行的源就行了</p><h2 id="添加archlinux源"><a href="#添加archlinux源" class="headerlink" title="添加archlinux源"></a>添加archlinux源</h2><p>运行下面的命令，修改文件<code>/etc/pacman.conf</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><p>在文件末尾添加：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中科大源</span></span><br><span class="line"></span><br><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清华源</span></span><br><span class="line"></span><br><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>上面两个源用快的那个就行了。</p><h2 id="更新缓存"><a href="#更新缓存" class="headerlink" title="更新缓存"></a>更新缓存</h2><p>执行命令，更新缓存：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/%E6%BA%90/">源</category>
      
      <category domain="https://zztweb.top/tags/linux%E6%BA%90/">linux源</category>
      
      
      <comments>https://zztweb.top/posts/7795a5e7.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux下zip文件解压乱码问题处理</title>
      <link>https://zztweb.top/posts/44513157.html</link>
      <guid>https://zztweb.top/posts/44513157.html</guid>
      <pubDate>Wed, 01 Apr 2020 06:08:36 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><ul><li><code>linux</code>与<code>windows</code>系统的压缩文件的默认编码不同，所以导致一部分<code>windows</code>平台下压缩的压缩文件在<code>linux</code>系统下解压乱码</li></ul><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>现在网络上可以找到的解决方案有如下几点：</p><ul><li>在使用命令<code>unzip</code>是添加参数<code>-O</code>更改解压编码，从而解决文件名乱码问题（将<code>-O</code>封装到<code>unzip</code>命令中）</li><li>正常解压。然后用命令装换文件编码</li><li>如果是<code>arch系的linux</code>系统则非常简单，安装相应的<code>AUR</code>工具即可</li></ul><p>因为我常用<code>manjaro linux</code>，所以在这儿只详细介绍第三种方法</p><h2 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h2><p>使用<code>AUR</code>安装工具<code>unzip-natspec</code>和<code>p7zip-natspec</code>，命令行如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S unzip-natspec p7zip-natspec</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/zip/">zip</category>
      
      <category domain="https://zztweb.top/tags/7z/">7z</category>
      
      <category domain="https://zztweb.top/tags/%E4%B9%B1%E7%A0%81/">乱码</category>
      
      <category domain="https://zztweb.top/tags/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/">压缩文件</category>
      
      
      <comments>https://zztweb.top/posts/44513157.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CSGO练习投掷物有关指令</title>
      <link>https://zztweb.top/posts/4dbff450.html</link>
      <guid>https://zztweb.top/posts/4dbff450.html</guid>
      <pubDate>Sat, 28 Dec 2019 06:01:28 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="设置比赛时间"><a href="#设置比赛时间" class="headerlink" title="设置比赛时间"></a>设置比赛时间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mp_roundtime <span class="number">60</span> <span class="comment">#死亡竞技模式</span></span><br><span class="line"></span><br><span class="line">mp_roundtime_defuse <span class="number">60</span> <span class="comment">#休闲和竞技模式</span></span><br></pre></td></tr></table></figure><h2 id="关闭队友伤害"><a href="#关闭队友伤害" class="headerlink" title="关闭队友伤害"></a>关闭队友伤害</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mp_teammates_are_enemies <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="开启作弊模式"><a href="#开启作弊模式" class="headerlink" title="开启作弊模式"></a>开启作弊模式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sv_cheats <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="允许投掷物5枚"><a href="#允许投掷物5枚" class="headerlink" title="允许投掷物5枚"></a>允许投掷物5枚</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ammo_grenade_limit_total <span class="number">5</span></span><br></pre></td></tr></table></figure><h1 id="无限弹药手雷"><a href="#无限弹药手雷" class="headerlink" title="无限弹药手雷"></a>无限弹药手雷</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sv_infinite_ammo <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="开启投掷物轨迹"><a href="#开启投掷物轨迹" class="headerlink" title="开启投掷物轨迹"></a>开启投掷物轨迹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sv_grenade_trajectory <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="钱数目设置16000"><a href="#钱数目设置16000" class="headerlink" title="钱数目设置16000"></a>钱数目设置16000</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mp_startmoney <span class="number">16000</span></span><br></pre></td></tr></table></figure><h2 id="地图重新开始"><a href="#地图重新开始" class="headerlink" title="地图重新开始"></a>地图重新开始</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mp_restartgame <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mp_roundtime <span class="number">60</span> <span class="comment">#死亡竞技模式比赛时间60分钟</span></span><br><span class="line">mp_roundtime_defuse <span class="number">60</span> <span class="comment">#休闲和竞技模式比赛时间60分钟</span></span><br><span class="line"></span><br><span class="line">mp_teammates_are_enemies <span class="number">0</span> <span class="comment">#关闭队友伤害</span></span><br><span class="line"></span><br><span class="line">sv_cheats <span class="number">1</span> <span class="comment">#开启作弊模式</span></span><br><span class="line"></span><br><span class="line">ammo_grenade_limit_total <span class="number">5</span> <span class="comment">#允许投掷物5枚</span></span><br><span class="line"></span><br><span class="line">sv_infinite_ammo <span class="number">1</span> <span class="comment">#无限弹药手雷</span></span><br><span class="line"></span><br><span class="line">sv_grenade_trajectory <span class="number">1</span> <span class="comment">#开启投掷物轨迹</span></span><br><span class="line"></span><br><span class="line">mp_startmoney <span class="number">16000</span> <span class="comment">#钱数目设置16000</span></span><br><span class="line"></span><br><span class="line">mp_restartgame <span class="number">1</span> <span class="comment">#地图重新开始</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/CSGO/">CSGO</category>
      
      
      <category domain="https://zztweb.top/tags/CSGO/">CSGO</category>
      
      <category domain="https://zztweb.top/tags/%E6%8A%95%E6%8E%B7%E7%89%A9/">投掷物</category>
      
      <category domain="https://zztweb.top/tags/%E9%81%93%E5%85%B7/">道具</category>
      
      
      <comments>https://zztweb.top/posts/4dbff450.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言学习-字符串转整数</title>
      <link>https://zztweb.top/posts/93e92635.html</link>
      <guid>https://zztweb.top/posts/93e92635.html</guid>
      <pubDate>Mon, 25 Nov 2019 13:21:37 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>利用C语言标准库中的<code>int atoi()</code>函数(头文件<code>&lt;stdlib.h&gt;</code>)实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = atoi(<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>自己编写函数实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_to_int</span><span class="params">(<span class="keyword">char</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> slong = <span class="number">-1</span>, num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; *(p + slong + <span class="number">1</span>) &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; *(p + slong + <span class="number">1</span>) &gt;= <span class="string">&#x27;0&#x27;</span>; slong++);</span><br><span class="line"><span class="keyword">for</span> (; slong &gt;= <span class="number">0</span>; slong--)</span><br><span class="line">num += (*(p++) - (<span class="string">&#x27;0&#x27;</span> - <span class="number">0</span>)) * <span class="built_in">pow</span>(<span class="number">10</span>, slong);</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = str_to_int(<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>利用C语言标准库中的<code>double atof()</code>函数(头文件<code>&lt;stdlib.h&gt;</code>)实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num = atof(<span class="string">&quot;1234.5678&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B4%E6%95%B0/">字符串转整数</category>
      
      
      <comments>https://zztweb.top/posts/93e92635.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言学习-大一C语言实验课代码</title>
      <link>https://zztweb.top/posts/a65ba048.html</link>
      <guid>https://zztweb.top/posts/a65ba048.html</guid>
      <pubDate>Sun, 24 Nov 2019 12:44:08 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>大一的实验课报告再此放出：</p><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><ol><li>   通过上机实践编程，辅以典型例题，熟悉编程环境，提升实际动手编程能力。</li><li>   掌握C语言的基本输入输出函数。</li><li>   掌握C语言的三种程序结构(顺序结构、选择结构、循环结构)。</li><li>   掌握冒泡排序法和选择排序法，并用其解决实际问题。</li><li>   掌握C语言的9种控制语句并熟练运用。</li><li>   掌握函数的定义和调用的方法与格式。</li><li>   掌握一维数组以及多维数值的声明和访问格式。</li><li>   掌握字符串比较大小，字符串复制等有关字符串处理的函数。</li><li>   学会利用C语言标准库中的函数来简化自己的代码。</li></ol><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="实验一"><a href="#实验一" class="headerlink" title="实验一"></a>实验一</h3><h4 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h4><ul><li>题目：用scanf函数输入数据，a=3,b=7,x=8.2,y=123.22,c1=‘A’，c2=‘a’,用printf函数进行输出。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/1.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">float</span> x, y;</span><br><span class="line"><span class="keyword">char</span> c1, c2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;用scanf函数格式化输入数据，\na=3,b=7,x=8.2,y=123.22,c1=&#x27;A&#x27;,c2=&#x27;a&#x27;,\n用printf函数进行输出。\n注:输入的符号应为英文符号\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;a=%d,b=%d,x=%f,y=%f,c1=&#x27;%c&#x27;,c2=&#x27;%c&#x27;&quot;</span>,&amp;a,&amp;b,&amp;x,&amp;y,&amp;c1,<span class="number">1</span>,&amp;c2,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,x=%.1f,y=%.2f,c1=&#x27;%c&#x27;,c2=&#x27;%c&#x27;&quot;</span>,a,b,x,y,c1,c2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h4><ul><li>题目：设半径r=1.5,圆柱高h=3,求圆周长，圆面积，圆柱表面积，圆柱体积。用scanf输入数据，输出结果，输入要有文字说明，取小数点后2位数字。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/2.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926535</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> r, h;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;计算圆周长，圆面积，圆柱表面积，圆柱体积的程序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入半径r=&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入高h=&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;h);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆周长为%.2lf,圆面积为%.2lf,圆柱表面积为%.2lf,圆柱体积为%.2lf&quot;</span>, <span class="number">2</span> * PI * r, PI * r * r, <span class="number">2</span> * PI * r * h, PI * r * r * h);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h4><ul><li>题目：给出一个不多于5位的正整数，要求：（1） 求出它是几位数？（2） 分别输出每个数字？</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/3.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jishu</span><span class="params">(<span class="keyword">char</span>* a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fenli</span><span class="params">(<span class="keyword">char</span>* a, <span class="keyword">char</span>* b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c[MAX];</span><br><span class="line"><span class="keyword">char</span> d[MAX] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入一个不多于五位的整数(可以多几位但一定不要超过%d位)：\n&quot;</span>,MAX);</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>, c,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;它是%d位数\n&quot;</span>, jishu(c));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;分开输出：\n&quot;</span>);</span><br><span class="line">fenli(c,d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;逆序输出：%s&quot;</span>, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jishu</span><span class="params">(<span class="keyword">char</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (*(a + ++i) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fenli</span><span class="params">(<span class="keyword">char</span>* a,<span class="keyword">char</span>* b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, t = jishu(a);</span><br><span class="line"><span class="keyword">while</span> (*(a + i) != <span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d位:%c\n&quot;</span>, i + <span class="number">1</span>, *(a + i));</span><br><span class="line">*(b + --t) = *(a + i++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a>实验二</h3><h4 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h4><ul><li>题目：输入两个正整数，求其最大公约数和最小公倍数。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/4.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHUCHU(max,min) &#123;printf(<span class="meta-string">&quot;最大公约数是%d,最小公倍数是%d&quot;</span>,max,min);&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, a_1, b_1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入两个正整数，求其最大公约数和最小公倍数&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n请键入两个正整数（以空格分开）：\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">a_1 = a; b_1 = b;</span><br><span class="line"><span class="keyword">if</span> (a == b)&#123;</span><br><span class="line">SHUCHU(a,b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span> (a != b)&#123;</span><br><span class="line"><span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">a = a - b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b = b - a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">SHUCHU(a, a_1 * b_1 / a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h4><ul><li>题目：一个数如果恰好等于它的因子之和，这个数就称为完数，例如6=1+2+3，编程找出1000之内的所有完数，并按下面格式输出其因子。    6 its factors are 1,2,3</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/5.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输出%d内所有的完数：\n&quot;</span>, MAX);</span><br><span class="line"><span class="keyword">int</span> middle_a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> middle = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> middle_s[MAX] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= MAX; i++)&#123;</span><br><span class="line">middle = <span class="number">0</span>;</span><br><span class="line">middle_a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt; i; t++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i % t == <span class="number">0</span>)&#123;</span><br><span class="line">middle += t;</span><br><span class="line">middle_s[middle_a++] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">middle_s[middle_a] = MAX + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i == middle)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d its factors are &quot;</span>, i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; middle_s[a] != MAX + <span class="number">1</span>; a++)&#123;</span><br><span class="line"><span class="keyword">if</span> (middle_s[a + <span class="number">1</span>] == MAX + <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, middle_s[a]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>, middle_s[a]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h4><ul><li>题目：输入一行字符，分别统计出其中英文字母、空格、数字和其他字符的个数。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/6.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">data_analysis_typedef</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> small;</span><br><span class="line"><span class="keyword">int</span> big;</span><br><span class="line"><span class="keyword">int</span> blank;</span><br><span class="line"><span class="keyword">int</span> other;</span><br><span class="line">&#125;data_analysis_typedef;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data_analysis_typedef</span> <span class="title">data_analysis</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">num_main</span><span class="params">(<span class="keyword">char</span>* a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> data[MAX];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入一行不大于%d个数的字符串(无汉字)：\n&quot;</span>, MAX);</span><br><span class="line">gets(data);</span><br><span class="line">initialize();</span><br><span class="line">num_main(data);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;统计结果如下:\n数字有%d个\n小写字母有%d个\n大写字母有%d个\n空格有%d个\n其他字符有%d个\n字符总计%d个。\n&quot;</span>, data_analysis.num, data_analysis.small, data_analysis.big, data_analysis.blank, data_analysis.other, data_analysis.i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">data_analysis.big = <span class="number">0</span>;</span><br><span class="line">data_analysis.i = <span class="number">0</span>;</span><br><span class="line">data_analysis.num = <span class="number">0</span>;</span><br><span class="line">data_analysis.other = <span class="number">0</span>;</span><br><span class="line">data_analysis.small = <span class="number">0</span>;</span><br><span class="line">data_analysis.blank = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">num_main</span><span class="params">(<span class="keyword">char</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (; *(a + data_analysis.i) != <span class="string">&#x27;\0&#x27;</span>; data_analysis.i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">data_analysis.num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">data_analysis.small++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">data_analysis.big++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) == <span class="number">0x20</span>)</span><br><span class="line">&#123;</span><br><span class="line">data_analysis.blank++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">data_analysis.other++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h3><h4 id="第一题-2"><a href="#第一题-2" class="headerlink" title="第一题"></a>第一题</h4><ul><li>题目：从键盘输入10个整数，并求出这10个数的最大值及出现次数。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/7.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>, num = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入10个整数(以空格分开)，将输出这10个数的最大值及出现次数：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d个数：&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, data + i);</span><br><span class="line">&#125;</span><br><span class="line">max = data[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; data[i])</span><br><span class="line">&#123;</span><br><span class="line">max = data[i];</span><br><span class="line">num = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (max == data[i])</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大数为%d\n&quot;</span>, max);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大数出现次数为%d\n&quot;</span>, num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二题-2"><a href="#第二题-2" class="headerlink" title="第二题"></a>第二题</h4><ul><li>题目：编写个人所得税计算器。输入个税起征点和月收入，计算应交税款。（起征点为2000元）|不超过500元的部分税率5％|超过500元至2000元的部分税率10％|超过2000元至5000元的部分税率15％|超过5000元至20000元的部分税率20％|超过20000元至40000元的部分税率25％|超过40000元至60000元的部分税率30％|超过60000元至80000元的部分税率35％|超过80000元至100000元的部分税率40％|超过100000元的部分税率45％。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/8.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> data = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> shui = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;个人所得税计算器-ZZT\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;计算标准：\n起征点为2000元\n不超过500元的部分税率5％\n超过500元至2000元的部分税率10％\n超过2000元至5000元的部分税率15％\n超过5000元至20000元的部分税率20％\n超过20000元至40000元的部分税率25％\n超过40000元至60000元的部分税率30％\n超过60000元至80000元的部分税率35％\n超过80000元至100000元的部分税率40％\n超过100000元的部分税率45％。\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入所得钱数：\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;data);</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">2000</span>)&#123;</span><br><span class="line">shui = <span class="number">0.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">shui = <span class="number">500</span> * <span class="number">0.05</span> + <span class="number">1500</span> * <span class="number">0.10</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">5000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">2000</span>) * <span class="number">0.15</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">3000</span> * <span class="number">0.15</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">20000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">5000</span>) * <span class="number">0.20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">15000</span> * <span class="number">0.20</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">40000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">20000</span>) * <span class="number">0.25</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">20000</span> * <span class="number">0.25</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">60000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">40000</span>) * <span class="number">0.30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">20000</span> * <span class="number">0.30</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">80000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">60000</span>) * <span class="number">0.35</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">20000</span> * <span class="number">0.35</span>;</span><br><span class="line"><span class="keyword">if</span> (data &lt;= <span class="number">100000</span>)</span><br><span class="line">&#123;</span><br><span class="line">shui += (data - <span class="number">80000</span>) * <span class="number">0.40</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">shui += <span class="number">20000</span> * <span class="number">0.40</span>;</span><br><span class="line">shui += (data - <span class="number">100000</span>) * <span class="number">0.45</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;个人所得税为%lf元&quot;</span>, shui);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h3><h4 id="第一题-3"><a href="#第一题-3" class="headerlink" title="第一题"></a>第一题</h4><ul><li>题目：写一个函数，将一个字符串中的元音字母复制到另一字符串，然后输出。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/9.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[MAX] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> b[MAX] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> b_i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入一个字符串(只有英文字母，且不能超过%d位)：\n&quot;</span>,MAX);</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>,a,MAX);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == <span class="string">&#x27;a&#x27;</span> || a[i] == <span class="string">&#x27;A&#x27;</span> || a[i] == <span class="string">&#x27;e&#x27;</span> || a[i] == <span class="string">&#x27;E&#x27;</span> || a[i] == <span class="string">&#x27;i&#x27;</span> || a[i] == <span class="string">&#x27;I&#x27;</span> || a[i] == <span class="string">&#x27;o&#x27;</span> || a[i] == <span class="string">&#x27;O&#x27;</span> || a[i] == <span class="string">&#x27;u&#x27;</span> || a[i] == <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">b[b_i++] = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其中的元音字母有：%s\n&quot;</span>,b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二题-3"><a href="#第二题-3" class="headerlink" title="第二题"></a>第二题</h4><ul><li>题目：一只公鸡十五元，一只母鸡十三元，三只小鸡十元。用一千元买鸡，可以各买公鸡、母鸡、小鸡多省只？</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/10.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已知. 一只公鸡十五元，一只母鸡十三元，三只小鸡十元。用一千元买鸡。\n&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> gj_p = <span class="number">15</span>, mj_p = <span class="number">13</span>, xj_p = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= MAX / gj_p; a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= MAX / mj_p; b++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= MAX / xj_p; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a * gj_p + b * mj_p + c * xj_p == MAX)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;公鸡：%d个，母鸡：%d个，小鸡：%d个。\t&quot;</span>, a, b, c * <span class="number">3</span>);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;共计：%d种购买方式。&quot;</span>, num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三题-2"><a href="#第三题-2" class="headerlink" title="第三题"></a>第三题</h4><ul><li>题目：输入10个学生5门课的成绩，分别用函数实现下列功能：①计算每个学生平均分；②计算每门课的平均分；③找出50个分数中最高的分数所对应的学生和课程；④计算平均分方差：</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/11.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> e_student[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">double</span> e_s_a;</span><br><span class="line"><span class="keyword">double</span> e_s_a2;</span><br><span class="line"><span class="keyword">double</span> e_project[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> max[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">double</span> fangcha;</span><br><span class="line">&#125;data_retuen;</span><br><span class="line"></span><br><span class="line"><span class="function">struct data_retuen* <span class="title">num_main</span><span class="params">(<span class="keyword">double</span> p[<span class="number">10</span>][<span class="number">5</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> data[<span class="number">10</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入第%d个学生的五个成绩(以空格分开)：&quot;</span>, a + <span class="number">1</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%lf %lf %lf %lf %lf&quot;</span>, data[a], data[a] + <span class="number">1</span>, data[a] + <span class="number">2</span>, data[a] + <span class="number">3</span>, data[a] + <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据录入成功，正在计算中\n&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span>* <span class="title">middle</span> =</span> num_main(data);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d个学生的平均分：%.3lf\n&quot;</span>, a + <span class="number">1</span>, middle-&gt;e_student[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">4</span>; a++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d个课程的平均分：%.3lf\n&quot;</span>, a + <span class="number">1</span>, middle-&gt;e_project[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最高分位%.3lf，第%d个学生，第%d个课程。\n&quot;</span>, data[middle-&gt;max[<span class="number">0</span>]][middle-&gt;max[<span class="number">1</span>]], middle-&gt;max[<span class="number">0</span>] + <span class="number">1</span>, middle-&gt;max[<span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;平均分方差：%.3lf&quot;</span>, middle-&gt;fangcha);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">struct data_retuen* <span class="title">num_main</span><span class="params">(<span class="keyword">double</span> p[<span class="number">10</span>][<span class="number">5</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span>* <span class="title">middle</span>;</span></span><br><span class="line">middle = (struct data_retuen*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct data_retuen));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">middle-&gt;e_student[a] = (p[a][<span class="number">0</span>] + p[a][<span class="number">1</span>] + p[a][<span class="number">2</span>] + p[a][<span class="number">3</span>] + p[a][<span class="number">4</span>]) / <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">4</span>; b++)&#123;</span><br><span class="line">middle-&gt;e_project[b] = (p[<span class="number">0</span>][b] + p[<span class="number">1</span>][b] + p[<span class="number">2</span>][b] + p[<span class="number">3</span>][b] + p[<span class="number">4</span>][b] + p[<span class="number">5</span>][b] + p[<span class="number">6</span>][b] + p[<span class="number">7</span>][b] + p[<span class="number">8</span>][b] + p[<span class="number">9</span>][b]) / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">middle-&gt;max[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">middle-&gt;max[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">4</span>; b++)&#123;</span><br><span class="line"><span class="keyword">if</span> (p[middle-&gt;max[<span class="number">0</span>]][middle-&gt;max[<span class="number">1</span>]] &lt;= p[a][b])&#123;</span><br><span class="line">middle-&gt;max[<span class="number">0</span>] = a;</span><br><span class="line">middle-&gt;max[<span class="number">1</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">middle-&gt;e_s_a2 = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">middle-&gt;e_s_a2 += middle-&gt;e_student[a] * middle-&gt;e_student[a];</span><br><span class="line">&#125;</span><br><span class="line">middle-&gt;e_s_a = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">middle-&gt;e_s_a += middle-&gt;e_student[a];</span><br><span class="line">&#125;</span><br><span class="line">middle-&gt;fangcha = <span class="number">0.1</span>* middle-&gt;e_s_a2 - (middle-&gt;e_s_a * <span class="number">0.1</span>) * (middle-&gt;e_s_a * <span class="number">0.1</span>);</span><br><span class="line"><span class="keyword">return</span> middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验五"><a href="#实验五" class="headerlink" title="实验五"></a>实验五</h3><h4 id="第一题-4"><a href="#第一题-4" class="headerlink" title="第一题"></a>第一题</h4><ul><li>题目：输入3个整数，按由小到大的顺序输出。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/12.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> shuchu[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入三个整数(以空格分开)：\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, data, data + <span class="number">1</span>, data + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line">shuchu[<span class="number">0</span>] = data[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= <span class="number">2</span>; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">1</span>; a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (data[a] &lt; data[a + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">k = data[a];</span><br><span class="line">data[a] = data[a + <span class="number">1</span>];</span><br><span class="line">data[a + <span class="number">1</span>] = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">2</span>; a &gt;= <span class="number">0</span>; a--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, data[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二题-4"><a href="#第二题-4" class="headerlink" title="第二题"></a>第二题</h4><ul><li>题目：输入3个字符串，按由小到大的顺序输出。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/13.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">3</span>][<span class="number">1000</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> middle[<span class="number">1000</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">2</span>; a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个字符串：&quot;</span>, a + <span class="number">1</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>, c[a], <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= <span class="number">2</span>; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">1</span>; a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(c[a], c[a + <span class="number">1</span>]) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">strcpy_s(middle, <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), c[a]);</span><br><span class="line">strcpy_s(c[a], <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), c[a + <span class="number">1</span>]);</span><br><span class="line">strcpy_s(c[a + <span class="number">1</span>], <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), middle);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;由小到大输出：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">2</span>; a &gt;= <span class="number">0</span>; a--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, c[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三题-3"><a href="#第三题-3" class="headerlink" title="第三题"></a>第三题</h4><ul><li>题目：有n个人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/14.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> address;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">&#125;data_tp;</span><br><span class="line">data_tp data[MAX];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入人数n(最大为%d)：&quot;</span>, MAX);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n; a++)&#123;</span><br><span class="line">data[a].address = a + <span class="number">1</span>;</span><br><span class="line">data[a].i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n &amp;&amp; b &lt;= <span class="number">3</span> * (n - <span class="number">1</span>); a++)&#123;</span><br><span class="line"><span class="keyword">if</span> (data[a].i == <span class="number">0</span>)&#123;</span><br><span class="line">b--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (((b + <span class="number">1</span>) % <span class="number">3</span> == <span class="number">0</span>) &amp;&amp; (data[a].i == <span class="number">1</span>))&#123;</span><br><span class="line">data[a].i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a == n - <span class="number">1</span>)&#123;</span><br><span class="line">a = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n; a++)&#123;</span><br><span class="line"><span class="keyword">if</span> (data[a].i == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;剩下的人的位置为：%d\n&quot;</span>, data[a].address);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h4><ul><li>题目：有一字符串，包含n个字符。写一函数，将此字符串从中第m个字符开始的全部字符复制成为另一个字符串。</li><li>开发环境：Visual Studio 2019</li><li>运行结果：<img src="/file/pic/shiyanke/15.PNG" alt="大一C语言实验课代码"></li><li>程序代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">st_copy</span><span class="params">(<span class="keyword">char</span>* p, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* p = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个字符串(不能输入中文，最大字符数为：%d)：\n&quot;</span>, MAX);</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>, p, MAX);</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (*(p + n++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;字符串有%d个字符，请键入m的值：&quot;</span>, n - <span class="number">1</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, st_copy(p, n - <span class="number">1</span>, m - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">st_copy</span><span class="params">(<span class="keyword">char</span>* p, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m &gt;= n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> &amp;<span class="string">&quot;发生错误：m必须小于n.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span>* middle = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * (n - m + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= n - m; a++)</span><br><span class="line">&#123;</span><br><span class="line">*(middle + a) = *(p + m + a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="思考总结"><a href="#思考总结" class="headerlink" title="思考总结"></a>思考总结</h2><p>实验5.3中的结构体数组定义是我的漏洞之一，在此次实验中我通过查阅资料和实践操作掌握的结构体数组的定义。实验5.4让我更加扎实地掌握了指针型函数的定义与使用。在写代码的过程中不断地错误让我意识到调试地重要性，也学会了如何才能更快地找到自己代码地错误。</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%AE%9E%E9%AA%8C%E8%AF%BE/">实验课</category>
      
      <category domain="https://zztweb.top/tags/%E4%BB%A3%E7%A0%81/">代码</category>
      
      <category domain="https://zztweb.top/tags/%E5%A4%A7%E4%B8%80%E5%AE%9E%E9%AA%8C%E8%AF%BE/">大一实验课</category>
      
      
      <comments>https://zztweb.top/posts/a65ba048.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言学习-取整数的个位,十位,百位</title>
      <link>https://zztweb.top/posts/c934aed8.html</link>
      <guid>https://zztweb.top/posts/c934aed8.html</guid>
      <pubDate>Fri, 25 Oct 2019 15:09:07 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>此文主要介绍一种取整数的个十、百、位的方法</p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><p>看门见山，直接放出代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line">    <span class="keyword">int</span> ge, shi, bai;</span><br><span class="line">    ge = a % <span class="number">10</span>;</span><br><span class="line">    shi = a % <span class="number">100</span> / <span class="number">10</span>;</span><br><span class="line">    bai = a / <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数为：%d，个位是：%d，十位是：%d，百位是：%d。&quot;</span>, a, ge, shi, bai);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201828.PNG" alt="c_geshibai"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><ul><li>整数取10的余数则为个位</li><li>整数取100的余数在除以十，则个位被删掉</li><li>整数除以100，则十位和个位被删掉</li></ul>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%8F%96%E4%B8%AA%E4%BD%8D/">取个位</category>
      
      <category domain="https://zztweb.top/tags/%E5%8F%96%E5%8D%81%E4%BD%8D/">取十位</category>
      
      <category domain="https://zztweb.top/tags/%E5%8F%96%E7%99%BE%E4%BD%8D/">取百位</category>
      
      <category domain="https://zztweb.top/tags/%E6%96%B9%E6%B3%95/">方法</category>
      
      
      <comments>https://zztweb.top/posts/c934aed8.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言学习-运用后缀表达式实现的四则表达式计算器</title>
      <link>https://zztweb.top/posts/6a83b6d3.html</link>
      <guid>https://zztweb.top/posts/6a83b6d3.html</guid>
      <pubDate>Sun, 20 Oct 2019 07:29:39 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>作为一个C语言初学者，本人的水平极其有限，在此写下自己在编写四则表达式计算器时的感悟和所用到的方法与思想，希望日后回头看当初的自己时有所感受。</p><h2 id="程序目标"><a href="#程序目标" class="headerlink" title="程序目标"></a>程序目标</h2><ol><li>实现带括号的四则表达式的运算</li><li>支持小数</li><li>支持负数</li></ol><h2 id="程序思路"><a href="#程序思路" class="headerlink" title="程序思路"></a>程序思路</h2><ol><li>录入表达式到一个字符数组</li><li>对表达式进行分析</li><li>将表达式的数字与符号分开，分别放在两个数组中</li><li>创建一个包含指针以及所指向元素的类型的结构体数组，以原表达式的顺序指向数字和符号数组的元素</li><li>对结构体数组进行分析</li><li>处理结构体数组指向元素中的负数</li><li>将结构体数组指向的中缀表达式转换为后缀表达式，仍然用一个结构体数组储存其地址<code>(注：此操作只操作指针)</code></li><li>运算后缀表达式</li><li>输出结果</li><li>将全局变量初始化，循环回第一步</li></ol><h2 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h2><blockquote><p>注：有关符号的判断可以使用字符的整数值进行判断</p><p>注：有关后缀表达式的介绍请移步<a href="/posts/6a83b6d3.html">C语言学习-后缀表达式</a></p></blockquote><h3 id="创建全局变量和指针"><a href="#创建全局变量和指针" class="headerlink" title="创建全局变量和指针"></a>创建全局变量和指针</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**定义全局变量和指针以及结构体**/</span></span><br><span class="line"><span class="keyword">char</span> original_string[MAX];<span class="comment">//存放读取的字符串</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> number_array[MAX2]; <span class="comment">//存放分流出的数字</span></span><br><span class="line"><span class="keyword">char</span> char_array[MAX2];<span class="comment">//存放分流出的字符</span></span><br><span class="line"><span class="keyword">char</span> *middle[MAX];<span class="comment">//存放中缀表达式转后缀表达式的符号的指针</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;<span class="comment">//主要指示mix_d有多少个元素</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">original_t</span> = <span class="number">0</span>;<span class="comment">//只指示original_string有多少个元素</span></span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>, top_m = <span class="number">0</span>;<span class="comment">//指示后缀表达式数组的最后一位和middle数组的最后一位</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Data,</span><br><span class="line">Symbol</span><br><span class="line">&#125; data_type;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">void</span> *d;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">data_type</span> <span class="title">type</span>;</span></span><br><span class="line">&#125; mix;</span><br><span class="line">mix mix_d[MAX];  <span class="comment">//中缀表达式指针存放处</span></span><br><span class="line">mix suffix[MAX]; <span class="comment">//后缀表达式指针存放处</span></span><br><span class="line"><span class="comment">/**定义全局变量和指针以及结构体**/</span></span><br></pre></td></tr></table></figure><h3 id="创建清理数据函数"><a href="#创建清理数据函数" class="headerlink" title="创建清理数据函数"></a>创建清理数据函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, mix mix_exp[MAX])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (left + i &lt;= <span class="keyword">orginal_mix_t</span>)</span><br><span class="line">&#123;</span><br><span class="line">mix_exp[left + i] = mix_exp[right + i++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">orginal_mix_t</span> = <span class="keyword">orginal_mix_t</span> - (right - left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="录入表达式到字符数组"><a href="#录入表达式到字符数组" class="headerlink" title="录入表达式到字符数组"></a>录入表达式到字符数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;四则表达式计算器\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入一个算式（支持四则混合运算和带括号运算）：\n&quot;</span>);</span><br><span class="line">gets(original_string);</span><br></pre></td></tr></table></figure><h3 id="判定表达式中是否有非法字符"><a href="#判定表达式中是否有非法字符" class="headerlink" title="判定表达式中是否有非法字符"></a>判定表达式中是否有非法字符</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = MAX1; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (original_string[MAX1 - i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!((original_string[MAX1 - i] == <span class="string">&#x27;.&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;1&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;2&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;3&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;4&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;5&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;6&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;7&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;8&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;9&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;0&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;/&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;*&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;-&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;+&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;(&#x27;</span>) || (original_string[MAX1 - i] == <span class="string">&#x27;)&#x27;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">orginal_mix_t</span> = MAX1 - i;</span><br><span class="line">i = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">original_t</span> = <span class="keyword">orginal_mix_t</span>;</span><br><span class="line"><span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n读取式子成功，正在计算中...\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;式子键入错误，错误%d处。\n&quot;</span>, k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断有多少个字符和数字"><a href="#判断有多少个字符和数字" class="headerlink" title="判断有多少个字符和数字"></a>判断有多少个字符和数字</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dispose_long</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">t_t</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; original_string[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!((original_string[i] == <span class="string">&#x27;.&#x27;</span>) || (original_string[i] == <span class="string">&#x27;1&#x27;</span>) || (original_string[i] == <span class="string">&#x27;2&#x27;</span>) || (original_string[i] == <span class="string">&#x27;3&#x27;</span>) || (original_string[i] == <span class="string">&#x27;4&#x27;</span>) || (original_string[i] == <span class="string">&#x27;5&#x27;</span>) || (original_string[i] == <span class="string">&#x27;6&#x27;</span>) || (original_string[i] == <span class="string">&#x27;7&#x27;</span>) || (original_string[i] == <span class="string">&#x27;8&#x27;</span>) || (original_string[i] == <span class="string">&#x27;9&#x27;</span>) || (original_string[i] == <span class="string">&#x27;0&#x27;</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">t_t</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">orginal_mix_t</span>++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">t_t</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">orginal_mix_t</span>++;</span><br><span class="line"><span class="keyword">t_t</span> = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将字符串转化为数字和符号"><a href="#将字符串转化为数字和符号" class="headerlink" title="将字符串转化为数字和符号"></a>将字符串转化为数字和符号</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transform</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a4 = <span class="number">1</span>, a5 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> zhong[<span class="number">50</span>][<span class="number">20</span>]; <span class="comment">//存放分流过程中的中转数字字符串</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">original_t</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((*(original_string + i) == <span class="string">&#x27;0&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;1&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;2&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;3&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;4&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;5&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;6&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;7&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;8&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;9&#x27;</span>) || (*(original_string + i) == <span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">zhong[a1][a2++] = *(original_string + i);</span><br><span class="line">a4 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a4 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">number_array[a1] = atof(zhong[a1]);</span><br><span class="line">a2 = <span class="number">0</span>;</span><br><span class="line">mix_d[a5].d = &amp;number_array[a1++];</span><br><span class="line">mix_d[a5++].type = Data;</span><br><span class="line">a4 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">char_array[a3] = *(original_string + i);</span><br><span class="line">mix_d[a5].d = &amp;char_array[a3++];</span><br><span class="line">mix_d[a5++].type = Symbol;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="处理负数"><a href="#处理负数" class="headerlink" title="处理负数"></a>处理负数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">negative</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span> - <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (((*(<span class="keyword">char</span> *)mix_d[i].d) == <span class="string">&#x27;(&#x27;</span>) &amp;&amp; ((*(<span class="keyword">char</span> *)mix_d[i + <span class="number">3</span>].d) == <span class="string">&#x27;)&#x27;</span>) &amp;&amp; (mix_d[i].type == Symbol) &amp;&amp; (mix_d[i + <span class="number">3</span>].type == Symbol))</span><br><span class="line">&#123;</span><br><span class="line">*(<span class="keyword">long</span> <span class="keyword">double</span> *)mix_d[i + <span class="number">2</span>].d = (*(<span class="keyword">long</span> <span class="keyword">double</span> *)mix_d[i + <span class="number">2</span>].d) * (<span class="number">-1</span>);</span><br><span class="line">clean(i - <span class="number">1</span>, i + <span class="number">1</span>, mix_d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_suffix</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (mix_d[i].type == Data)</span><br><span class="line">&#123;</span><br><span class="line">suffix[top++] = mix_d[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mix_d[i].type == Symbol)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (middle[<span class="number">0</span>] == <span class="number">0x00000000</span>)</span><br><span class="line">&#123;</span><br><span class="line">middle[top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; (*(<span class="keyword">char</span> *)middle[top_m] != <span class="string">&#x27;(&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">suffix[top].d = middle[top_m];</span><br><span class="line">suffix[top++].type = Symbol;</span><br><span class="line">top_m--;</span><br><span class="line">&#125;</span><br><span class="line">top_m--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;*&#x27;</span>) || (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; (((top_m &gt;= <span class="number">0</span>) &amp;&amp; *(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;/&#x27;</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;*&#x27;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">suffix[top].d = middle[top_m--];</span><br><span class="line">suffix[top++].type = Symbol;</span><br><span class="line">&#125;</span><br><span class="line">middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;+&#x27;</span>) || (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; ((*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;/&#x27;</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;*&#x27;</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;+&#x27;</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">suffix[top].d = middle[top_m--];</span><br><span class="line">suffix[top++].type = Symbol;</span><br><span class="line">&#125;</span><br><span class="line">middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (top_m &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">suffix[top].d = middle[top_m--];</span><br><span class="line">suffix[top++].type = Symbol;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主计算函数"><a href="#主计算函数" class="headerlink" title="主计算函数"></a>主计算函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">main_num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((suffix[i].type == Symbol) &amp;&amp; i &gt;= <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d = num(i);</span><br><span class="line">clean(i - <span class="number">2</span>, i, suffix);</span><br><span class="line">i = i - <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (*(<span class="keyword">char</span> *)suffix[i].d)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) * (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) - (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) + (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) / (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n结果是：%lf\n&quot;</span>, *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d);</span><br></pre></td></tr></table></figure><h3 id="初始化数据并循环"><a href="#初始化数据并循环" class="headerlink" title="初始化数据并循环"></a>初始化数据并循环</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean_all</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(original_string, <span class="number">0x00</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX);</span><br><span class="line"><span class="built_in">memset</span>(char_array, <span class="number">0x00</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX2);</span><br><span class="line"><span class="built_in">memset</span>(number_array, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">double</span>) * MAX2);</span><br><span class="line"><span class="built_in">memset</span>(middle, <span class="number">0x00000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span> *) * MAX2);</span><br><span class="line"><span class="built_in">memset</span>(mix_d-&gt;d, <span class="number">0x000000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">void</span> *) * MAX2);</span><br><span class="line"><span class="built_in">memset</span>(suffix-&gt;d, <span class="number">0x000000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">void</span> *) * MAX2);</span><br><span class="line"><span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">original_t</span> = <span class="number">0</span>;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">top_m = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主main函数"><a href="#主main函数" class="headerlink" title="主main函数"></a>主<code>main</code>函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;四则表达式计算器\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请键入一个算式（支持四则混合运算和带括号运算）：\n&quot;</span>);</span><br><span class="line">gets(original_string);</span><br><span class="line"><span class="keyword">if</span> (judge())</span><br><span class="line">&#123;</span><br><span class="line">clean_all();</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">dispose_long();</span><br><span class="line">transform();</span><br><span class="line">negative();</span><br><span class="line">to_suffix();</span><br><span class="line">main_num();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n结果是：%lf\n&quot;</span>, *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d);</span><br><span class="line">clean_all();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="程序效果"><a href="#程序效果" class="headerlink" title="程序效果"></a>程序效果</h2><p>程序的结果：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413123946.PNG"></p><hr><p>网页<a href="https://zh.numberempire.com/expressioncalculator.php"><code>表达式计算器</code></a>的结果：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200413124008.PNG"></p><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p><a href="https://gitee.com/zzttzz/blogpic/raw/master/pic/c_four_arithmetic-ZZT.7z">四则表达式运算源码和程序下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">名称: c_four_arithmetic-ZZT.7z</span><br><span class="line">大小: 13615 字节 (13 KiB)</span><br><span class="line"></span><br><span class="line">CRC32: 66526331</span><br><span class="line">CRC64: 97A40258714385B9</span><br><span class="line">SHA256: C43CEFB0BC74B4FEECD8CAF48D9FA0476E5DB44CD72816CEF11C2801F856D35F</span><br><span class="line">SHA1: B461438F0CC371F57616E6D8FED4B6B87D62E3A9</span><br><span class="line">BLAKE2sp: 745A98E9AF301AA0FAF041D61765002CC0D30F98736015EC9EE45BBF3F6ADBD6</span><br><span class="line"></span><br><span class="line">解压密码: ZZTTZZ</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>毕竟是初学C语言，对C的掌握和熟悉还是不够。看了看网上大佬的代码，觉得我进步的空间还很大。</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%9B%E5%88%99%E8%AE%A1%E7%AE%97%E5%99%A8/">四则计算器</category>
      
      <category domain="https://zztweb.top/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%90%E7%AE%97/">表达式运算</category>
      
      
      <comments>https://zztweb.top/posts/6a83b6d3.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>C语言学习-后缀表达式</title>
      <link>https://zztweb.top/posts/64376614.html</link>
      <guid>https://zztweb.top/posts/64376614.html</guid>
      <pubDate>Sun, 20 Oct 2019 06:48:32 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>后缀表达式又称为逆波兰式或逆波兰记法，是一种把运算符写在操作符之后的表达式。</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>后缀表达式在计算机看来却是比较简单易懂的结构。因为计算机普遍采用的内存结构是栈式结构，它执行先进后出的顺序。</p><h2 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h2><h3 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h3><p>首先需要分配<code>2个栈</code>，一个作为临时存储运算符的<code>栈S1</code>（含一个结束符号），一个作为输入后缀表达式的栈<code>S2</code>（空栈），<code>S1栈</code>可先放入优先级最低的运算符#，注意，<code>中缀式应以此最低优先级的运算符结束</code>。可指定其他字符，不一定非#不可。从中缀式的左端开始取字符，逐序进行如下步骤：</p><ol><li>若取出的字符是操作数，则分析出完整的运算数，该操作数直接送入<code>S2栈</code></li><li>若取出的字符是运算符，则将该运算符与S1栈栈顶元素比较，如果该运算符优先级(不包括括号运算符)大于<code>S1栈</code>栈顶运算符优先级，则将该运算符进<code>S1栈</code>，否则，将<code>S1栈</code>的栈顶运算符弹出，送入<code>S2栈</code>中，直至<code>S1栈</code>栈顶运算符低于（不包括等于）该运算符优先级，最后将该运算符送入<code>S1栈</code>。</li><li>若取出的字符是“（”，则直接送入<code>S1栈</code>顶。</li><li>若取出的字符是“）”，则将距离<code>S1栈</code>栈顶最近的“（”之间的运算符，逐个出栈，依次送入<code>S2栈</code>，此时抛弃“（”。</li><li>重复上面的1~4步，直至处理完所有的输入字符</li><li>若取出的字符是“<code>#</code>”，则将S1栈内所有运算符（不包括“<code>#</code>”），逐个出栈，依次送入<code>S2栈</code>。</li></ol><p>完成以上步骤，<code>S2栈</code>便为后缀表达式输出结果。不过<code>S2</code>应做一下逆序处理。便可以按照后缀表达式的计算方法计算了！</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>(a+b)*c-(a+b)/e的后缀表达式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(a+b)*c-(a+b)/e</span><br><span class="line">→((a+b)*c)((a+b)/e)-</span><br><span class="line">→((a+b)c*)((a+b)e/)-</span><br><span class="line">→(ab+c*)(ab+e/)-</span><br><span class="line">→ab+c*ab+e/-</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>感谢百度百科。</p><p>引用的<a href="https://baike.baidu.com/item/%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/128437?fromtitle=%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F&fromid=6160580&fr=aladdin">百度百科(逆波兰式)</a></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      
      <category domain="https://zztweb.top/tags/C/">C</category>
      
      <category domain="https://zztweb.top/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/">C语言学习</category>
      
      <category domain="https://zztweb.top/tags/%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F/">后缀表达式</category>
      
      <category domain="https://zztweb.top/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F/">表达式</category>
      
      
      <comments>https://zztweb.top/posts/64376614.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>YouTube下载1080教程</title>
      <link>https://zztweb.top/posts/2afe2096.html</link>
      <guid>https://zztweb.top/posts/2afe2096.html</guid>
      <pubDate>Wed, 10 Jul 2019 10:50:46 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><ul><li>本教程原理：是利用在线视频转换网站来解析YouTube视频地址,从而实现下载1080p视频的目的.</li></ul><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><p>翻墙打开网址：<a href="https://www.converto.io/">https://www.converto.io/</a></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202937.PNG" alt="YouTube下载1080教程"></p><p>将YouTube的视频网址填入上边的文本框中</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202941.PNG" alt="YouTube下载1080教程"></p><p>先点击右上角的<code>齿轮</code>图标,打开设置</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202946.PNG" alt="YouTube下载1080教程"></p><p>选择你想要的格式,鉴于本文目的,选择1080p.</p><p>然后点击<code>save</code>按钮保存,最后点击<code>Convert</code>按钮开始下载</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202950.PNG" alt="YouTube下载1080教程"></p><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><p>翻墙打开网址：<a href="https://y2mate.com/">https://y2mate.com/</a></p><p>填入YouTube链接,点击<code>Start</code>按钮,选择你想要的格式下载</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202959.PNG" alt="YouTube下载1080教程"></p><blockquote><p>本文转载自：<a href="https://github.com/Alvin9999/new-pac/wiki/YouTube%E4%B8%8B%E8%BD%BD1080%E6%95%99%E7%A8%8B">https://github.com/Alvin9999/new-pac/wiki/YouTube下载1080教程</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E6%96%B9%E6%B3%95%E7%A7%AF%E7%B4%AF/">方法积累</category>
      
      
      <category domain="https://zztweb.top/tags/YouTube/">YouTube</category>
      
      <category domain="https://zztweb.top/tags/%E4%B8%8B%E8%BD%BD1080/">下载1080</category>
      
      <category domain="https://zztweb.top/tags/YouTube%E4%B8%8B%E8%BD%BD1080/">YouTube下载1080</category>
      
      <category domain="https://zztweb.top/tags/%E6%95%99%E7%A8%8B/">教程</category>
      
      
      <comments>https://zztweb.top/posts/2afe2096.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Cencrack在线工具包</title>
      <link>https://zztweb.top/posts/9bb596ae.html</link>
      <guid>https://zztweb.top/posts/9bb596ae.html</guid>
      <pubDate>Wed, 19 Jun 2019 01:52:13 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201852.gif" alt="演示"></p><p>2.5M大小,多达五百多个常用(非常用)工具.</p><p>最新版各种优化,未下载的软件变成了黑白图标,不论是下载速度,还是大文件的超速下载,都堪称一绝,欢迎下载体验!</p><p>出现未联网、(获取版本信息失败)等网络问题,请把防火墙关掉,或者信任程序联网！</p><p>看看你的网络环境是否能访问 <a href="http://a.cencrack.com:88/tools/">http://a.cencrack.com:88/tools/</a>,如果不能访问则无法下载里面大部分工具.</p><hr><p>注意：若出现以下错误：</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201847.jpg" alt="错误"></p><ol><li>打开：控制版面</li><li>找到：程序和功能</li><li>打开“打开或关闭Windows功能”</li><li>找到并点开“旧版组件”选项</li><li>勾选“DirectPlay”后确定</li></ol><blockquote><p>如果win10启动或关闭Windows功能 内 无启用旧版功能.可以看下Legacy Components,这个里面有DirectPlay,把他勾选了就可以！</p><p>总之就是要找到 DirectPlay 这个功能把它开启!.</p><p>win8 或者 win10系统 才会可能出现此错误,请按照以上方法解决,如果无效请百度一下另外方法.</p></blockquote><hr><ul><li><p><a href="http://a.cencrack.com:88/tools/tool/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97.txt">点击查看–&gt;&gt;&gt;更新日志</a></p></li><li><p><a href="http://a.cencrack.com:88/tools/tool/">点击查看–&gt;&gt;&gt;文件列表</a></p></li></ul><hr><p>本文转载自<a href="http://cencrack.com/">cencrack 的个人博客</a></p><p>此文链接<a href="http://cencrack.com/?post=18">Cencrack在线工具包</a></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/Cencrack/">Cencrack</category>
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%8C%85/">工具包</category>
      
      <category domain="https://zztweb.top/tags/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7%E5%8C%85/">在线工具包</category>
      
      
      <comments>https://zztweb.top/posts/9bb596ae.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>centos下无损将home分区的一部分调整到根目录</title>
      <link>https://zztweb.top/posts/697532ae.html</link>
      <guid>https://zztweb.top/posts/697532ae.html</guid>
      <pubDate>Sat, 15 Jun 2019 05:20:33 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="检查自己的系统信息"><a href="#检查自己的系统信息" class="headerlink" title="检查自己的系统信息"></a>检查自己的系统信息</h2><p>键入命令<code>cat /etc/os-release</code></p><p>我的机器输出如下,系统为<code>CentOS Linux 7 (Core)</code>版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/os-release</span></span><br><span class="line">NAME=<span class="string">&quot;CentOS Linux&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;7 (Core)&quot;</span></span><br><span class="line">ID=<span class="string">&quot;centos&quot;</span></span><br><span class="line">ID_LIKE=<span class="string">&quot;rhel fedora&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;7&quot;</span></span><br><span class="line">PRETTY_NAME=<span class="string">&quot;CentOS Linux 7 (Core)&quot;</span></span><br><span class="line">ANSI_COLOR=<span class="string">&quot;0;31&quot;</span></span><br><span class="line">CPE_NAME=<span class="string">&quot;cpe:/o:centos:centos:7&quot;</span></span><br><span class="line">HOME_URL=<span class="string">&quot;https://www.centos.org/&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.centos.org/&quot;</span></span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT=<span class="string">&quot;CentOS-7&quot;</span></span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION=<span class="string">&quot;7&quot;</span></span><br><span class="line">REDHAT_SUPPORT_PRODUCT=<span class="string">&quot;centos&quot;</span></span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=<span class="string">&quot;7&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="检查文件系统"><a href="#检查文件系统" class="headerlink" title="检查文件系统"></a>检查文件系统</h2><p>键入命令<code>blkid</code></p><p>我的机器输出如下,要操作的分区的文件系统为<code>XFS</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;ce72430c-9e09-4690-8978-9213c9629eff&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">&quot;CYwKKV-nnCq-HgHq-2NeY-dduO-5CCU-OSVLBj&quot;</span> TYPE=<span class="string">&quot;LVM2_member&quot;</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">&quot;ffd8209f-8c66-44f8-8d59-0a20a64f73fc&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">&quot;41361166-a5fb-4162-b748-c41176fcf470&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">&quot;65be852f-defe-433c-8acc-8c696f29d645&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="检查分区详细情况"><a href="#检查分区详细情况" class="headerlink" title="检查分区详细情况"></a>检查分区详细情况</h2><h3 id="查看分区的情况"><a href="#查看分区的情况" class="headerlink" title="查看分区的情况"></a>查看分区的情况</h3><p>键入命令<code>df -h</code></p><p>输出示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root   50G   15G   36G  30% /</span><br><span class="line">devtmpfs                 1.8G     0  1.8G   0% /dev</span><br><span class="line">tmpfs                    1.8G  4.0K  1.8G   1% /dev/shm</span><br><span class="line">tmpfs                    1.8G  8.9M  1.8G   1% /run</span><br><span class="line">tmpfs                    1.8G     0  1.8G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-home  244G  3.8G  240G   2% /home</span><br><span class="line">/dev/sda1               1014M  199M  816M  20% /boot</span><br><span class="line">tmpfs                    366M     0  366M   0% /run/user/0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看各分区的信息"><a href="#查看各分区的信息" class="headerlink" title="查看各分区的信息"></a>查看各分区的信息</h3><p>键入命令<code>lvdisplay</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/swap</span><br><span class="line">  LV Name                swap</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                dXi6Yj-oQXb-coEQ-8oSK-2AHd-chQy-ZvBh4f</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:39 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 2</span></span><br><span class="line">  LV Size                3.75 GiB</span><br><span class="line">  Current LE             960</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:1</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/home</span><br><span class="line">  LV Name                home</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                qYLnrr-DExG-yMnm-6l6G-rgKF-Hvla-MnfSpF</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:39 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                243.33 GiB</span><br><span class="line">  Current LE             62293</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:2</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root</span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                S8Gleq-e8t6-XIe1-wlRD-psfD-KUJw-bgWfdL</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:42 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                50.00 GiB</span><br><span class="line">  Current LE             12800</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="开始分区"><a href="#开始分区" class="headerlink" title="开始分区"></a>开始分区</h2><h3 id="减少home分区的空间"><a href="#减少home分区的空间" class="headerlink" title="减少home分区的空间"></a>减少<code>home</code>分区的空间</h3><p>键入命令使<code>home</code>分区空间为50GB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvreduce -L 50G /dev/mapper/centos-home</span></span><br><span class="line">  WARNING: Reducing active and open logical volume to 50.00 GiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce centos/home? [y/n]: y</span><br><span class="line">  Size of logical volume centos/home changed from 243.33 GiB (62293 extents) to 50.00 GiB (12800 extents).</span><br><span class="line">  Logical volume centos/home successfully resized.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="增加root分区的空间"><a href="#增加root分区的空间" class="headerlink" title="增加root分区的空间"></a>增加<code>root</code>分区的空间</h3><p>键入命令使当前所有的空闲分区全部加载到<code>root</code>分区中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvextend -l +100%FREE /dev/mapper/centos-root</span></span><br><span class="line">  Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to &lt;243.34 GiB (62294 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="扩展XFS文件空间大小"><a href="#扩展XFS文件空间大小" class="headerlink" title="扩展XFS文件空间大小"></a>扩展XFS文件空间大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># xfs_growfs /dev/centos/root</span></span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 63789056</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="格式化home分区"><a href="#格式化home分区" class="headerlink" title="格式化home分区"></a>格式化<code>home</code>分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/mapper/centos-home</span></span><br><span class="line">[root@localhost ~]<span class="comment"># umount /home</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount /home</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>本文参考自：<a href="http://www.cuwww.com/help/detail-78.html">中国U网-CentOS Linux如何无损调整分区大小(XFS文件系统)</a></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/linux/">linux</category>
      
      <category domain="https://zztweb.top/tags/home%E5%88%86%E5%8C%BA/">home分区</category>
      
      <category domain="https://zztweb.top/tags/%E5%AE%B9%E9%87%8F%E8%B0%83%E6%95%B4/">容量调整</category>
      
      <category domain="https://zztweb.top/tags/centos/">centos</category>
      
      
      <comments>https://zztweb.top/posts/697532ae.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>本博客使用的随机图片接口</title>
      <link>https://zztweb.top/posts/937e33b3.html</link>
      <guid>https://zztweb.top/posts/937e33b3.html</guid>
      <pubDate>Thu, 13 Jun 2019 02:38:00 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>废话不多说,直接放链接</p><ul><li><a href="https://img.xjh.me/random_img.php?type=bg&amp;ctype=nature&amp;return=302">https://img.xjh.me/random_img.php?type=bg&amp;ctype=nature&amp;return=302</a> (早期使用,现已不用)</li><li><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a> (已经废弃)</li><li><a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3/">建站相关</category>
      
      
      <category domain="https://zztweb.top/tags/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87/">随机图片</category>
      
      <category domain="https://zztweb.top/tags/%E6%8E%A5%E5%8F%A3/">接口</category>
      
      <category domain="https://zztweb.top/tags/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87%E6%8E%A5%E5%8F%A3/">随机图片接口</category>
      
      
      <comments>https://zztweb.top/posts/937e33b3.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux下SSR服务器端搭建</title>
      <link>https://zztweb.top/posts/38ecf877.html</link>
      <guid>https://zztweb.top/posts/38ecf877.html</guid>
      <pubDate>Sun, 26 May 2019 11:28:07 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h2><p>如题,本文终点讲解如何在linux系统下搭建一个你自己的SSR服务器端</p><h2 id="搭建SSR硬件要求"><a href="#搭建SSR硬件要求" class="headerlink" title="搭建SSR硬件要求"></a>搭建SSR硬件要求</h2><p>你需要一台国外的,ip没有被墙的VPS,如果你的SSH能连上就代表VPS没有被完全地墙了.</p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="用你的SSH工具链接VPS-键入如下一键安装代码："><a href="#用你的SSH工具链接VPS-键入如下一键安装代码：" class="headerlink" title="用你的SSH工具链接VPS,键入如下一键安装代码："></a>用你的SSH工具链接VPS,键入如下一键安装代码：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是安装wget的命令</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"># 这是安装SSR脚本的命令</span><br><span class="line">wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下为备用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是安装wget的命令</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"># 这是安装SSR脚本的命令</span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装SSR"><a href="#安装SSR" class="headerlink" title="安装SSR"></a>安装SSR</h3><p>完成上步后你会看到如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">  ShadowsocksR 一键管理脚本 [v2.0.38]</span><br><span class="line">  ---- Toyo | doub.io/ss-jc42 ----</span><br><span class="line"></span><br><span class="line">  1. 安装 ShadowsocksR</span><br><span class="line">  2. 更新 ShadowsocksR</span><br><span class="line">  3. 卸载 ShadowsocksR</span><br><span class="line">  4. 安装 libsodium(chacha20)</span><br><span class="line">————————————</span><br><span class="line">  5. 查看 账号信息</span><br><span class="line">  6. 显示 连接信息</span><br><span class="line">  7. 设置 用户配置</span><br><span class="line">  8. 手动 修改配置</span><br><span class="line">  9. 切换 端口模式</span><br><span class="line">————————————</span><br><span class="line"> 10. 启动 ShadowsocksR</span><br><span class="line"> 11. 停止 ShadowsocksR</span><br><span class="line"> 12. 重启 ShadowsocksR</span><br><span class="line"> 13. 查看 ShadowsocksR 日志</span><br><span class="line">————————————</span><br><span class="line"> 14. 其他功能</span><br><span class="line"> 15. 升级脚本</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入<code>1</code>,按下回车,之后跟着默认走就可以了.</p><blockquote><p>此脚本部署后SSR为开机自启,就不必去设置开机自启了.</p></blockquote><h2 id="配置BBR加速"><a href="#配置BBR加速" class="headerlink" title="配置BBR加速"></a>配置BBR加速</h2><blockquote><p><strong>注：此BBR一键脚本我只在Centos系统安装成功了,其他系统我未曾尝试</strong></p></blockquote><p>谷歌BBR加速,加速后对速度的提升很明显,所以推荐部署加速脚本.该加速方法也是开机自动启动,部署一次就可以了.</p><p>在SSH客户端加入如下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line"></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"></span><br><span class="line">./bbr.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后跟着提示走,最后会确认重启机器,跟着脚本走就行了.</p><p>至此,SSR服务器端搭建完毕,祝你用的愉快.</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/SSR/">SSR</category>
      
      <category domain="https://zztweb.top/tags/SSR%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/">SSR服务器搭建</category>
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      
      <comments>https://zztweb.top/posts/38ecf877.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo-next配置点击爆炸效果</title>
      <link>https://zztweb.top/posts/6864067c.html</link>
      <guid>https://zztweb.top/posts/6864067c.html</guid>
      <pubDate>Thu, 16 May 2019 15:38:05 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><h2 id="next主题文件的配置"><a href="#next主题文件的配置" class="headerlink" title="next主题文件的配置"></a><strong>next主题文件的配置</strong></h2><p>打开next主题文件,定位到以下代码区：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将<code>fireworks</code>改为<code>true</code>,如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><del>效果可见本博客的点击效果</del></p><h2 id="配置时遇到的坑"><a href="#配置时遇到的坑" class="headerlink" title="配置时遇到的坑"></a><strong>配置时遇到的坑</strong></h2><p>有些版本的next对这个特效的默认引用地址在<code>./js/忘了/fireworks.js</code>,但是呢,这个特效文件他在这个位置：<code>./js/fireworks.js</code></p><p>对于这个问题可以再文件<code>_layout.swig</code>中修复</p><p>并且因为本博客的存放位置原因，所以只能写死链接：<code>https://zzttzz.gitee.io/blog/js/fireworks.js</code></p><blockquote><p><code>_layout.swig</code>文件在next主题文件夹下的<code>layout</code>文件夹下</p></blockquote><p>定位到如下代码区：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas <span class="class"><span class="keyword">class</span>=</span><span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; </span><br><span class="line">   &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">   &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/忘了/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas <span class="class"><span class="keyword">class</span>=</span><span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; </span><br><span class="line">   &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">   &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//zzttzz.gitee.io/blog/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>便可</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/next/">next</category>
      
      <category domain="https://zztweb.top/tags/%E7%82%B9%E5%87%BB%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/">点击爆炸效果</category>
      
      <category domain="https://zztweb.top/tags/%E7%82%B9%E5%87%BB%E7%88%86%E7%82%B8/">点击爆炸</category>
      
      <category domain="https://zztweb.top/tags/%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/">爆炸效果</category>
      
      
      <comments>https://zztweb.top/posts/6864067c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo-next上传到自己的服务器后font-awesome图标无法显示的解决办法</title>
      <link>https://zztweb.top/posts/193d509e.html</link>
      <guid>https://zztweb.top/posts/193d509e.html</guid>
      <pubDate>Sat, 11 May 2019 14:23:18 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p>踩过的坑o(╥﹏╥)o,方法亲测有效.</p></blockquote><h1 id="法一-推荐"><a href="#法一-推荐" class="headerlink" title="法一(推荐)"></a><strong>法一(推荐)</strong></h1><h2 id="下载最新的Font-Awesome文件"><a href="#下载最新的Font-Awesome文件" class="headerlink" title="下载最新的Font Awesome文件"></a>下载最新的Font Awesome文件</h2><p><a href="http://www.fontawesome.com.cn/">Font Awesome中文网</a></p><p>将下载下来的文件解压,拷贝到<code>\themes\hexo-theme-next-master\source\lib\font-awesome</code>目录中.切记,完全拷贝,不差这点空间和流量.</p><h2 id="修改next配置文件"><a href="#修改next配置文件" class="headerlink" title="修改next配置文件"></a>修改next配置文件</h2><p>打开<code>\themes\hexo-theme-next-master\_config.yml</code>文件(next主题的配置文件),找到如下区域：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line">  <span class="attr">fontawesome:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>默认是空值,这里我们需要填入刚才下载的文件路径</p><blockquote><p>注：这里的路径是经过hexo生成后网站的相对路径</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">/lib/font-awesome/css/font-awesome.min.css</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="法二"><a href="#法二" class="headerlink" title="法二"></a><strong>法二</strong></h1><p>打开<code>\themes\hexo-theme-next-master\_config.yml</code>文件(next主题的配置文件),找到如下区域：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line">  <span class="attr">fontawesome:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按照注释里的默认值填入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：这样虽然能解决问题,但国内可能会大幅度拖慢网站加载速度.</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/next/">next</category>
      
      <category domain="https://zztweb.top/tags/font-awesome/">font-awesome</category>
      
      <category domain="https://zztweb.top/tags/%E5%9B%BE%E6%A0%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/">图标无法显示</category>
      
      <category domain="https://zztweb.top/tags/%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/">解决办法</category>
      
      <category domain="https://zztweb.top/tags/font-awesome%E5%9B%BE%E6%A0%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/">font-awesome图标无法显示</category>
      
      
      <comments>https://zztweb.top/posts/193d509e.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo-next添加右上角GitHub挂件</title>
      <link>https://zztweb.top/posts/96ddfe32.html</link>
      <guid>https://zztweb.top/posts/96ddfe32.html</guid>
      <pubDate>Thu, 09 May 2019 15:59:24 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>在<code>next</code>主题配置文件<code>_config.yml</code>中找到如下设置<br>并且把<code>enable</code>项改为<code>true</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/zzt112358</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：需要把<code>permalink</code>项改为你自己的github链接哦,效果可参考本站</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/next/">next</category>
      
      <category domain="https://zztweb.top/tags/github%E6%8C%82%E4%BB%B6/">github挂件</category>
      
      
      <comments>https://zztweb.top/posts/96ddfe32.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo-next在文章和侧栏下方添加版权信息</title>
      <link>https://zztweb.top/posts/b34fddce.html</link>
      <guid>https://zztweb.top/posts/b34fddce.html</guid>
      <pubDate>Thu, 09 May 2019 15:50:09 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>在<code>next</code>主题配置文件<code>_config.yml</code>中找到如下设置<br>并且把<code>enable</code>项改为<code>true</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：<code>sidebar</code>指的是侧栏下方,<code>post</code>指的是文章底部,效果可参考本站</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/next/">next</category>
      
      <category domain="https://zztweb.top/tags/%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/">添加版权信息</category>
      
      <category domain="https://zztweb.top/tags/%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/">版权信息</category>
      
      
      <comments>https://zztweb.top/posts/b34fddce.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>分享一个windows下的一个个性化工具集-uTools</title>
      <link>https://zztweb.top/posts/1798eddd.html</link>
      <guid>https://zztweb.top/posts/1798eddd.html</guid>
      <pubDate>Wed, 01 May 2019 07:15:27 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p>首先,我大力推荐这款软件,非常好用,方便.</p></blockquote><p><a href="https://u.tools/">官网-</a><a href="https://u.tools/">https://u.tools</a></p><h3 id="官方简介："><a href="#官方简介：" class="headerlink" title="官方简介："></a>官方简介：</h3><p>uTools是一个极简、插件化、跨平台的现代桌面软件.通过自由选配丰富的插件,打造你得心应手的工具集合.当你熟悉它后,能够为你节约大量时间,让你可以更加专注地改变世界.</p><p>说白了就是个插件集合,非常方便好用的插件集合.</p><h3 id="支持的插件"><a href="#支持的插件" class="headerlink" title="支持的插件"></a>支持的插件</h3><blockquote><p>简单来说,就是很强大</p></blockquote><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201744.PNG" alt="Pic"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201747.PNG" alt="Pic"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201749.PNG" alt="Pic"></p><h3 id="设置页面"><a href="#设置页面" class="headerlink" title="设置页面"></a>设置页面</h3><blockquote><p>支持自定义快捷键</p></blockquote><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201754.PNG" alt="Pic"></p><hr><p>结语： 非常推荐</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/windows/">windows</category>
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7/">工具</category>
      
      <category domain="https://zztweb.top/tags/uTools/">uTools</category>
      
      <category domain="https://zztweb.top/tags/%E6%8F%92%E4%BB%B6/">插件</category>
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E9%9B%86/">工具集</category>
      
      
      <comments>https://zztweb.top/posts/1798eddd.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo-NexT添加点击爱心效果</title>
      <link>https://zztweb.top/posts/a32d7646.html</link>
      <guid>https://zztweb.top/posts/a32d7646.html</guid>
      <pubDate>Mon, 22 Apr 2019 14:08:11 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p>本文出处：<a href="https://asdfv1929.github.io/2018/01/26/click-love/">https://asdfv1929.github.io/2018/01/26/click-love/</a></p><p>感谢大佬提供的代码(<em>^_^</em>).</p></blockquote><h2 id="创建JS文件"><a href="#创建JS文件" class="headerlink" title="创建JS文件"></a><strong>创建JS文件</strong></h2><p>在<code>\themes\hexo-theme-next-master\source\js</code>目录中新建文件<code>clicklove.js</code><br>然后把下面的代码拷贝到这个js文件中</p><p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="引用JS文件"><a href="#引用JS文件" class="headerlink" title="引用JS文件"></a><strong>引用JS文件</strong></h2><p>在文件<code>\themes\hexo-theme-next-master\layout\_layout.swig</code>或文件<code>\themes\hexo-theme-next-master\layout\_partials\footer.swig</code>的<strong>末尾</strong>中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：在文件<code>_layout.swig</code>或<code>footer.swig</code>中添加引用代码均有效</p><p><del>本博客使用的是在<code>_layout.swig</code>文件末尾添加引用代码</del><br><del>本博客使用的是next自带的点击爆炸效果</del></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/next/">next</category>
      
      <category domain="https://zztweb.top/tags/%E6%A1%83%E5%BF%83%E6%95%88%E6%9E%9C/">桃心效果</category>
      
      
      <comments>https://zztweb.top/posts/a32d7646.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>markdown语法学习</title>
      <link>https://zztweb.top/posts/9757d07e.html</link>
      <guid>https://zztweb.top/posts/9757d07e.html</guid>
      <pubDate>Sat, 20 Apr 2019 05:19:48 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p>此文章为我自己在学习hexo过程中的积累与所得,如有不足,请指正.</p></blockquote><h2 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a><strong>markdown编辑器</strong></h2><p>个人推荐使用 <a href="https://visualstudio.microsoft.com/zh-hans/downloads/"><code>Visual Studio Code</code></a>简洁明了,使用方便,支持实时渲染.(其实是因为我懒得在折腾一个编辑器了(<em>^_^</em>) )</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>markdown的标题标记分为两种,由<code>#</code>和<code>= -</code>组成</p><ol><li><code>#</code>标记</li></ol><p>在标题前加<code>#</code>即可,是几级标题就加几个<code>#</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">##### 四级标题</span></span><br><span class="line"><span class="section">###### 五级标题</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202203.PNG" alt="标题"></p><ol start="2"><li><code>= -</code>标记</li></ol><p>在<code>标题下</code>加上任意个<code>=</code>代表一级标题,<code>-</code>代表二级标题</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">一级标题</span></span><br><span class="line"><span class="section">===</span></span><br><span class="line"></span><br><span class="line"><span class="section">二级标题</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202207.PNG" alt="标题"></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h2><p>标记为<code>&gt;</code>,注意标记和内容之间的空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; 例子</span><br><span class="line">&gt; 引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 这样可以空出一行</span><br><span class="line"></span><br><span class="line">&gt; 这样断开就是两个了</span><br><span class="line"></span><br><span class="line">&gt;&gt; 嵌套两层</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 嵌套多层</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><blockquote><p>例子<br>引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行.</p><p>这样可以空出一行</p></blockquote><blockquote><p>这样断开就是两个了</p></blockquote><blockquote><blockquote><p>嵌套两层</p></blockquote></blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>嵌套多层</p></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h2><p>列表分为<code>有序列表</code>和<code>无序列表</code></p><ol><li>有序列表</li></ol><p>使用<code>数字</code>和<code>.</code>表示有序列表,注意点号后有一个空格</p><blockquote><p>有趣的是：markdown中有序列表只认第一个序号,之后的序号由系统自动生成,所以之后的序号可以随便写.</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 这是第一个</span><br><span class="line"><span class="bullet">2.</span> 这是第二个</span><br><span class="line"><span class="bullet">1.</span> 这是第三个</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202215.PNG" alt="有序列表"></p><ol start="2"><li>无序列表</li></ol><p>标记符号<code>*</code>、<code>+</code>、<code>-</code>,注意符号和内容直接有一个空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 这是第一个</span><br><span class="line"><span class="bullet">+</span> 这是第二个</span><br><span class="line"><span class="bullet">-</span> 这是第三个</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202219.PNG" alt="无序列表"></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a><strong>分割线</strong></h2><p>markdown的分割线语法非常简单仅需三个以上的<code>-</code>或<code>*</code>即可</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">内容</span><br><span class="line"></span><br><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">**</span></span><br><span class="line"><span class="strong"></span></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><p>内容</p><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><strong>表格</strong></h2><p>markdown也提供了非常方便的制作表格的方式</p><blockquote><p>下面的表格每一行两边的<code>|</code>其实是可以省略的</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">|表头1|表头2|表头3|</span><br><span class="line">|---|---|---|</span><br><span class="line">|内容1|内容2|内容3|</span><br><span class="line">|内容4|内容5|内容6|</span><br><span class="line"></span><br><span class="line">----- 这里有分割线</span><br><span class="line"></span><br><span class="line">表头1|表头2|表头3</span><br><span class="line">---|---|---</span><br><span class="line">内容1|内容2|内容3</span><br><span class="line">内容4|内容5|内容6</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容4</td><td>内容5</td><td>内容6</td></tr></tbody></table><hr><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容4</td><td>内容5</td><td>内容6</td></tr></tbody></table><hr><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a><strong>链接</strong></h2><p>格式： <code>[链接描述](链接地址) 或者 &lt;链接地址&gt;</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com</span>)</span><br><span class="line"></span><br><span class="line"><span class="xml">&lt;https://www.baidu.com&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><p><a href="https://www.baidu.com/">百度</a></p><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a><strong>图片</strong></h2><p>格式： <code>![图片描述](图片地址)</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Pic</span>](<span class="link">https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202354.PNG</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202354.PNG" alt="Pic"></p><h2 id="插入音频和视频"><a href="#插入音频和视频" class="headerlink" title="插入音频和视频"></a><strong>插入音频和视频</strong></h2><blockquote><p>注：如果可以使用像B站和网易云的外链播放器请用之,毕竟播放音频和视频太消耗服务器资源</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### 视频插入</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=39478299&amp;bvid=BV1Vt41167id&amp;cid=69360718&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 音频插入</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">298</span> <span class="attr">height</span>=<span class="string">52</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=456869610&amp;auto=0&amp;height=32&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><h3 id="视频插入-Justin-Timberlake-Five-Hundred-Miles-mv"><a href="#视频插入-Justin-Timberlake-Five-Hundred-Miles-mv" class="headerlink" title="视频插入 Justin Timberlake - Five Hundred Miles-mv"></a>视频插入 Justin Timberlake - Five Hundred Miles-mv</h3><iframe src="//player.bilibili.com/player.html?aid=39478299&bvid=BV1Vt41167id&cid=69360718&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><hr><h3 id="音频插入-Justin-Timberlake-Five-Hundred-Miles-mp3"><a href="#音频插入-Justin-Timberlake-Five-Hundred-Miles-mp3" class="headerlink" title="音频插入 Justin Timberlake - Five Hundred Miles-mp3"></a>音频插入 Justin Timberlake - Five Hundred Miles-mp3</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=456869610&auto=0&height=32"></iframe><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a><strong>字体</strong></h2><p>markdown中可便捷地设置斜体和粗体和删除线和上下标文字,标记为<code>*</code>和<code>_</code>和<code>~</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="emphasis">_斜体_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">__粗体__</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">__<span class="emphasis">_粗斜体<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~删除线~~</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">**<span class="emphasis">*~~混合使用~~<span class="strong">**<span class="emphasis">*</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">这是<span class="xml"><span class="tag">&lt;<span class="name">sup</span>&gt;</span></span><span class="strong">**上标文字**</span><span class="xml"><span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">这是<span class="xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span></span><span class="strong">**~~下标文字~~**</span><span class="xml"><span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><p><em>斜体</em><br><em>斜体</em></p><p><strong>粗体</strong><br><strong>粗体</strong></p><p><em><strong>粗斜体</strong></em><br><em><strong>粗斜体</strong></em></p><p><del>删除线</del></p><p><em><strong><del>混合使用</del></strong></em></p><p>这是<sup><strong>上标文字</strong></sup></p><p>这是<sub><strong><del>下标文字</del></strong></sub></p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h2><p>代码按位置可分为两种,一种是行内代码段,另一种是代码区块</p><p>1.行内代码段</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码段<span class="code">`int a = 1;`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><p>代码段<code>int a = 1;</code></p><p>2.代码区块</p><p>代码区块可用三个“ ` ”或四个空格来标记</p><p>其中” ` “支持代码高亮</p><blockquote><p>代码来源：<a href="https://blog.csdn.net/chumengwa0046/article/details/89155084">https://blog.csdn.net/chumengwa0046/article/details/89155084</a> </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​``` c &gt;注意这里有空格</span><br><span class="line"># include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int a[] = &#123;900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500&#125;;</span><br><span class="line">    int n;  //存放数组a中元素的个数</span><br><span class="line">    int i;  //比较的轮数</span><br><span class="line">    int j;  //每轮比较的次数</span><br><span class="line">    int buf;  //交换数据时用于存放中间数据</span><br><span class="line">    n = sizeof(a) / sizeof(a[0]);  /*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/</span><br><span class="line">    for (i=0; i&lt;n-1; ++i)  //比较n-1轮</span><br><span class="line">    &#123;</span><br><span class="line">        for (j=0; j&lt;n-1-i; ++j)  //每轮比较n-1-i次,</span><br><span class="line">        &#123;</span><br><span class="line">            if (a[j] &lt; a[j+1])</span><br><span class="line">            &#123;</span><br><span class="line">                buf = a[j];</span><br><span class="line">                a[j] = a[j+1];</span><br><span class="line">                a[j+1] = buf;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for (i=0; i&lt;n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%d\x20&quot;, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">  &gt;这里是空四个空格</span><br><span class="line">    # include &lt;stdio.h&gt;</span><br><span class="line">    int main(void)</span><br><span class="line">    &#123;</span><br><span class="line">        int a[] = &#123;900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500&#125;;</span><br><span class="line">        int n;  //存放数组a中元素的个数</span><br><span class="line">        int i;  //比较的轮数</span><br><span class="line">        int j;  //每轮比较的次数</span><br><span class="line">        int buf;  //交换数据时用于存放中间数据</span><br><span class="line">        n = sizeof(a) / sizeof(a[0]);  /*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/</span><br><span class="line">        for (i=0; i&lt;n-1; ++i)  //比较n-1轮</span><br><span class="line">        &#123;</span><br><span class="line">            for (j=0; j&lt;n-1-i; ++j)  //每轮比较n-1-i次,</span><br><span class="line">                &#123;</span><br><span class="line">                if (a[j] &lt; a[j+1])</span><br><span class="line">                &#123;</span><br><span class="line">                    buf = a[j];</span><br><span class="line">                    a[j] = a[j+1];</span><br><span class="line">                    a[j+1] = buf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (i=0; i&lt;n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%d\x20&quot;, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123;<span class="number">900</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">-58</span>, <span class="number">34</span>, <span class="number">76</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">56</span>, <span class="number">-70</span>, <span class="number">35</span>, <span class="number">-234</span>, <span class="number">532</span>, <span class="number">543</span>, <span class="number">2500</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n;  <span class="comment">//存放数组a中元素的个数</span></span><br><span class="line">    <span class="keyword">int</span> i;  <span class="comment">//比较的轮数</span></span><br><span class="line">    <span class="keyword">int</span> j;  <span class="comment">//每轮比较的次数</span></span><br><span class="line">    <span class="keyword">int</span> buf;  <span class="comment">//交换数据时用于存放中间数据</span></span><br><span class="line">    n = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);  <span class="comment">/*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; ++i)  <span class="comment">//比较n-1轮</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;n<span class="number">-1</span>-i; ++j)  <span class="comment">//每轮比较n-1-i次,</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &lt; a[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                buf = a[j];</span><br><span class="line">                a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>] = buf;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\x20&quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code># include &lt;stdio.h&gt;int main(void)&#123;    int a[] = &#123;900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500&#125;;    int n;  //存放数组a中元素的个数    int i;  //比较的轮数    int j;  //每轮比较的次数    int buf;  //交换数据时用于存放中间数据    n = sizeof(a) / sizeof(a[0]);  /*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/    for (i=0; i&lt;n-1; ++i)  //比较n-1轮    &#123;        for (j=0; j&lt;n-1-i; ++j)  //每轮比较n-1-i次,            &#123;            if (a[j] &lt; a[j+1])            &#123;                buf = a[j];                a[j] = a[j+1];                a[j+1] = buf;            &#125;        &#125;    &#125;    for (i=0; i&lt;n; ++i)    &#123;        printf(&quot;%d\x20&quot;, a[i]);    &#125;    printf(&quot;\n&quot;);    return 0;&#125;</code></pre><hr><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong>注释</strong></h2><p>注释是给自己看的,预览时也不会出现,当然发布出去别人也不会看见.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注释--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>markdown 可以利用反斜杠\来插入一些在语法中有其它意义的符号</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\<span class="emphasis">*\*</span>这里的星号没有markdown中标记作用\<span class="emphasis">*\*</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下</p><hr><p>**这里的星号没有markdown中标记作用**</p><hr>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/hexo/">hexo</category>
      
      
      <category domain="https://zztweb.top/tags/hexo/">hexo</category>
      
      <category domain="https://zztweb.top/tags/markdown/">markdown</category>
      
      <category domain="https://zztweb.top/tags/markdown%E8%AF%AD%E6%B3%95/">markdown语法</category>
      
      
      <comments>https://zztweb.top/posts/9757d07e.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>分享一个windows软件卸载工具-Geek</title>
      <link>https://zztweb.top/posts/f1266071.html</link>
      <guid>https://zztweb.top/posts/f1266071.html</guid>
      <pubDate>Fri, 19 Apr 2019 14:02:21 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>geek是一个<strong>体积超小</strong>而又非常强大的windows<strong>免费</strong>软件卸载工具</p><p>重点是免费版<strong>完全绿色无需安装</strong>,<strong>下载即用</strong>,<strong>无广告</strong>,非常良心.</p><p>官网有收费pro版,不过我觉得日常使用免费版就足够了.</p><p>下载链接： <a href="https://geekuninstaller.com/">官网地址</a></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      <category domain="https://zztweb.top/tags/windows/">windows</category>
      
      <category domain="https://zztweb.top/tags/geek/">geek</category>
      
      <category domain="https://zztweb.top/tags/%E8%BD%AF%E4%BB%B6%E5%8D%B8%E8%BD%BD/">软件卸载</category>
      
      
      <comments>https://zztweb.top/posts/f1266071.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux中的chattr命令</title>
      <link>https://zztweb.top/posts/534d917a.html</link>
      <guid>https://zztweb.top/posts/534d917a.html</guid>
      <pubDate>Wed, 17 Apr 2019 14:06:03 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p>注:本文全程参考百度文库</p></blockquote><ul><li>语法：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chattr [-RV][-v&lt;版本编号&gt;][+/-/=&lt;属性&gt;][文件或目录...]</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>属性说明：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A：即Atime,告诉系统不要修改对这个文件的最后访问时间.</span><br><span class="line">S：即Sync,一旦应用程序对这个文件执行了写操作,使系统立刻把修改的结果写到磁盘.</span><br><span class="line">a：即Append Only,系统只允许在这个文件之后追加数据,不允许任何进程覆盖或截断这个文件.如果目录具有这个属性,系统将只允许在这个目录下建立和修改文件,而不允许删除任何文件.</span><br><span class="line">b：不更新文件或目录的最后存取时间.</span><br><span class="line">c：将文件或目录压缩后存放.</span><br><span class="line">d：当dump程序执行时,该文件或目录不会被dump备份.</span><br><span class="line">D:检查压缩文件中的错误.</span><br><span class="line">i：即Immutable,系统不允许对这个文件进行任何的修改.如果目录具有这个属性,那么任何的进程只能修改目录之下的文件,不允许建立和删除文件.</span><br><span class="line">s：彻底删除文件,不可恢复,因为是从磁盘上删除,然后用0填充文件所在区域.</span><br><span class="line">u：当一个应用程序请求删除这个文件,系统会保留其数据块以便以后能够恢复删 除这个文件,用来防止意外删除文件或目录.</span><br><span class="line">t:文件系统支持尾部合并(tail-merging).</span><br><span class="line">X：可以直接访问压缩文件的内容.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>参数说明：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-R 递归处理,将指定目录下的所有文件及子目录一并处理.</span><br><span class="line">-v&lt;版本编号&gt; 设置文件或目录版本.</span><br><span class="line">-V 显示指令执行过程.</span><br><span class="line">+&lt;属性&gt; 开启文件或目录的该项属性.</span><br><span class="line">-&lt;属性&gt; 关闭文件或目录的该项属性.</span><br><span class="line">=&lt;属性&gt; 指定文件或目录的该项属性.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>例子：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chattr +i file.ini // 命令防止系统中某个关键文件被修改;</span><br><span class="line">chattr +a file.ini //  让某个文件只能往里面追加数据,但不能删除.</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/Linux/">Linux</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/chattr/">chattr</category>
      
      <category domain="https://zztweb.top/tags/Linux%E5%91%BD%E4%BB%A4/">Linux命令</category>
      
      
      <comments>https://zztweb.top/posts/534d917a.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>分享一个免费内网穿透工具-SAKURA-FRP</title>
      <link>https://zztweb.top/posts/c25dba02.html</link>
      <guid>https://zztweb.top/posts/c25dba02.html</guid>
      <pubDate>Wed, 17 Apr 2019 13:59:08 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><blockquote><p><a href="https://www.natfrp.org/">官方网站-Sakura Frp</a></p></blockquote><ul><li><p>支持自定义域名(通过CNAME解析官方服务器)</p></li><li><p>支持免备案服务</p></li><li><p>免费用户映射数量上限为5-o(╥﹏╥)o</p></li><li><p>支持映射：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TCP 映射</span><br><span class="line">基础的 TCP 映射,适用于大多数服务,例如远程桌面、SSH、Minecraft、泰拉瑞亚等</span><br><span class="line">UDP 映射</span><br><span class="line">基础的 UDP 映射,适用于域名解析、部分基于 UDP 协议的游戏等</span><br><span class="line">HTTP 映射</span><br><span class="line">搭建网站专用映射,80 端口访问,只能使用国外线路建站.</span><br><span class="line">HTTPS 映射</span><br><span class="line">带有 SSL 加密的网站映射,443 端口访问,可以使用国内/国外线路建站.</span><br><span class="line">XTCP 映射</span><br><span class="line">客户端之间点对点 (P2P) 连接协议,流量不经过服务器,适合大流量传输的场景,需要两台设备之间都运行一个客户端.</span><br><span class="line">STCP 映射</span><br><span class="line">安全交换 TCP 连接协议,基于 TCP,访问此服务的用户也需要运行一个客户端,才能建立连接,流量由服务器转发.</span><br><span class="line">BungeeCord 映射</span><br><span class="line">此类型映射用于解决传统端口转发后 MC 服务器玩家 IP 全部变成 127.0.0.1 的问题.</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>个人感受：速度不错,稳定性很高,非常推荐.</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/">工具分享</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/Sakura-Frp/">Sakura Frp</category>
      
      <category domain="https://zztweb.top/tags/frp/">frp</category>
      
      <category domain="https://zztweb.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">内网穿透</category>
      
      <category domain="https://zztweb.top/tags/%E5%85%8D%E8%B4%B9%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">免费内网穿透</category>
      
      
      <comments>https://zztweb.top/posts/c25dba02.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>解决Nginx下wordpress伪静态后文章/后台页无法访问的问题</title>
      <link>https://zztweb.top/posts/449afa2b.html</link>
      <guid>https://zztweb.top/posts/449afa2b.html</guid>
      <pubDate>Sat, 13 Apr 2019 15:14:25 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>在Nginx的配置文档中添加以下代码：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /yourweb 把这里更改为你的网站根目录;  </span><br><span class="line">        <span class="attribute">if</span> (-f $request_filename/index.html)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.html <span class="literal">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">if</span> (-f $request_filename/index.php)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.php;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="attribute">if</span> (!-f $request_filename)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) /index.php;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">rewrite</span> /wp-admin$ $scheme://$host$uri/ <span class="literal">permanent</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中需要更改自己的网站根目录</p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3/">建站相关</category>
      
      
      <category domain="https://zztweb.top/tags/Nginx/">Nginx</category>
      
      <category domain="https://zztweb.top/tags/wordpress/">wordpress</category>
      
      <category domain="https://zztweb.top/tags/%E4%BC%AA%E9%9D%99%E6%80%81/">伪静态</category>
      
      
      <comments>https://zztweb.top/posts/449afa2b.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux下设置Sakura Frp为服务,开机自动启动</title>
      <link>https://zztweb.top/posts/a01b6c7d.html</link>
      <guid>https://zztweb.top/posts/a01b6c7d.html</guid>
      <pubDate>Fri, 12 Apr 2019 13:23:50 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://api.ixiaowai.cn/gqapi/gqapi.php" alt="PIC"></p><p>本文转载自:<a href="https://www.zerobbs.net/thread/5">Sarkura Frp官网教程</a></p><p>开始设置服务,首先打开终端,执行命令：</p><p><code>vi /etc/systemd/system/sakurafrp.service</code></p><p>按下 a 进入编辑模式,复制以下内容并粘贴到 vi中:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Sakura Frp Client</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">WorkingDirectory=/你的客户端储存位置/</span><br><span class="line">LimitNOFILE=4096</span><br><span class="line">PIDFile=/var/run/sakurafrp/client.pid</span><br><span class="line">ExecStart=/你的客户端储存位置/客户端文件名 --su=你的账号 --sp=你的密码 --sid=你要选择的服务器的ID(就是服务器列表左侧的数字)</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitInterval=600</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例如我的客户端储存在 /root/sakurafrp/,文件名是 Sakura_frpc_linux_amd64,账号是 233,密码是 888,选择的服务器是宁波电信,ID 为 0,那么我就填写以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Sakura Frp Client</span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">WorkingDirectory=/root/sakurafrp/</span><br><span class="line">LimitNOFILE=4096</span><br><span class="line">PIDFile=/var/run/sakurafrp/client.pid</span><br><span class="line">ExecStart=/root/sakurafrp/Sakura_frpc_linux_amd64 --su=233 --sp=888 --sid=0</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitInterval=600</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后按 Esc,接着输入 ZZ 保存退出.</p><p>接着输入以下命令来创建服务：</p><p><code>systemctl daemon-reload</code></p><p>接下来启动服务：</p><p><code>systemctl start sakurafrp</code></p><p>将服务设置为开机启动：</p><p><code>systemctl enable sakurafrp</code></p><p>如果要停止运行客户端,只需要输入：</p><p><code>systemctl stop sakurafrp</code></p><p>如果要禁止开机启动,输入：</p><p><code>systemctl disable sakurafrp</code></p>]]></content:encoded>
      
      
      <category domain="https://zztweb.top/categories/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3/">建站相关</category>
      
      
      <category domain="https://zztweb.top/tags/Linux/">Linux</category>
      
      <category domain="https://zztweb.top/tags/Sakura-Frp/">Sakura Frp</category>
      
      <category domain="https://zztweb.top/tags/frp/">frp</category>
      
      <category domain="https://zztweb.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">内网穿透</category>
      
      
      <comments>https://zztweb.top/posts/a01b6c7d.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
